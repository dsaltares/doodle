{"version":3,"sources":["store/socket/index.ts","components/MenuContainer/MenuContainer.styles.ts","components/MenuContainer/MenuContainer.tsx","components/Emoji/Emoji.tsx","components/Menu/Menu.styles.ts","components/Menu/Menu.tsx","store/game/selectors.ts","store/game/index.ts","components/Menu/Menu.container.ts","components/Connecting/Connecting.styles.ts","components/Connecting/Connecting.tsx","components/Connecting/Connecting.container.ts","components/MainContent/MainContent.styles.ts","components/MainContent/MainContent.tsx","components/InitialPhase/InitialPhase.styles.ts","components/InitialPhase/InitialPhase.tsx","utils/pluralize.ts","components/InitialPhase/InitialPhase.container.ts","store/game/constants.ts","components/ConceptListItem/ConceptListItem.tsx","components/ConceptChoicePhase/ConceptChoicePhase.tsx","components/ConceptChoicePhase/ConceptChoicePhase.container.ts","components/ToolBarButton/ToolBarButton.styles.ts","components/ToolBarButton/ToolBarButton.tsx","components/ExpandableToolBarButton/ExpandableToolBarButton.styles.ts","components/ExpandableToolBarButton/ExpandableToolBarButton.tsx","components/LineWidthPickerButton/LineWidthPickerButton.styles.ts","components/LineWidthPickerButton/LineWidthPickerButton.tsx","components/ColorPickerButton/ColorPickerButton.tsx","components/ToolPickerButton/ToolPickerButton.tsx","components/ToolBar/ToolBar.tsx","components/Editor/Editor.styled.ts","components/Editor/Editor.tsx","components/DrawPhase/DrawPhase.tsx","components/DrawPhase/DrawPhase.container.ts","components/GuessPhase/GuessPhase.styles.ts","components/GuessPhase/GuessPhase.tsx","components/GuessPhase/GuessPhase.container.ts","components/CreateEntryPhase/CreateEntryPhase.tsx","components/CreateEntryPhase/CreateEntryPhase.container.ts","components/EntryChoicePhase/EntryChoicePhase.styles.ts","components/EntryCard/EntryCard.styles.ts","components/EntryCard/EntryCard.tsx","components/DoodleEntryCard/DoodleEntryCard.tsx","components/DoodleEntryCard/DoodleEntryCard.container.ts","components/ConceptEntryCard/ConceptEntryCard.tsx","components/ConceptEntryCard/ConceptEntryCard.container.ts","components/EntryChoicePhase/EntryChoicePhase.tsx","components/EntryChoicePhase/EntryChoicePhase.container.ts","components/Game/Game.tsx","components/Game/Game.container.ts","components/JoinMenu/JoinMenu.tsx","components/JoinMenu/JoinMenu.container.ts","components/TopBar/TopBar.styles.ts","components/TopBarTitle/TopBarTitle.tsx","components/TopBarLinks/TopBarLinks.styles.ts","components/TopBarLinks/github.svg","components/TopBarLinks/ko-fi.svg","components/HowToPlayDialog/InstructionListItem.styles.ts","components/HowToPlayDialog/InstructionListItem.tsx","components/HowToPlayDialog/HowToPlayDialog.tsx","components/TopBarLinks/TopBarLinks.tsx","components/TopBar/TopBar.tsx","components/SideBar/SideBar.styles.ts","components/PlayerListItem/PlayerListItem.styles.ts","components/PlayerListItem/PlayerListItem.tsx","components/PlayerListItem/PlayerListItem.container.ts","components/PlayerList/PlayerList.styles.ts","components/PlayerList/PlayerList.tsx","components/PlayerList/PlayerList.container.ts","components/SideBar/SideBar.tsx","components/App/App.styles.ts","utils/useMountEffect.ts","components/App/App.tsx","components/App/App.container.ts","store/endpoints.ts","store/reducers.ts","store/index.ts","serviceWorker.ts","index.tsx"],"names":["socket","useStyles","makeStyles","theme","paper","padding","spacing","maxWidth","MenuContainer","children","classes","Grid","container","direction","justify","alignItems","Paper","variant","className","item","xs","Emoji","symbol","label","role","aria-label","aria-hidden","buttonGroup","flex","button","withRouter","startGame","history","useState","mode","setMode","name","setName","code","setCode","hasName","length","hasGameCode","canStartGame","codeField","TextField","onChange","event","target","value","fullWidth","onSubmit","preventDefault","goToGame","push","ToggleButtonGroup","_event","newMode","exclusive","ToggleButton","Button","type","color","disabled","socketSlice","createSlice","initialState","status","hasError","reducers","connectToSocketStarted","state","connectToSocketSuccess","connectToSocketFailed","disconnected","actions","reducer","socketDeferred","defer","playerIds","game","gameState","Object","keys","players","player","id","config","startingGame","choosingConcept","undefined","submittedEntry","acknowledgedWinner","alerts","gameSlice","setPlayerName","action","payload","setGamePlayer","leaveGame","chosenEntry","chooseConcept","submitEntry","chooseEntry","acknowledgeWinner","updateGame","updateBy","alert","ignorePlayers","includes","lastUpdate","dismissAlert","shift","joinGame","dispatch","a","connect","uuid","createGame","Menu","messageEmoji","fontSize","Connecting","severity","message","Alert","icon","CircularProgress","props","width","MainContent","buttonContainer","paddingTop","InitialPhase","startVisible","startDisabled","onStart","gameFull","gameUrl","startButton","onClick","alertOpen","setAlertOpen","handleAlertClosed","Typography","copy","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","pluralize","singular","plural","count","getMessage","missingPlayers","createdBy","numPlayers","Math","max","createdGame","location","window","protocol","host","promise","emit","ConceptListItem","concept","selected","ListItem","divider","ListItemAvatar","ListItemText","primary","ConceptChoicePhase","concepts","selectedConcept","onChooseConcept","List","map","key","round","phase","playerId","choices","root","borderRadius","ToolBarButton","title","Tooltip","placement","IconButton","ExpandableToolBarButton","renderContent","anchorEl","setAnchorEl","handleClose","Boolean","Fragment","currentTarget","Popover","transformOrigin","close","height","marginTop","valueText","LineWidthPickerButton","lineWidth","onLineWidthChange","handleChange","_e","newValue","Array","isArray","Slider","getAriaValueText","valueLabelDisplay","step","min","ColorPickerButton","onColorChange","style","onChangeComplete","hex","handleOnChangeComplete","getIconForTool","tool","ToolPickerButton","onToolchange","newTool","ToolBar","onToolChange","canUndo","onUndo","canRedo","onRedo","onEraseAll","SketchField","styled","SketchFieldBase","border","Editor","sketch","bind","onSketchChange","this","setState","undo","redo","clear","canUndoNow","canRedoNow","toDataURL","editorColor","ref","lineColor","React","Component","DrawPhase","submitted","editorRef","createRef","submittedMessage","editor","current","image","export","index","playerIdx","order","indexOf","sourceIdx","sourcePlayerId","stacks","entries","data","sourcePlayerName","lastEntry","author","hasSubmitted","drawing","entry","submitDrawing","GuessPhase","guess","setGuess","src","alt","previousEntry","getEntry","playerName","submitConcept","CreateEntryPhase","entryPaper","selectedEntry","borderWidth","borderColor","palette","main","choicesContainer","img","avatar","backgroundColor","marginRight","EntryCard","content","CardHeader","Avatar","avatarStyle","topType","accessoriesType","hairColor","facialHairType","clotheType","clotheColor","eyeType","eyebrowType","mouthType","skinColor","wrapped","CardActionArea","DoodleEntryCard","CardMedia","component","ownProps","ConceptEntryCard","CardContent","EntryChoicePhase","stackPlayerName","currentPlayerChooses","chosenPlayerId","chosenPlayerName","acknowledged","onChooseEntry","onAcknowledge","drawingEntry","otherEntries","slice","nextButton","elevation","chosen","entryCard","stackPlayerId","stack","acknowledgedBy","targetPlayer","Game","unblock","onBeforeUnload","e","returnValue","addEventListener","block","removeEventListener","leave","connected","phaseName","alertComponent","renderAlert","_dispatch","getState","useParams","handleGoClicked","params","JoinMenu","appBar","zIndex","drawer","drawerButton","breakpoints","up","display","TopBarTitle","Hidden","smUp","implementation","noWrap","xsDown","iconButton","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","viewBox","ForwardRef","forwardRef","emoji","InstructionListItem","text","Instructions","HowToPlayDialog","useTheme","fullScreen","useMediaQuery","down","Dialog","aria-labelledby","DialogTitle","DialogContent","openUrl","url","TopBarLinks","helpOpen","setHelpOpen","startIcon","SvgIcon","href","TopBar","onToggleDrawer","AppBar","position","Toolbar","edge","flexShrink","drawerPaper","drawerContainer","overflow","statusEmojis","Ready","Looking","Thinking","Guessing","Drawing","PlayerItem","points","secondary","ListItemSecondaryAction","getPlayerState","createdByCurrentPlayer","createPhase","targetPlayerIdx","targetPlayerId","find","choicePhase","isPlayerTurn","alreadyChosen","selectors","PlayerListItem","PlayerSkeleton","Skeleton","PlayerList","visible","minPlayers","maxPlayers","gameStarted","remainingPlayers","skeletons","from","subheader","ListSubheader","SideBar","drawerOpen","Drawer","ModalProps","keepMounted","flexGrow","useMountEffect","fn","useEffect","App","setDrawerOpen","exact","path","subscribe","on","console","log","io","resolve","forEach","rootReducer","combineReducers","store","configureStore","devTools","process","hostname","match","ReactDOM","render","CssBaseline","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.962fb791.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport io from 'socket.io-client';\nimport defer from 'p-defer';\nimport { AppDispatch } from '..';\nimport { SocketState } from \"./types\";\nimport { LIVE_SERVER_SOCKET } from '../endpoints';\n\nconst initialState: SocketState = {\n  status: 'disconnected',\n  hasError: false,\n}\n\nconst socketSlice = createSlice({\n  name: 'socket',\n  initialState,\n  reducers: {\n    connectToSocketStarted: state => {\n      state.status = 'connecting';\n    },\n    connectToSocketSuccess: (state) => {\n      state.status = 'connected';\n      state.hasError = false;\n    },\n    connectToSocketFailed: state => {\n      state.status = 'error';\n      state.hasError = true;\n    },\n    disconnected: state => {\n      state.status = 'disconnected';\n      state.hasError = true;\n    },\n  }\n});\n\nconst { actions, reducer } = socketSlice;\n\nexport default reducer;\n\nexport let socket: SocketIOClient.Socket;\n\nexport const socketDeferred = defer<SocketIOClient.Socket>();\n\nexport const connect = (subscribe: (socket: SocketIOClient.Socket) => void) => async (dispatch: AppDispatch) => {\n  dispatch(actions.connectToSocketStarted());\n\n  socket = io(LIVE_SERVER_SOCKET);\n  socketDeferred.resolve(socket);\n\n  const successEvents = ['connect', 'reconnect'];\n  successEvents.forEach(event => {\n    socket.on(event, () => {\n      dispatch(actions.connectToSocketSuccess());\n      subscribe(socket);\n    });\n  });\n\n  const errorEvents = ['connect_error', 'connect_timeout', 'error', 'disconnected'];\n  errorEvents.forEach(event => {\n    socket.on(event, () => {\n      dispatch(actions.connectToSocketFailed());\n    });\n  });\n\n  socket.on('reconnecting', () => {\n    dispatch(actions.connectToSocketStarted());\n  });\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(3),\n    maxWidth: 500,\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport useStyles from './MenuContainer.styles';\n\ntype Props = {\n  centered?: boolean,\n};\n\nconst MenuContainer: FunctionComponent<Props> = ({\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n      <Paper variant=\"outlined\" className={classes.paper}>\n        <Grid item xs={12}>\n          <Grid container direction=\"column\" spacing={2}>\n            {children}\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default MenuContainer;\n","import React, { FunctionComponent } from 'react';\n\ntype Props = {\n  symbol: string,\n  label?: string,\n  className?: string,\n}\n\nconst Emoji: FunctionComponent<Props> = ({\n  symbol,\n  label,\n  className,\n}) => (\n  <span\n    className={className}\n    role=\"img\"\n    aria-label={label}\n    aria-hidden={label ? 'false' : 'true'}\n  >\n    {symbol}\n  </span>\n);\n\nexport default Emoji;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  buttonGroup: {\n    flex: 1,\n  },\n  button: {\n    flex: 1,\n  }\n}));\n\nexport default useStyles;\n","import React, {\n  useState,\n  FunctionComponent,\n  FormEvent,\n} from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport MenuContainer from '../MenuContainer';\nimport Emoji from '../Emoji';\nimport useStyles from './Menu.styles';\n\nexport type GameMode = 'newGame' | 'joinGame';\n\nexport type StartGameParams = {\n  mode: GameMode,\n  name: string,\n  code: string,\n  goToGame: (code: string) => any,\n}\n\ninterface Props extends RouteComponentProps<any> {\n  startGame: (params: StartGameParams) => void,\n}\n\nconst Menu: FunctionComponent<Props> = ({\n  startGame,\n  history,\n}) => {\n  const classes = useStyles();\n\n  const [mode, setMode] = useState('newGame');\n  const handleModeChange = (\n    (_event: any, newMode: string) => setMode(newMode)\n  );\n\n  const [name, setName] = useState('');\n  const handleNameChange = (\n    (event:React.ChangeEvent<HTMLInputElement>) => setName(event.target.value)\n  );\n\n  const [code, setCode] = useState('');\n  const handleGameCodeChange = (\n    (event:React.ChangeEvent<HTMLInputElement>) => setCode(event.target.value)\n  );\n\n  const hasName = name.length > 0;\n  const hasGameCode = code.length > 0;\n  const canStartGame = hasName && (mode === 'newGame' || hasGameCode);\n\n  const handleGoClicked = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (canStartGame) {\n      startGame({\n        mode: mode as GameMode,\n        name,\n        code,\n        goToGame: (code: string) => history.push(`/game/${code}`),\n      });\n    }\n  };\n\n  const codeField = mode === 'joinGame'\n    ? (\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          label=\"Game code\"\n          onChange={handleGameCodeChange}\n          fullWidth\n        />\n      </Grid>\n    )\n    : null;\n\n  return (\n    <MenuContainer>\n      <form onSubmit={handleGoClicked}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Grid container direction=\"row\" justify=\"center\">\n              <ToggleButtonGroup\n                value={mode}\n                onChange={handleModeChange}\n                exclusive\n                aria-label=\"game mode\"\n                className={classes.buttonGroup}\n              >\n                <ToggleButton value=\"newGame\" className={classes.button}>\n                  <Emoji symbol=\"✏️\"/>\n                  New Game\n                </ToggleButton>\n                <ToggleButton value=\"joinGame\" className={classes.button}>\n                  <Emoji symbol=\"👥\"/>\n                  <span>Join Game</span>\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              label=\"Name\"\n              value={name}\n              onChange={handleNameChange}\n              fullWidth\n            />\n          </Grid>\n          {codeField}\n          <Grid item xs={12}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!canStartGame}\n            >\n              <Emoji symbol=\"🙌\"/>\n              <span>Go!</span>\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </MenuContainer>\n  );\n};\n\nexport default withRouter(Menu);\n","import { RootState } from \"../reducers\";\nimport { Player } from \"./types\";\n\nexport const playerIds = (state: RootState): string[] => {\n  if (!state.game.gameState) {\n    return [];\n  }\n  return Object.keys(state.game.gameState.players);\n};\n\nexport const player = (state: RootState, id: string): Player | null => {\n  if (!state.game.gameState) {\n    return null;\n  }\n  return state.game.gameState.players[id];\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuid } from 'uuid';\nimport { AppDispatch, AppGetState } from '..';\nimport { socketDeferred } from '../socket';\nimport {\n  GameSliceState,\n  CreateGameParams,\n  GameJoinedEvent,\n  GameUpdatedEvent,\n  JoinGameParams,\n} from \"./types\";\nimport * as selectors from './selectors';\n\nconst initialState: GameSliceState = {\n  config: {},\n  startingGame: false,\n  choosingConcept: undefined,\n  submittedEntry: false,\n  acknowledgedWinner: false,\n  alerts: [],\n}\n\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    setPlayerName: (state, action: PayloadAction<string>) => {\n      state.config.name = action.payload;\n    },\n    setCode: (state, action: PayloadAction<string>) => {\n      state.config.code = action.payload;\n    },\n    setGamePlayer: (state, action: PayloadAction<GameJoinedEvent>) => {\n      state.player = action.payload.player;\n    },\n    leaveGame: (state) => {\n      state.config = {\n        code: undefined,\n        name: undefined,\n      };\n      state.player = undefined;\n      state.gameState = undefined;\n      state.startingGame = false;\n      state.choosingConcept = undefined;\n      state.submittedEntry = false;\n      state.chosenEntry = undefined;\n      state.acknowledgedWinner = false;\n      state.alerts = [];\n    },\n    startGame: (state) => {\n      state.startingGame = true;\n    },\n    chooseConcept: (state, action: PayloadAction<string>) => {\n      state.choosingConcept = action.payload;\n    },\n    submitEntry: (state) => {\n      state.submittedEntry = true;\n    },\n    chooseEntry: (state, action: PayloadAction<string>) => {\n      state.chosenEntry = action.payload;\n    },\n    acknowledgeWinner: (state) => {\n      state.acknowledgedWinner = true;\n    },\n    updateGame: (state, action: PayloadAction<GameUpdatedEvent>) => {\n      const {\n        payload: { updateBy, gameState, alert },\n      } = action;\n\n      if (updateBy === state.player) {\n        state.startingGame = false;\n        state.choosingConcept = undefined;\n        state.submittedEntry = false;\n        state.chosenEntry = undefined;\n        state.acknowledgedWinner = false;\n      }\n\n      if (alert && !alert.ignorePlayers.includes(state.player as string)) {\n        state.alerts.push(alert);\n      }\n\n      if (state.gameState && state.gameState.lastUpdate > gameState.lastUpdate) {\n        return state;\n      }\n      state.gameState = gameState;\n    },\n    dismissAlert: (state) => {\n      if (state.alerts.length > 0) {\n        state.alerts.shift();\n      }\n    }\n  },\n});\n\nconst { actions, reducer } = gameSlice;\n\nexport default reducer;\n\nexport const subscribe = (dispatch: AppDispatch, socket: SocketIOClient.Socket) => {\n  socket.on('connectedToGame', (event: GameJoinedEvent) => {\n    console.log('connectedToGame:', event);\n    dispatch(actions.setGamePlayer(event));\n  });\n\n  socket.on('gameUpdated', (event: GameUpdatedEvent) => {\n    console.log('gameUpdated:', event);\n\n    dispatch(actions.updateGame(event));\n  });\n\n  socket.on('gameDoesNotExist', () => {\n    console.log('gameDoesNotExist');\n    dispatch(actions.leaveGame());\n  });\n\n  socket.on('disconnect', () => {\n    console.log('disconnect');\n    dispatch(actions.leaveGame());\n  });\n};\n\nexport const createGame = (\n  { name, goToGame }: CreateGameParams,\n)=> async (dispatch: AppDispatch) => {\n  const code = uuid();\n  dispatch(joinGame({ code, name, goToGame }));\n};\n\nexport const joinGame = (\n  { code, name, goToGame }: JoinGameParams,\n)=> async (dispatch: AppDispatch) => {\n  dispatch(actions.setPlayerName(name));\n  dispatch(actions.setCode(code));\n  goToGame(code);\n};\n\nexport const connectToGameChannel = () => async (\n  _dispatch: AppDispatch,\n  getState: AppGetState,\n) => {\n  const { game: { config: { name, code } } } = getState();\n  const socket = await socketDeferred.promise;\n  socket.emit('joinGame', { name, code });\n};\n\nexport const startGame = () => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.startGame());\n  const socket = await socketDeferred.promise;\n  socket.emit('startGame', {});\n};\n\nexport const leaveGame = () => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.leaveGame());\n  const socket = await socketDeferred.promise;\n  socket.emit('leaveGame', {});\n};\n\nexport const chooseConcept = (concept: string) => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.chooseConcept(concept));\n  const socket = await socketDeferred.promise;\n  socket.emit('chooseConcept', { concept });\n};\n\nexport const submitDrawing = (drawing: string) => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.submitEntry());\n  const socket = await socketDeferred.promise;\n  socket.emit('submitEntry', {\n    entry: { type: 'drawing', drawing }\n  });\n};\n\nexport const submitConcept = (concept: string) => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.submitEntry());\n  const socket = await socketDeferred.promise;\n  socket.emit('submitEntry', {\n    entry: { type: 'concept', concept }\n  });\n};\n\nexport const chooseEntry = (targetPlayer: string) => async(\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.chooseEntry(targetPlayer));\n  const socket = await socketDeferred.promise;\n  socket.emit('chooseEntry', { targetPlayer });\n};\n\nexport const acknowledgeWinner = () => async(\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.acknowledgeWinner());\n  const socket = await socketDeferred.promise;\n  socket.emit('acknowledgeWinner', {});\n};\n\nconst { dismissAlert } = actions;\nexport { dismissAlert };\n\nexport { selectors };\n","import { connect } from 'react-redux';\n\nimport Menu, { StartGameParams } from './Menu';\nimport { AppDispatch } from '../../store';\nimport { createGame, joinGame } from '../../store/game';\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  startGame: ({ mode, name, code, goToGame }: StartGameParams) => {\n    if (mode === 'newGame') {\n      dispatch(createGame({ name, goToGame }));\n    } else {\n      dispatch(joinGame({ name, code, goToGame }));\n    }\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(Menu);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    maxWidth: 500,\n  },\n  messageEmoji: {\n    fontSize: 24,\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useStyles from './Connecting.styles';\nimport Emoji from '../Emoji';\n\ntype Props = {\n  hasError: boolean,\n};\n\nconst Connecting: FunctionComponent<Props> = ({\n  hasError,\n}) => {\n  const classes = useStyles();\n  const severity = hasError ? 'error' : 'info';\n  const message = hasError\n    ? (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid item>\n          <Emoji className={classes.messageEmoji} symbol=\"🙈\" />\n        </Grid>\n        <Grid item>\n          Failed to connect, retrying...\n        </Grid>\n      </Grid>\n    )\n    : 'Connecting...';\n  return (\n    <Grid item xs={12}>\n      <Alert\n        icon={false}\n        className={classes.alert}\n        variant=\"outlined\"\n        severity={severity}\n      >\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid item>\n            <CircularProgress color=\"inherit\" />\n          </Grid>\n          <Grid item>\n            {message}\n          </Grid>\n        </Grid>\n      </Alert>\n    </Grid>\n  );\n};\n\nexport default Connecting;\n","import { connect } from 'react-redux';\n\nimport Connecting from './Connecting';\nimport { RootState } from '../../store/reducers';\n\nconst mapStateToProps = (state: RootState) => ({\n  hasError: state.socket.hasError,\n});\n\nexport default connect(mapStateToProps)(Connecting);\n","import { makeStyles } from '@material-ui/core/styles';\n\ntype PaperProps = {\n  width: number,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: (props: PaperProps) => ({\n    padding: theme.spacing(3),\n    maxWidth: props.width,\n  }),\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport useStyles from './MainContent.styles';\n\ntype Props = {\n  width?: number,\n};\n\nconst MainContent: FunctionComponent<Props> = ({\n  children,\n  width = 500,\n}) => {\n  const classes = useStyles({ width });\n\n  return (\n    <Grid item xs={12}>\n      <Paper variant=\"outlined\" className={classes.paper}>\n        <Grid container direction=\"column\" spacing={2}>\n          {children}\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default MainContent;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  buttonContainer: {\n    paddingTop: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import React, {\n  FunctionComponent,\n  useState,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport copy from 'copy-to-clipboard';\n\nimport MainContent from '../MainContent';\nimport Emoji from '../Emoji';\nimport useStyles from './InitialPhase.styles';\n\ntype Props = {\n  message: string,\n  startVisible: boolean,\n  startDisabled: boolean,\n  gameFull: boolean,\n  gameUrl: string,\n  onStart: () => void,\n};\n\nconst InitialPhase: FunctionComponent<Props> = ({\n  message,\n  startVisible,\n  startDisabled,\n  onStart,\n  gameFull,\n  gameUrl,\n}) => {\n  const classes = useStyles();\n\n  const startButton = startVisible\n    ? (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={startDisabled}\n        onClick={onStart}\n      >\n        <Emoji symbol=\"🚀\" />\n        <span>Start!</span>\n      </Button>\n    )\n    : null;\n\n  const [alertOpen, setAlertOpen] = useState(false);\n  const handleInviteClicked = () => {\n    copy(gameUrl);\n    setAlertOpen(true);\n  }\n  const handleAlertClosed = () => setAlertOpen(false);\n\n  return (\n    <MainContent>\n      <Grid item xs={12}>\n        <Typography>{message}</Typography>\n      </Grid>\n      <Grid\n        container direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={classes.buttonContainer}\n      >\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={gameFull}\n            onClick={handleInviteClicked}\n          >\n            Invite friends\n          </Button>\n          <Snackbar\n            open={alertOpen}\n            autoHideDuration={5000}\n            onClose={handleAlertClosed}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          >\n            <Alert onClose={handleAlertClosed} severity=\"success\">\n              Game code copied to clipboard!\n            </Alert>\n          </Snackbar>\n        </Grid>\n        <Grid item>\n          {startButton}\n        </Grid>\n      </Grid>\n    </MainContent>\n  );\n};\n\nexport default InitialPhase;\n","\nconst pluralize = (singular: string, plural: string, count: number): string => (\n  count === 1 ? singular : plural\n);\n\nexport default pluralize;\n","import { connect } from 'react-redux';\nimport { AppDispatch } from '../../store';\nimport InitialPhase from './InitialPhase';\nimport { RootState } from '../../store/reducers';\nimport { GameState, Player } from '../../store/game/types';\nimport pluralize from '../../utils/pluralize';\nimport { startGame } from '../../store/game';\nimport {\n  MIN_PLAYERS,\n  MAX_PLAYERS,\n} from '../../store/game/constants';\n\nconst getMessage = (\n  missingPlayers: number,\n  createdBy: Player,\n  player: string,\n) => {\n  if (missingPlayers > 0) {\n    return `Waiting for ${missingPlayers} more ${pluralize('player', 'players', missingPlayers)}`;\n  }\n  const createdGame = createdBy.id === player;\n  if (createdGame) {\n    return 'Ready to start?';\n  }\n  return `Waiting for ${createdBy.name} to start the game`;\n}\n\nconst mapStateToProps = (state: RootState) => {\n  const game = state.game.gameState as GameState;\n  const player = state.game.player as string;\n  const numPlayers = Object.keys(game.players).length;\n  const missingPlayers = Math.max(0, MIN_PLAYERS - numPlayers);\n  const createdBy = game.players[game.createdBy];\n  const createdGame = createdBy.id === player;\n  const gameFull = numPlayers === MAX_PLAYERS;\n  const location = window.location;\n\n  return {\n    message: getMessage(missingPlayers, createdBy, player),\n    startVisible: createdGame,\n    startDisabled: missingPlayers > 0,\n    gameFull,\n    gameUrl: `${location.protocol}//${location.host}/#/game/${game.code}`,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onStart: () => dispatch(startGame()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(InitialPhase);\n","const isDevelopment = process.env.NODE_ENV === 'development';\n\nexport const MIN_PLAYERS = isDevelopment ? 2 : 4;\nexport const MAX_PLAYERS = 8;\n","import React, {\n  FunctionComponent,\n  MouseEvent,\n} from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n\nimport Emoji from '../Emoji';\n\ntype Props = {\n  concept: string,\n  selected?: boolean,\n  disabled?: boolean,\n  onClick: (event: MouseEvent<HTMLElement>) => void,\n}\n\nconst ConceptListItem: FunctionComponent<Props> = ({\n  concept,\n  selected = false,\n  disabled = false,\n  onClick,\n}) => (\n  <ListItem\n    divider\n    button\n    onClick={onClick}\n    selected={selected}\n    disabled={disabled}\n  >\n    <ListItemAvatar>\n      <Emoji symbol=\"💡\" />\n    </ListItemAvatar>\n    <ListItemText primary={concept}/>\n  </ListItem>\n);\n\nexport default ConceptListItem;\n","import React, { FunctionComponent } from 'react';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport MainContent from '../MainContent';\nimport ConceptListItem from '../ConceptListItem';\n\ntype Props = {\n  concepts: string[],\n  selectedConcept?: string,\n  onChooseConcept: (concept: string) => void,\n};\n\nconst ConceptChoicePhase: FunctionComponent<Props> = ({\n  concepts,\n  selectedConcept,\n  onChooseConcept,\n}) => {\n  const message = selectedConcept\n    ? 'Waiting for other players to choose'\n    : 'Choose a concept';\n\n  return (\n    <MainContent>\n      <Grid item xs={12}>\n        <Typography>{message}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <List>\n          {\n            concepts.map(concept => (\n              <ConceptListItem\n                key={concept}\n                concept={concept}\n                selected={selectedConcept === concept}\n                disabled={!!selectedConcept}\n                onClick={() => onChooseConcept(concept)}\n              />\n            ))\n          }\n        </List>\n      </Grid>\n    </MainContent>\n  );\n};\n\nexport default ConceptChoicePhase;\n","import { connect } from 'react-redux';\n\nimport ConceptChoicePhase from './ConceptChoicePhase';\nimport { AppDispatch } from '../../store';\nimport { RootState } from '../../store/reducers';\nimport { chooseConcept } from '../../store/game';\nimport {\n  ConceptChoicePhase as ConceptChoicePhaseType,\n  Round,\n} from '../../store/game/types';\n\nconst mapStateToProps = (state: RootState) => {\n  const choosingConcept = state.game.choosingConcept;\n  const round = state.game.gameState?.round as Round;\n  const phase = round.phase as ConceptChoicePhaseType;\n  const playerId = state.game.player as string;\n  const concepts = phase.choices[playerId];\n  const selectedConcept = round.concepts[playerId];\n\n  return {\n    selectedConcept: selectedConcept || choosingConcept,\n    concepts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onChooseConcept: (concept: string) => dispatch(chooseConcept(concept)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ConceptChoicePhase);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // border: '1px solid',\n    borderRadius: 4,\n  },\n}));\n\nexport default useStyles;\n","import React, {\n  ReactNode,\n  FunctionComponent,\n  MouseEvent,\n} from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from './ToolBarButton.styles';\n\ntype Props = {\n  title: string,\n  icon: ReactNode,\n  onClick: (event: MouseEvent<HTMLElement>) => void,\n  disabled?: boolean,\n}\n\nconst ToolBarButton: FunctionComponent<Props> = ({\n  title,\n  icon,\n  disabled = false,\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Tooltip title={title} placement=\"left\">\n      <span>\n        <IconButton\n          aria-label={title}\n          onClick={onClick}\n          disabled={disabled}\n          classes={{\n            root: classes.root,\n          }}\n        >\n          {icon}\n        </IconButton>\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default ToolBarButton;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import React, {\n  useState,\n  FunctionComponent,\n  MouseEvent,\n  ReactNode,\n} from 'react';\n\nimport Popover from '@material-ui/core/Popover';\n\nimport ToolBarButton from '../ToolBarButton';\nimport useStyles from './ExpandableToolBarButton.styles';\n\ntype RenderContentProps = {\n  close: () => void,\n}\n\ntype Props = {\n  title: string,\n  icon: ReactNode,\n  renderContent: (props: RenderContentProps) => ReactNode,\n}\n\nconst ExpandableToolBarButton: FunctionComponent<Props> = ({\n  title,\n  icon,\n  renderContent,\n}) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const handleClick = (event: MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => setAnchorEl(null);\n\n  const open = Boolean(anchorEl);\n  const id = open ? `${title}-popover` : undefined;\n\n  return (\n    <React.Fragment>\n      <ToolBarButton\n        title={title}\n        icon={icon}\n        onClick={handleClick}\n      />\n      <Popover\n        id={id}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left',\n        }}\n      >\n        {renderContent({ close: handleClose })}\n      </Popover>\n    </React.Fragment>\n  );\n};\n\nexport default ExpandableToolBarButton;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flex: 1,\n    width: 200,\n    height: 25,\n    marginTop: 18,\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\n\nimport Slider from '@material-ui/core/Slider';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nimport ExpandableToolBarButton from '../ExpandableToolBarButton';\nimport useStyles from './LineWidthPickerButton.styles';\n\ntype Props = {\n  lineWidth: number,\n  onLineWidthChange: (width: number) => void,\n}\n\nconst valueText = (value: number): string => `${value} px`;\n\nconst LineWidthPickerButton: FunctionComponent<Props> = ({\n  lineWidth,\n  onLineWidthChange,\n}) => {\n  const classes = useStyles();\n\n  const handleChange = (\n    _e: any,\n    newValue: number | number[],\n  ) => onLineWidthChange(Array.isArray(newValue) ? newValue[0] : newValue);\n\n  return (\n    <ExpandableToolBarButton\n      title=\"Line width\"\n      icon={<FiberManualRecordIcon />}\n      renderContent={() => (\n        <div className={classes.root}>\n          <Slider\n            value={lineWidth}\n            getAriaValueText={valueText}\n            valueLabelDisplay=\"on\"\n            step={1}\n            min={1}\n            max={50}\n            onChange={handleChange}\n          />\n        </div>\n      )}\n    />\n  );\n};\n\nexport default LineWidthPickerButton;\n","import React, { FunctionComponent } from 'react';\n\nimport { CirclePicker, ColorResult } from 'react-color';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nimport ExpandableToolBarButton from '../ExpandableToolBarButton';\n\ntype Props = {\n  color: string,\n  onColorChange: (color: string) => void,\n}\n\nconst ColorPickerButton: FunctionComponent<Props> = ({\n  color,\n  onColorChange,\n}) => {\n  const handleOnChangeComplete = (color: ColorResult) => onColorChange(color.hex);\n\n  return (\n    <ExpandableToolBarButton\n      title=\"Color\"\n      icon={<FiberManualRecordIcon style={{ color }}/>}\n      renderContent={({ close }) => (\n        <CirclePicker\n          color={color}\n          onChangeComplete={(color) => {\n            close();\n            handleOnChangeComplete(color);\n          }}\n        />\n      )}\n    />\n  );\n};\n\nexport default ColorPickerButton;\n","import React, { FunctionComponent } from 'react';\n\nimport CreateIcon from '@material-ui/icons/Create';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport ExpandableToolBarButton from '../ExpandableToolBarButton';\n\ntype Tool = 'pencil' | 'eraser'\n\ntype Props = {\n  tool: Tool,\n  onToolchange: (tool: Tool) => void,\n}\n\nconst getIconForTool = (tool: Tool) => (\n  tool === 'pencil'\n    ? <CreateIcon />\n    : <ClearIcon />\n);\n\nconst ToolPickerButton: FunctionComponent<Props> = ({\n  tool,\n  onToolchange,\n}) => (\n  <ExpandableToolBarButton\n    title=\"Tool\"\n    icon={getIconForTool(tool)}\n    renderContent={({ close }) => (\n      <ToggleButtonGroup\n        value={tool}\n        exclusive\n        onChange={(_event, newTool) => {\n          close();\n          onToolchange(newTool)\n        }}\n        aria-label=\"text alignment\"\n      >\n        <ToggleButton value=\"pencil\" aria-label=\"pencil\">\n          <CreateIcon />\n        </ToggleButton>\n        <ToggleButton value=\"eraser\" aria-label=\"eraser\">\n          <ClearIcon />\n        </ToggleButton>\n      </ToggleButtonGroup>\n    )}\n  />\n);\n\nexport default ToolPickerButton;\n","import React, { FunctionComponent } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport ToolBarButton from '../ToolBarButton';\nimport LineWidthPickerButton from '../LineWidthPickerButton';\nimport ColorPickerButton from '../ColorPickerButton';\nimport ToolPickerButton from '../ToolPickerButton';\n\nexport type Tool = 'pencil' | 'eraser'\n\ntype Props = {\n  lineWidth?: number,\n  onLineWidthChange: (width: number) => void,\n  color?: string,\n  onColorChange: (color: string) => void,\n  tool?: Tool\n  onToolChange: (tool: Tool) => void,\n  canUndo?: boolean,\n  onUndo: () => void,\n  canRedo?: boolean,\n  onRedo: () => void,\n  onEraseAll: () => void,\n}\n\nconst ToolBar: FunctionComponent<Props> = ({\n  lineWidth = 5,\n  onLineWidthChange,\n  color = '#f44336',\n  onColorChange,\n  tool = 'pencil',\n  onToolChange,\n  canUndo = false,\n  onUndo,\n  canRedo = false,\n  onRedo,\n  onEraseAll,\n}) => (\n  <Grid\n    container\n    direction=\"column\"\n    spacing={0}\n    alignItems=\"center\"\n  >\n    <LineWidthPickerButton\n      lineWidth={lineWidth}\n      onLineWidthChange={onLineWidthChange}\n    />\n    <ColorPickerButton\n      color={color}\n      onColorChange={onColorChange}\n    />\n    <ToolPickerButton\n      tool={tool}\n      onToolchange={onToolChange}\n    />\n    <ToolBarButton\n      title=\"Undo\"\n      icon={<UndoIcon />}\n      onClick={onUndo}\n      disabled={!canUndo}\n    />\n    <ToolBarButton\n      title=\"Redo\"\n      icon={<RedoIcon />}\n      onClick={onRedo}\n      disabled={!canRedo}\n    />\n    <ToolBarButton\n      title=\"Erase all\"\n      icon={<DeleteIcon />}\n      onClick={onEraseAll}\n    />\n  </Grid>\n);\n\nexport default ToolBar;\n","import { styled } from '@material-ui/core/styles';\nimport { SketchField as SketchFieldBase } from 'react-sketch';\n\nexport const SketchField = styled(SketchFieldBase)({\n  border: '1px solid',\n  borderRadius: 4,\n});\n\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ToolBar from '../ToolBar';\nimport { SketchField } from './Editor.styled';\n\ntype Tool = 'pencil' | 'eraser'\ntype Props = {}\ntype State = {\n  lineWidth: number,\n  color: string,\n  tool: Tool\n  canUndo: boolean,\n  canRedo: boolean,\n}\n\nclass Editor extends React.Component<Props, State> {\n  private sketch: any;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      lineWidth: 10,\n      color: '#f44336',\n      tool: 'pencil',\n      canUndo: false,\n      canRedo: false,\n    };\n\n    this.onLineWidthChange = this.onLineWidthChange.bind(this);\n    this.onColorChange = this.onColorChange.bind(this);\n    this.onToolChange = this.onToolChange.bind(this);\n    this.onUndo = this.onUndo.bind(this);\n    this.onRedo = this.onRedo.bind(this);\n    this.onEraseAll = this.onEraseAll.bind(this);\n    this.onSketchChange = this.onSketchChange.bind(this);\n  }\n\n  onLineWidthChange(lineWidth: number) {\n    this.setState({ lineWidth });\n  }\n\n  onColorChange(color: string) {\n    this.setState({ color });\n  }\n\n  onToolChange(tool: Tool) {\n    this.setState({ tool });\n  }\n\n  onUndo() {\n    if (!this.sketch) {\n      return;\n    }\n    this.sketch.undo();\n  }\n\n  onRedo() {\n    if (!this.sketch) {\n      return;\n    }\n    this.sketch.redo();\n  }\n\n  onEraseAll() {\n    if (!this.sketch) {\n      return;\n    }\n    this.sketch.clear();\n  }\n\n  onSketchChange() {\n    if (!this.sketch) {\n      return;\n    }\n\n    const { canUndo, canRedo } = this.state;\n    const canUndoNow = this.sketch.canUndo();\n    const canRedoNow = this.sketch.canRedo();\n    const needsUpdate = canUndo !== canUndoNow || canRedo !== canRedoNow;\n    if (needsUpdate) {\n      this.setState({\n        canUndo: canUndoNow,\n        canRedo: canRedoNow,\n      });\n    }\n  }\n\n  export(): string {\n    if (!this.sketch) {\n      return '';\n    }\n    return this.sketch.toDataURL();\n  }\n\n  render() {\n    const {\n      lineWidth,\n      color,\n      tool,\n      canUndo,\n      canRedo,\n    } = this.state;\n\n    const editorColor = tool === 'pencil' ? color : '#ffffff';\n\n    return (\n      <Grid container direction=\"row\">\n        <Grid item xs={2}>\n          <ToolBar\n            lineWidth={lineWidth}\n            onLineWidthChange={this.onLineWidthChange}\n            color={color}\n            onColorChange={this.onColorChange}\n            tool={tool}\n            onToolChange={this.onToolChange}\n            canUndo={canUndo}\n            onUndo={this.onUndo}\n            canRedo={canRedo}\n            onRedo={this.onRedo}\n            onEraseAll={this.onEraseAll}\n          />\n        </Grid>\n        <Grid item xs={10}>\n          <SketchField\n            ref={(sketch: any) => this.sketch = sketch}\n            height='480px'\n            tool={tool}\n            lineColor={editorColor}\n            lineWidth={lineWidth}\n            onChange={this.onSketchChange}\n          />\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default Editor;\n","import React, {\n  FunctionComponent,\n  createRef,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport MainContent from '../MainContent';\nimport Editor from '../Editor';\nimport Emoji from '../Emoji';\n\ntype Props = {\n  message: string,\n  submitted: boolean,\n  onSubmit: (image: string) => void,\n};\n\nconst DrawPhase: FunctionComponent<Props> = ({\n  message,\n  submitted,\n  onSubmit,\n}) => {\n  const editorRef = createRef<Editor>();\n  const handleSubmitClicked = () => {\n    const editor = editorRef.current;\n    if (editor) {\n      const image = editor.export();\n      onSubmit(image);\n    }\n  };\n\n  const submittedMessage = submitted\n    ? 'Waiting for other players to finish their turn.'\n    : '';\n\n  return (\n    <MainContent width={800}>\n      <Grid item xs={12}>\n        <Typography>{message}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Editor ref={editorRef}/>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSubmitClicked}\n              disabled={submitted}\n            >\n              <Emoji symbol=\"🎨\"/>\n              <span>Done</span>\n            </Button>\n          </Grid>\n          <Grid item>\n            <Typography>{submittedMessage}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </MainContent>\n  );\n};\n\nexport default DrawPhase;\n","import { connect } from 'react-redux';\n\nimport DrawPhase from './DrawPhase';\nimport { AppDispatch } from '../../store';\nimport { RootState } from '../../store/reducers';\nimport { submitDrawing } from '../../store/game';\nimport {\n  GameState,\n  CreateEntryPhase,\n  ConceptEntry,\n} from '../../store/game/types';\n\nconst getMessage = (playerId: string, game: GameState) => {\n  const phase = game.round.phase as CreateEntryPhase;\n  if (phase.index === 0) {\n    const concept = game.round.concepts[playerId];\n    return `Draw \"${concept}\"`;\n  }\n\n  const playerIdx = game.round.order.indexOf(playerId);\n  const numPlayers = Object.keys(game.players).length;\n  const sourceIdx = (playerIdx + phase.index) % numPlayers;\n  const sourcePlayerId = game.round.order[sourceIdx];\n  const stack = game.round.stacks[sourcePlayerId];\n  const lastEntry = stack.entries[phase.index - 1];\n  const conceptEntry = lastEntry.data as ConceptEntry;\n  const concept = conceptEntry.concept;\n  const sourcePlayerName = game.players[sourcePlayerId].name;\n  return `From ${sourcePlayerName}, draw \"${concept}\"`;\n};\n\nconst hasSubmitted = (playerId: string, game: GameState) => {\n  const phase = game.round.phase as CreateEntryPhase;\n  const playerIdx = game.round.order.indexOf(playerId);\n  const numPlayers = Object.keys(game.players).length;\n  const sourceIdx = (playerIdx + phase.index) % numPlayers;\n  const sourcePlayerId = game.round.order[sourceIdx];\n  const stack = game.round.stacks[sourcePlayerId];\n  const lastEntry = stack.entries[phase.index];\n  return lastEntry && lastEntry.author === playerId;\n};\n\nconst mapStateToProps = (state: RootState) => {\n  const playerId = state.game.player as string;\n  const game = state.game.gameState as GameState;\n  const message = getMessage(playerId, game);\n  const submitted = state.game.submittedEntry || hasSubmitted(playerId, game);\n  return {\n    submitted,\n    message,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSubmit: (drawing: string) => dispatch(submitDrawing(drawing)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DrawPhase);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    width: 400,\n    borderRadius: 4,\n  }\n}));\n\nexport default useStyles;\n","import React, {\n  FunctionComponent,\n  useState,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from './GuessPhase.styles';\nimport Emoji from '../Emoji';\nimport MainContent from '../MainContent';\n\ntype Props = {\n  message: string,\n  image: string,\n  submitted: boolean,\n  onSubmit: (image: string) => void,\n};\n\nconst GuessPhase: FunctionComponent<Props> = ({\n  message,\n  image,\n  submitted,\n  onSubmit,\n}) => {\n  const classes = useStyles();\n  const [guess, setGuess] = useState('');\n  const handleGuessChanged = (\n    (event:React.ChangeEvent<HTMLInputElement>) => setGuess(event.target.value)\n  )\n  const handleSubmitClicked = () => {\n    onSubmit(guess);\n  };\n\n  const submittedMessage = submitted\n    ? 'Waiting for other players to finish their turn.'\n    : '';\n\n  return (\n    <MainContent width={800}>\n      <Grid item xs={12}>\n        <Typography>{message}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <img src={image} alt={message} className={classes.image} />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          label=\"Guess\"\n          value={guess}\n          onChange={handleGuessChanged}\n          disabled={submitted}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSubmitClicked}\n              disabled={submitted}\n            >\n              <Emoji symbol=\"🎨\"/>\n              <span>Done</span>\n            </Button>\n          </Grid>\n          <Grid item>\n            <Typography>{submittedMessage}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </MainContent>\n  );\n};\n\nexport default GuessPhase;\n","import { connect } from 'react-redux';\n\nimport GuessPhase from './GuessPhase';\nimport { AppDispatch } from '../../store';\nimport { RootState } from '../../store/reducers';\nimport { submitConcept } from '../../store/game';\nimport {\n  GameState,\n  CreateEntryPhase,\n  DrawingEntry,\n} from '../../store/game/types';\n\nconst getEntry = (playerId: string, game: GameState) => {\n  const phase = game.round.phase as CreateEntryPhase;\n  const playerIdx = game.round.order.indexOf(playerId);\n  const numPlayers = Object.keys(game.players).length;\n  const sourceIdx = (playerIdx + phase.index) % numPlayers;\n  const sourcePlayerId = game.round.order[sourceIdx];\n  const stack = game.round.stacks[sourcePlayerId];\n  const previousEntry = stack.entries[phase.index - 1];\n  const entry = previousEntry.data as DrawingEntry;\n  return {\n    author: previousEntry.author,\n    entry,\n  };\n};\n\nconst hasSubmitted = (playerId: string, game: GameState) => {\n  const phase = game.round.phase as CreateEntryPhase;\n  const playerIdx = game.round.order.indexOf(playerId);\n  const numPlayers = Object.keys(game.players).length;\n  const sourceIdx = (playerIdx + phase.index) % numPlayers;\n  const sourcePlayerId = game.round.order[sourceIdx];\n  const stack = game.round.stacks[sourcePlayerId];\n  const lastEntry = stack.entries[phase.index];\n  return lastEntry && lastEntry.author === playerId;\n};\n\nconst mapStateToProps = (state: RootState) => {\n  const playerId = state.game.player as string;\n  const game = state.game.gameState as GameState;\n  const {\n    author,\n    entry,\n  } = getEntry(playerId, game);\n  const playerName = game.players[author].name;\n  const message = `Guess what ${playerName} drew`;\n  const submitted = state.game.submittedEntry || hasSubmitted(playerId, game);\n  return {\n    submitted,\n    message,\n    image: entry.drawing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSubmit: (concept: string) => dispatch(submitConcept(concept)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GuessPhase);\n","import React, { FunctionComponent } from 'react';\n\nimport DrawPhase from '../DrawPhase';\nimport GuessPhase from '../GuessPhase';\n\nexport type EntryType = 'draw' | 'guess';\n\ntype Props = {\n  type: EntryType,\n};\n\nconst CreateEntryPhase: FunctionComponent<Props> = ({\n  type,\n}) => (\n  type === 'draw'\n    ? <DrawPhase />\n    : <GuessPhase />\n);\n\nexport default CreateEntryPhase;\n","import { connect } from 'react-redux';\n\nimport CreateEntryPhase, { EntryType } from './CreateEntryPhase';\nimport { RootState } from '../../store/reducers';\nimport { CreateEntryPhase as CreateEntryPhaseType } from '../../store/game/types';\n\nconst mapStateToProps = (state: RootState) => {\n  const phase = state.game.gameState?.round.phase as CreateEntryPhaseType;\n  const type: EntryType = phase.index % 2 === 0\n    ? 'draw'\n    : 'guess'\n\n  return { type };\n};\n\nexport default connect(mapStateToProps)(CreateEntryPhase);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(3),\n    maxWidth: 500,\n  },\n  entryPaper: {\n    maxWidth: 500,\n  },\n  selectedEntry: {\n    borderWidth: 4,\n    borderColor: theme.palette.primary.main,\n  },\n  choicesContainer: {\n    padding: theme.spacing(3),\n    maxWidth: 500,\n  },\n  img: {\n    width: '100%',\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(3),\n  },\n  avatar: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, {\n  FunctionComponent,\n  ReactNode\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Avatar from '@material-ui/core/Avatar';\nimport Avataaar from 'avataaars';\n\nimport { Avatar as AvatarType } from '../../store/game/types';\nimport useStyles from './EntryCard.styles';\n\ntype Props = {\n  name: string,\n  avatar: AvatarType,\n  entry: ReactNode,\n  onClick?: () => void,\n}\n\nconst EntryCard: FunctionComponent<Props> = ({\n  name,\n  avatar,\n  entry,\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  const content = (\n    <div className={classes.container}>\n      <CardHeader\n        avatar={(\n          <Avatar variant=\"rounded\" alt={name} className={classes.avatar}>\n            <Avataaar\n              avatarStyle=\"Circle\"\n              topType={avatar.topType}\n              accessoriesType={avatar.accessoriesType}\n              hairColor={avatar.hairColor}\n              facialHairType={avatar.facialHairType}\n              clotheType={avatar.clotheType}\n              clotheColor={avatar.clotheColor}\n              eyeType={avatar.eyeType}\n              eyebrowType={avatar.eyebrowType}\n              mouthType={avatar.mouthType}\n              skinColor={avatar.skinColor}\n            />\n          </Avatar>\n        )}\n        title={name}\n      />\n      {entry}\n    </div>\n  );\n  const wrapped = onClick\n    ? (<CardActionArea onClick={onClick}>{content}</CardActionArea>)\n    : content;\n\n  return (\n    <Grid item xs={12}>\n      {wrapped}\n    </Grid>\n  );\n}\n\nexport default EntryCard;\n","import React, { FunctionComponent } from 'react';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport EntryCard from '../EntryCard';\nimport { Avatar } from '../../store/game/types';\n\ntype Props = {\n  name: string,\n  avatar: Avatar,\n  image: string,\n  onClick?: () => void,\n}\n\nconst DoodleEntryCard: FunctionComponent<Props> = ({\n  name,\n  avatar,\n  image,\n  onClick,\n}) => (\n  <EntryCard\n    name={name}\n    avatar={avatar}\n    entry={(\n      <CardMedia\n        component=\"img\"\n        image={image}\n        width=\"500\"\n        title={`Entry by ${name}`}\n      />\n    )}\n    onClick={onClick}\n  />\n);\n\nexport default DoodleEntryCard;\n","import { connect } from 'react-redux';\n\nimport DoodleEntryCard from './DoodleEntryCard';\nimport { RootState } from '../../store/reducers';\nimport { GameState } from '../../store/game/types';\n\ninterface OwnProps {\n  playerId: string,\n};\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const game = state.game.gameState as GameState;\n  const player = game.players[ownProps.playerId];\n  return {\n    name: player.name,\n    avatar: player.avatar,\n  };\n}\nexport default connect(mapStateToProps)(DoodleEntryCard);\n","import React, { FunctionComponent } from 'react';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport EntryCard from '../EntryCard';\nimport { Avatar } from '../../store/game/types';\n\n\ntype Props = {\n  name: string,\n  avatar: Avatar,\n  concept: string,\n  onClick?: () => void,\n}\n\nconst ConceptEntryCard: FunctionComponent<Props> = ({\n  name,\n  avatar,\n  concept,\n  onClick,\n}) => (\n  <EntryCard\n    name={name}\n    avatar={avatar}\n    entry={(\n      <CardContent>\n        <Typography variant=\"h4\">{concept}</Typography>\n      </CardContent>\n    )}\n    onClick={onClick}\n  />\n);\n\nexport default ConceptEntryCard;\n","import { connect } from 'react-redux';\n\nimport ConceptEntryCard from './ConceptEntryCard';\nimport { RootState } from '../../store/reducers';\nimport { GameState } from '../../store/game/types';\n\ninterface OwnProps {\n  playerId: string,\n};\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const game = state.game.gameState as GameState;\n  const player = game.players[ownProps.playerId];\n  return {\n    name: player.name,\n    avatar: player.avatar,\n  };\n}\nexport default connect(mapStateToProps)(ConceptEntryCard);\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from './EntryChoicePhase.styles';\nimport Emoji from '../Emoji';\nimport DoodleEntryCard from '../DoodleEntryCard';\nimport ConceptEntryCard from '../ConceptEntryCard';\nimport { Entry, DrawingEntry } from '../../store/game/types';\n\ntype Props = {\n  entries: Entry[],\n  concept: string,\n  stackPlayerName: string,\n  currentPlayerChooses: boolean,\n  chosenPlayerId?: string,\n  chosenPlayerName?: string,\n  acknowledged: boolean,\n  onChooseEntry: (playerId: string) => void,\n  onAcknowledge: () => void,\n};\n\nconst EntryChoicePhase: FunctionComponent<Props> = ({\n  entries,\n  concept,\n  stackPlayerName,\n  currentPlayerChooses,\n  chosenPlayerId,\n  chosenPlayerName,\n  acknowledged,\n  onChooseEntry,\n  onAcknowledge,\n}) => {\n  const classes = useStyles();\n\n  const getMessage = () => {\n    if (currentPlayerChooses) {\n      return chosenPlayerName\n        ? `You chose the entry by ${chosenPlayerName} for \"${concept}\"!`\n        : `Choose your favourite entry for \"${concept}\"`;\n    }\n\n    return chosenPlayerName\n      ? `${stackPlayerName} chose the entry by ${chosenPlayerName} for \"${concept}\"!`\n      : `${stackPlayerName} is choosing their favourite entry for \"${concept}\"`;\n  };\n\n  const firstEntry = entries[0];\n  const drawingEntry = firstEntry.data as DrawingEntry;\n  const otherEntries = entries.slice(1);\n\n  const nextButton = !currentPlayerChooses\n    ? (\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!chosenPlayerName || acknowledged}\n          onClick={onAcknowledge}\n        >\n          <Emoji symbol=\"👏\"/>\n          <span>Next</span>\n        </Button>\n      </Grid>\n    )\n    : null;\n\n  return (\n    <Grid item xs={12}>\n      <Grid container direction=\"column\" spacing={4}>\n        <Grid item xs={12}>\n          <Paper elevation={1} variant=\"outlined\" className={classes.paper}>\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs={12}>\n                <Typography>{getMessage()}</Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <img\n                  className={classes.img}\n                  src={drawingEntry.drawing}\n                  alt={`Initial drawing by ${stackPlayerName}`}\n                />\n              </Grid>\n              {nextButton}\n            </Grid>\n          </Paper>\n        </Grid>\n          {\n            otherEntries.map((entry) => {\n              const chosen = chosenPlayerId === entry.author;\n              const entryCard = entry.data.type === 'drawing'\n                ? (\n                  <DoodleEntryCard\n                    playerId={entry.author}\n                    image={entry.data.drawing}\n                    onClick={\n                      currentPlayerChooses\n                        ? () => onChooseEntry(entry.author)\n                        : undefined\n                    }\n                  />\n                )\n                : (\n                  <ConceptEntryCard\n                    playerId={entry.author}\n                    concept={entry.data.concept}\n                    onClick={\n                      currentPlayerChooses\n                        ? () => onChooseEntry(entry.author)\n                        : undefined\n                    }\n                  />\n                );\n              return (\n                <Grid item xs={12} key={entry.author}>\n                  <Paper\n                    elevation={1}\n                    variant=\"outlined\"\n                    className={`${classes.entryPaper} ${chosen ? classes.selectedEntry : ''}`}\n                  >\n                    {entryCard}\n                  </Paper>\n                </Grid>\n              );\n            }\n          )\n        }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default EntryChoicePhase;\n","import { connect } from 'react-redux';\n\nimport EntryChoicePhase from './EntryChoicePhase';\nimport { AppDispatch } from '../../store';\nimport { RootState } from '../../store/reducers';\nimport {\n  GameState,\n  EntryChoicePhase as EntryChoicePhaseType,\n} from '../../store/game/types';\nimport {\n  chooseEntry,\n  acknowledgeWinner,\n} from '../../store/game';\n\nconst mapStateToProps = (state: RootState) => {\n  const game = state.game.gameState as GameState;\n  const phase = game.round.phase as EntryChoicePhaseType;\n  const stackPlayerId = game.round.order[phase.index];\n  const stackPlayerName = game.players[stackPlayerId].name;\n  const concept = game.round.concepts[stackPlayerId];\n  const stack = game.round.stacks[stackPlayerId];\n  const playerId = state.game.player as string;\n  const currentPlayerChooses = playerId === stackPlayerId;\n  const chosenPlayerId = stack.chosen || state.game.chosenEntry;\n  const chosenPlayerName = chosenPlayerId\n    ? game.players[chosenPlayerId].name\n    : undefined;\n  const entries = stack.entries;\n  const acknowledged = state.game.acknowledgedWinner || !!phase.acknowledgedBy[playerId];\n\n  return {\n    stackPlayerName,\n    concept,\n    currentPlayerChooses,\n    chosenPlayerId,\n    chosenPlayerName,\n    entries,\n    acknowledged,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onChooseEntry: (targetPlayer: string) => dispatch(chooseEntry(targetPlayer)),\n  onAcknowledge: () => dispatch(acknowledgeWinner()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EntryChoicePhase);\n","import React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nimport Connecting from '../Connecting';\nimport InitialPhase from '../InitialPhase';\nimport ConceptChoicePhase from '../ConceptChoicePhase';\nimport CreateEntryPhase from '../CreateEntryPhase';\nimport EntryChoicePhase from '../EntryChoicePhase';\n\nimport { Alert as AlertType } from '../../store/game/types';\n\ninterface Props extends RouteComponentProps<any> {\n  connected: boolean,\n  phaseName: string,\n  alert?: AlertType,\n  connect: () => void,\n  leave: () => void,\n  dismissAlert: () => void,\n}\n\nclass Game extends React.Component<Props, {}> {\n  unblock?: () => void;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.onBeforeUnload = this.onBeforeUnload.bind(this);\n  }\n\n  onBeforeUnload(e: BeforeUnloadEvent) {\n    if (process.env.NODE_ENV !== 'development') {\n      var dialogText = 'You will exit the game.';\n      e.returnValue = dialogText;\n      return dialogText;\n    }\n  }\n\n  componentDidMount() {\n    const { connect, history } = this.props;\n\n    connect();\n    window.addEventListener('beforeunload', this.onBeforeUnload);\n    this.unblock = history.block('Are you sure you want to leave the game?');\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.onBeforeUnload);\n    const { leave } = this.props;\n    leave();\n    if (this.unblock) {\n      this.unblock();\n    }\n  }\n\n  renderContent() {\n    const {\n      connected,\n      phaseName,\n    } = this.props;\n\n    if (!connected) {\n      return <Connecting />;\n    }\n\n    switch (phaseName) {\n      case 'initial':\n        return <InitialPhase />;\n      case 'conceptChoice':\n        return <ConceptChoicePhase />;\n      case 'createEntry':\n        return <CreateEntryPhase />;\n      case 'entryChoice':\n        return <EntryChoicePhase />\n      default:\n        return <Typography>Unknown phase</Typography>\n    }\n  }\n\n  renderAlert() {\n    const { alert, dismissAlert } = this.props;\n    const alertComponent = alert\n      ? (\n        <Alert onClose={dismissAlert} severity={alert.severity}>\n          {alert.message}\n        </Alert>\n      )\n      : undefined;\n\n    return (\n      <Snackbar\n        open={!!alert}\n        autoHideDuration={5000}\n        onClose={dismissAlert}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        {alertComponent}\n      </Snackbar>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderContent()}\n        {this.renderAlert()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Game);\n","import { connect } from 'react-redux';\n\nimport Game from './Game';\nimport { AppDispatch } from '../../store';\nimport {\n  connectToGameChannel,\n  leaveGame,\n  dismissAlert,\n} from '../../store/game';\nimport { RootState } from '../../store/reducers';\n\nconst mapStateToProps = (state: RootState) => {\n  if (!state.game.gameState) {\n    return {\n      connected: false,\n      phaseName: '',\n    };\n  }\n\n  return {\n    connected: true,\n    phaseName: state.game.gameState.round.phase.name,\n    alert: state.game.alerts.length > 0\n      ? state.game.alerts[0]\n      : undefined,\n  };\n}\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  connect: () => dispatch(connectToGameChannel()),\n  leave: () => dispatch(leaveGame()),\n  dismissAlert: () => dispatch(dismissAlert()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Game);\n","import React, {\n  useState,\n  FunctionComponent,\n} from 'react';\nimport { useParams, withRouter, RouteComponentProps } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport Emoji from '../Emoji';\nimport { JoinGameParams } from '../../store/game/types';\nimport MenuContainer from '../MenuContainer';\n\ninterface Props extends RouteComponentProps<any> {\n  joinGame: (params: JoinGameParams) => void,\n}\n\nconst JoinMenu: FunctionComponent<Props> = ({\n  joinGame,\n  history,\n}) => {\n  const [name, setName] = useState('');\n  const handleNameChange = (\n    (event:React.ChangeEvent<HTMLInputElement>) => setName(event.target.value)\n  );\n\n  const { code } = useParams();\n  const handleGoClicked = () => joinGame({\n    name,\n    code: code as string,\n    goToGame: (code: string) => history.push(`/game/${code}`),\n  });\n\n  const hasName = name.length > 0;\n\n  return (\n    <MenuContainer>\n      <form onSubmit={handleGoClicked}>\n        <Grid container spacing={2}>\n        <Grid item xs={12}>\n            <Typography>\n              <Emoji symbol=\"👥\"/>\n              <span>Join a game</span>\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              label=\"Name\"\n              value={name}\n              onChange={handleNameChange}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!hasName}\n              onClick={handleGoClicked}\n            >\n              <Emoji symbol=\"🙌\"/>\n              <span>Go!</span>\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </MenuContainer>\n  );\n};\n\nexport default withRouter(JoinMenu);\n","import JoinMenu from './JoinMenu';\nimport { connect } from 'react-redux';\nimport { AppDispatch } from '../../store';\nimport { joinGame } from '../../store/game';\nimport { JoinGameParams } from '../../store/game/types';\n\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  joinGame: (params: JoinGameParams) => {\n    dispatch(joinGame(params));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(JoinMenu);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawerButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst TopBarTitle = () => (\n  <Grid\n    container\n    direction=\"row\"\n    justify=\"flex-start\"\n    alignItems=\"center\"\n    spacing={2}\n  >\n    <Hidden smUp implementation=\"css\">\n      <Grid item>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          Doodle\n        </Typography>\n      </Grid>\n    </Hidden>\n    <Hidden xsDown implementation=\"css\">\n      <Grid item>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          Doodle - A crazy drawing &amp; guessing chain game\n        </Typography>\n      </Grid>\n    </Hidden>\n  </Grid>\n);\n\nexport default TopBarTitle;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  iconButton: {\n    color: 'white',\n  },\n}));\n\nexport default useStyles;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"GitHub icon\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n});\n\nvar SvgGithub = function SvgGithub(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    role: \"img\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGithub, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github.617870e4.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Ko-fi icon\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.881 8.948c-.773-4.085-4.859-4.593-4.859-4.593H.723c-.604 0-.679.798-.679.798s-.082 7.324-.022 11.822c.164 2.424 2.586 2.672 2.586 2.672s8.267-.023 11.966-.049c2.438-.426 2.683-2.566 2.658-3.734 4.352.24 7.422-2.831 6.649-6.916zm-11.062 3.511c-1.246 1.453-4.011 3.976-4.011 3.976s-.121.119-.31.023c-.076-.057-.108-.09-.108-.09-.443-.441-3.368-3.049-4.034-3.954-.709-.965-1.041-2.7-.091-3.71.951-1.01 3.005-1.086 4.363.407 0 0 1.565-1.782 3.468-.963 1.904.82 1.832 3.011.723 4.311zm6.173.478c-.928.116-1.682.028-1.682.028V7.284h1.77s1.971.551 1.971 2.638c0 1.913-.985 2.667-2.059 3.015z\"\n});\n\nvar SvgKoFi = function SvgKoFi(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    role: \"img\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgKoFi, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/ko-fi.8a7c9b92.svg\";\nexport { ForwardRef as ReactComponent };","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  emoji: {\n    fontSize: 32,\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent }  from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Emoji from '../Emoji';\nimport useStyles from './InstructionListItem.styles';\n\ntype Props = {\n  emoji: string,\n  text: string,\n  divider: boolean,\n};\n\nconst InstructionListItem: FunctionComponent<Props> = ({\n  emoji,\n  text,\n  divider,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem divider={divider}>\n      <ListItemAvatar className={classes.emoji}>\n        <Emoji symbol={emoji}></Emoji>\n      </ListItemAvatar>\n      <ListItemText primary={text} />\n    </ListItem>\n  );\n};\n\nexport default InstructionListItem;\n","import React, { FunctionComponent }  from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport List from '@material-ui/core/List';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport InstructionListItem from './InstructionListItem';\n\nconst Instructions = [\n  {\n    emoji: '🎮',\n    text: 'Create a game.',\n  },\n  {\n    emoji: '🔗',\n    text: 'Share the link with friends. Remember, Doodle is best played on a video call!',\n  },\n  {\n    emoji: '🤫',\n    text: 'Every player chooses a concept. But keep it secret!',\n  },\n  {\n    emoji: '✏️',\n    text: \"Draw your concept. Don't know how to draw? Worry not, the worse you draw, the more fun the round will be!\",\n  },\n  {\n    emoji: '🤔',\n    text: 'Now guess what another player drew.',\n  },\n  {\n    emoji: '✏️',\n    text: \"Time to draw what another player guessed!\",\n  },\n  {\n    emoji: '🙌',\n    text: 'When the round is done, each player chooses their favourite entry for their concept.',\n  },\n];\n\ntype Props = {\n  open: boolean,\n  onClose: () => void,\n};\n\nconst HowToPlayDialog: FunctionComponent<Props> = ({\n  open,\n  onClose,\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"how-to-play-dialog\"\n    >\n      <DialogTitle id=\"how-to-play-dialog\">\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            How to play\n          </Grid>\n          <Grid item>\n            <IconButton onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </DialogTitle>\n      <DialogContent>\n        <List>\n          {\n            Instructions.map((step, index) => (\n              <InstructionListItem\n                key={index}\n                emoji={step.emoji}\n                text={step.text}\n                divider={index < Instructions.length - 1}\n              />\n            ))\n          }\n        </List>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default HowToPlayDialog;\n","import React, { useState } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport HelpIcon from '@material-ui/icons/Help';\n\nimport useStyles from './TopBarLinks.styles';\nimport { ReactComponent as GitHub } from './github.svg';\nimport { ReactComponent as Kofi } from './ko-fi.svg';\nimport HowToPlayDialog from '../HowToPlayDialog';\n\nconst openUrl = (url: string) => window.open(url, '_blank');\n\nconst TopBarLinks = () => {\n  const classes = useStyles();\n\n  const [helpOpen, setHelpOpen] = useState(false);\n  const handleHelpClicked = () => setHelpOpen(true);\n  const handleHelpClosed = () => setHelpOpen(false);\n\n  return (\n    <>\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={0}>\n        <Grid item>\n          <Button\n            className={classes.iconButton}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleHelpClicked}\n            startIcon={<HelpIcon />}\n          >\n            How to play\n          </Button>\n        </Grid>\n        <Grid item>\n          <Tooltip title=\"Support the project on Ko-fi ☕\" placement=\"bottom\">\n            <IconButton\n              className={classes.iconButton}\n              onClick={() => openUrl('https://ko-fi.com/dsaltares')}\n            >\n              <SvgIcon>\n                <Kofi />\n              </SvgIcon>\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip title=\"Check out the source code! 💻\" placement=\"bottom\">\n            <IconButton\n              className={classes.iconButton}\n              onClick={() => openUrl('https://github.com/dsaltares/doodle')}\n            >\n              <SvgIcon>\n                <GitHub href=\"https://github.com/dsaltares/doodle\"/>\n              </SvgIcon>\n            </IconButton>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    <HowToPlayDialog open={helpOpen} onClose={handleHelpClosed} />\n    </>\n  );\n};\n\nexport default TopBarLinks;\n","import React, { FunctionComponent } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport useStyles from './TopBar.styles';\nimport TopBarTitle from '../TopBarTitle';\nimport TopBarLinks from '../TopBarLinks';\n\ntype Props = {\n  onToggleDrawer: () => void,\n};\n\nconst TopBar: FunctionComponent<Props> = ({\n  onToggleDrawer,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar >\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n          <Grid item>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  edge=\"start\"\n                  onClick={onToggleDrawer}\n                  className={classes.drawerButton}\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <TopBarTitle />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <TopBarLinks />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopBar;\n","import { makeStyles } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Avataaar from 'avataaars';\n\nimport Emoji from '../Emoji';\nimport pluralize from '../../utils/pluralize';\nimport useStyles from './PlayerListItem.styles';\n\nexport type PlayerState = 'Ready' | 'Thinking' | 'Guessing' | 'Drawing' | 'Looking';\n\ntype Avatar = {\n  topType: string,\n  accessoriesType: string,\n  hairColor: string,\n  facialHairType: string,\n  clotheType: string,\n  clotheColor: string,\n  eyeType: string,\n  eyebrowType: string,\n  mouthType: string,\n  skinColor: string,\n}\n\ntype Props = {\n  name: string,\n  avatar: Avatar,\n  points: number,\n  state?: PlayerState,\n}\n\nconst statusEmojis = {\n  Ready: '✅',\n  Looking: '👀',\n  Thinking: '🤔',\n  Guessing: '🕵️‍♂️',\n  Drawing: '✏️',\n}\n\nconst PlayerItem: FunctionComponent<Props> = ({\n  name,\n  avatar,\n  points,\n  state,\n}) => {\n  const classes = useStyles();\n  return (\n    <ListItem divider>\n      <ListItemAvatar>\n        <Avatar variant=\"rounded\" alt={name} className={classes.avatar}>\n          <Avataaar\n            avatarStyle=\"Circle\"\n            topType={avatar.topType}\n            accessoriesType={avatar.accessoriesType}\n            hairColor={avatar.hairColor}\n            facialHairType={avatar.facialHairType}\n            clotheType={avatar.clotheType}\n            clotheColor={avatar.clotheColor}\n            eyeType={avatar.eyeType}\n            eyebrowType={avatar.eyebrowType}\n            mouthType={avatar.mouthType}\n            skinColor={avatar.skinColor}\n          />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={name}\n        secondary={`${points} ${pluralize('point', 'points', points)}`}\n      />\n      {\n        state && (\n          <ListItemSecondaryAction>\n            <Emoji symbol={statusEmojis[state]} />\n          </ListItemSecondaryAction>\n        )\n      }\n    </ListItem>\n  );\n};\n\nexport default PlayerItem;\n","import { connect } from 'react-redux';\nimport PlayerListItem, { PlayerState } from './PlayerListItem';\nimport { RootState } from '../../store/reducers';\nimport { selectors } from '../../store/game';\nimport {\n  CreateEntryPhase,\n  EntryChoicePhase,\n  Player,\n} from '../../store/game/types';\nimport { MIN_PLAYERS } from '../../store/game/constants';\n\ntype Props = {\n  id: string\n}\n\nconst getPlayerState = (state: RootState, id: string): PlayerState | undefined => {\n  if (!state.game.gameState) {\n    return;\n  }\n\n  const game = state.game.gameState;\n  const createdByCurrentPlayer = game.createdBy === id;\n  const numPlayers = Object.keys(game.players).length;\n\n  switch(game.round.phase.name) {\n    case 'initial':\n      if (createdByCurrentPlayer) {\n        return numPlayers >= MIN_PLAYERS ? 'Thinking' : 'Looking';\n      }\n      return 'Ready';\n    case 'conceptChoice': {\n      const hasChosen = !!game.round.concepts[id];\n      return hasChosen ? 'Ready' : 'Thinking';\n    }\n    case 'createEntry': {\n      const createPhase = game.round.phase as CreateEntryPhase;\n      const playerIdx = game.round.order.indexOf(id);\n      const targetPlayerIdx = (playerIdx + createPhase.index) % numPlayers;\n      const targetPlayerId = game.round.order[targetPlayerIdx];\n      const stack = game.round.stacks[targetPlayerId];\n      const stackHasEntryByPlayer = !!stack.entries.find(entry => entry.author === id);\n\n      if (stackHasEntryByPlayer) {\n        return 'Ready';\n      }\n\n      const isDrawingPhase = createPhase.index % 2 === 0;\n      return isDrawingPhase ? 'Drawing' : 'Guessing';\n    }\n    case 'entryChoice': {\n      const choicePhase = game.round.phase as EntryChoicePhase;\n      const playerInTurn = game.round.order[choicePhase.index];\n      const isPlayerTurn = playerInTurn === id;\n      const stack = game.round.stacks[id];\n      const alreadyChosen = !!stack.chosen;\n      const alreadyAcknowledged = !!choicePhase.acknowledgedBy[id];\n\n      if (alreadyAcknowledged) {\n        return 'Ready';\n      }\n\n      if (alreadyChosen) {\n        return isPlayerTurn ? 'Ready' : 'Looking';\n      }\n\n      return isPlayerTurn ? 'Thinking' : 'Looking';\n    }\n  }\n};\n\nconst mapStateToProps = (state: RootState, ownProps: Props) => {\n  const player = selectors.player(state, ownProps.id) as Player;\n\n  return {\n    ...player,\n    state: getPlayerState(state, ownProps.id),\n  };\n}\n\nexport default connect(mapStateToProps)(PlayerListItem);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport PlayerListItem from '../PlayerListItem';\nimport useStyles from './PlayerList.styles';\n\nexport type Props = {\n  visible: boolean,\n  playerIds: string[],\n  minPlayers: number,\n  maxPlayers: number,\n  gameStarted: boolean,\n}\n\nconst PlayerSkeleton = () => {\n  const classes = useStyles();\n  return (\n    <ListItem divider>\n      <ListItemAvatar>\n        <Skeleton variant=\"circle\" height={64} width={64} className={classes.avatar}/>\n      </ListItemAvatar>\n      <ListItemText\n        primary={<Skeleton variant=\"text\" width={100} />}\n        secondary={<Skeleton variant=\"text\" width={50} />}\n      />\n    </ListItem>\n  );\n};\n\nconst PlayerList: FunctionComponent<Props> = ({\n  visible,\n  playerIds,\n  minPlayers,\n  maxPlayers,\n  gameStarted,\n}) => {\n  if (!visible) {\n    return null;\n  }\n\n  const numPlayers = playerIds.length;\n  const remainingPlayers = Math.max(0, maxPlayers - numPlayers);\n  const skeletons = !gameStarted\n    ? Array.from(Array(remainingPlayers).keys()).map(index => (\n      <PlayerSkeleton key={`skeleton_${index}`} />\n    ))\n    : [];\n  const getMessage = () => {\n    if (numPlayers < minPlayers) {\n      const needed = minPlayers - numPlayers;\n      return `${needed} needed`;\n    }\n    if (numPlayers === maxPlayers) {\n      return 'game full';\n    }\n    return `${numPlayers}/${maxPlayers}`;\n  };\n\n  return (\n    <List subheader={(\n      <ListSubheader>Players - {`${getMessage()}`}</ListSubheader>\n    )}>\n      {[\n        ...playerIds.map(id => (<PlayerListItem key={id} id={id} />)),\n        ...skeletons,\n      ]}\n    </List>\n  );\n};\n\nexport default PlayerList;\n","import { connect } from 'react-redux';\nimport PlayerList from './PlayerList';\nimport { RootState } from '../../store/reducers';\nimport { selectors } from '../../store/game';\nimport {\n  MIN_PLAYERS,\n  MAX_PLAYERS,\n} from '../../store/game/constants';\n\nconst mapStateToProps = (state: RootState) => ({\n  visible: !!state.game.player,\n  playerIds: selectors.playerIds(state),\n  minPlayers: MIN_PLAYERS,\n  maxPlayers: MAX_PLAYERS,\n  gameStarted: Boolean(state.game.gameState && state.game.gameState.round.phase.name !== 'initial'),\n});\n\nexport default connect(mapStateToProps)(PlayerList);\n","import React, { FunctionComponent } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport useStyles from './SideBar.styles';\nimport PlayerList from '../PlayerList';\n\ntype Props = {\n  drawerOpen: boolean,\n  onToggleDrawer: () => void,\n}\n\nconst SideBar: FunctionComponent<Props> = ({\n  drawerOpen,\n  onToggleDrawer,\n}) => {\n  const classes = useStyles();\n\n  const drawer = (\n    <React.Fragment>\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <PlayerList />\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <React.Fragment>\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          className={classes.drawer}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open={drawerOpen}\n          onClose={onToggleDrawer}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          variant=\"permanent\"\n          className={classes.drawer}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </React.Fragment>\n  );\n};\n\nexport default SideBar;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { useEffect, EffectCallback } from 'react';\n\nconst useMountEffect = (fn: EffectCallback) => useEffect(fn, [])\n\nexport default useMountEffect;\n","import React, {\n  useState,\n  FunctionComponent,\n} from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Menu from '../Menu';\nimport Game from '../Game';\nimport JoinMenu from '../JoinMenu';\nimport TopBar from '../TopBar';\nimport SideBar from '../SideBar';\nimport useStyles from './App.styles';\nimport useMountEffect from '../../utils/useMountEffect';\n\ntype Props = {\n  playerName?: string,\n  connect: () => void,\n}\n\nconst App: FunctionComponent<Props> = ({\n  playerName,\n  connect,\n}) => {\n  useMountEffect(() => {\n    connect();\n  });\n\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const onToggleDrawer = () => setDrawerOpen(!drawerOpen);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar onToggleDrawer={onToggleDrawer} />\n      {\n        playerName\n          ? (\n            <SideBar\n              drawerOpen={drawerOpen}\n              onToggleDrawer={onToggleDrawer}\n            />\n          )\n          : null\n      }\n      <div className={classes.content}>\n        <Toolbar />\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <Menu />\n            </Route>\n            <Route exact path=\"/game/:code\">\n              {\n                playerName\n                  ? <Game />\n                  : <JoinMenu />\n              }\n            </Route>\n          </Switch>\n        </HashRouter>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { connect } from 'react-redux';\n\nimport App from './App';\nimport { AppDispatch } from '../../store';\nimport { connect as connectToSocket } from '../../store/socket';\nimport { subscribe } from '../../store/game';\nimport { RootState } from '../../store/reducers';\n\nconst mapStateToProps = (state: RootState) => ({\n  playerName: state.game.config.name,\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  connect: () => {\n    dispatch(connectToSocket((socket) => {\n      subscribe(dispatch, socket);\n    }));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const LIVE_SERVER_SOCKET = process.env.NODE_ENV === 'development'\n  ? 'http://localhost:3001'\n  : 'https://api.doodle.saltares.com';\n","import { combineReducers } from '@reduxjs/toolkit';\nimport socket from './socket';\nimport game from './game';\n\nconst rootReducer = combineReducers({\n  socket,\n  game,\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>\n","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppGetState = typeof store.getState;\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport  CssBaseline from '@material-ui/core/CssBaseline';\n\nimport App from './components/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <CssBaseline />\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}