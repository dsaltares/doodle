{"version":3,"sources":["store/socket/index.ts","components/MenuContainer/MenuContainer.styles.ts","components/MenuContainer/MenuContainer.tsx","components/Emoji/Emoji.tsx","components/Menu/Menu.styles.ts","components/Menu/Menu.tsx","store/game/selectors.ts","store/game/index.ts","components/Menu/Menu.container.ts","components/Connecting/Connecting.styles.ts","components/Connecting/Connecting.tsx","components/Connecting/Connecting.container.ts","components/MainContent/MainContent.styles.ts","components/MainContent/MainContent.tsx","components/WaitingToJoin/WaitingToJoin.tsx","components/InitialPhase/InitialPhase.styles.ts","utils/pluralize.ts","components/InitialPhase/InitialPhase.tsx","components/InitialPhase/InitialPhase.container.ts","store/game/constants.ts","components/ConceptListItem/ConceptListItem.tsx","components/ConceptChoicePhase/ConceptChoicePhase.tsx","components/ConceptChoicePhase/ConceptChoicePhase.container.ts","components/ToolBarButton/ToolBarButton.styles.ts","components/ToolBarButton/ToolBarButton.tsx","components/ExpandableToolBarButton/ExpandableToolBarButton.styles.ts","components/ExpandableToolBarButton/ExpandableToolBarButton.tsx","components/LineWidthPickerButton/LineWidthPickerButton.styles.ts","components/LineWidthPickerButton/LineWidthPickerButton.tsx","components/ColorPickerButton/ColorPickerButton.tsx","components/ToolPickerButton/ToolPickerButton.tsx","components/ToolBar/ToolBar.tsx","components/Editor/Editor.styled.ts","components/Editor/Editor.tsx","components/DrawPhase/DrawPhase.tsx","components/DrawPhase/DrawPhase.container.ts","components/GuessPhase/GuessPhase.styles.ts","components/GuessPhase/GuessPhase.tsx","components/GuessPhase/GuessPhase.container.ts","components/CreateEntryPhase/CreateEntryPhase.tsx","components/CreateEntryPhase/CreateEntryPhase.container.ts","components/EntryCard/EntryCard.styles.ts","components/EntryCard/EntryCard.tsx","components/DoodleEntryCard/DoodleEntryCard.tsx","components/DoodleEntryCard/DoodleEntryCard.container.ts","components/ConceptEntryCard/ConceptEntryCard.tsx","components/ConceptEntryCard/ConceptEntryCard.container.ts","components/EntryChoicePhase/EntryChoicePhase.styles.ts","components/EntryChoicePhase/EntryChoiceAcknowledge.tsx","components/EntryChoicePhase/EntryChoiceList.tsx","components/EntryChoicePhase/EntryChoicePhase.tsx","components/EntryChoicePhase/EntryChoicePhase.container.ts","components/Game/Game.tsx","components/Game/Game.container.ts","components/JoinMenu/JoinMenu.tsx","components/JoinMenu/JoinMenu.container.ts","components/TopBar/TopBar.styles.ts","components/TopBarTitle/TopBarTitle.tsx","components/TopBarLinks/TopBarLinks.styles.ts","components/TopBarLinks/github.svg","components/TopBarLinks/ko-fi.svg","components/HowToPlayDialog/InstructionListItem.tsx","components/HowToPlayDialog/HowToPlayDialog.tsx","components/TopBarLinks/TopBarLinks.tsx","components/TopBar/TopBar.tsx","components/SideBar/SideBar.styles.ts","components/PlayerListItem/PlayerListItem.styles.ts","components/PlayerListItem/PlayerListItem.tsx","components/PlayerListItem/PlayerListItem.container.ts","components/PlayerList/PlayerList.styles.ts","components/PlayerList/PlayerList.tsx","components/PlayerList/PlayerList.container.ts","components/PlayerList/WaitingPlayerList.tsx","components/PlayerList/WaitingPlayerList.container.ts","components/SideBar/SideBar.tsx","components/App/App.styles.ts","utils/useMountEffect.ts","components/App/App.tsx","components/App/App.container.ts","store/endpoints.ts","store/reducers.ts","store/index.ts","serviceWorker.ts","index.tsx"],"names":["socket","useStyles","makeStyles","theme","paper","padding","spacing","maxWidth","MenuContainer","children","classes","Grid","container","direction","justify","alignItems","Paper","variant","className","item","xs","Emoji","symbol","label","role","aria-label","aria-hidden","buttonGroup","flex","button","withRouter","startGame","history","useState","mode","setMode","name","setName","code","setCode","hasName","length","hasGameCode","canStartGame","codeField","TextField","onChange","event","target","value","fullWidth","onSubmit","preventDefault","goToGame","push","ToggleButtonGroup","_event","newMode","exclusive","ToggleButton","Button","type","color","disabled","socketSlice","createSlice","initialState","status","hasError","reducers","connectToSocketStarted","state","connectToSocketSuccess","connectToSocketFailed","disconnected","actions","reducer","socketDeferred","defer","playerIds","game","gameState","Object","keys","players","waitingPlayerIds","waitingPlayers","player","id","isWaiting","isFirstCreateTurn","phase","round","index","currentConcept","playerId","concepts","getSourceEntry","data","concept","currentDrawing","drawing","sourceEntryAuthor","entry","author","currentStackForPlayer","playerIdx","order","indexOf","numPlayers","playerIdxMinusTurn","sourceIdx","sourcePlayerId","stacks","entries","getPlayerSourceEntry","playerHasSubmitted","stack","hasSubmitted","submittedEntry","config","startingGame","choosingConcept","undefined","acknowledgedWinner","alerts","gameSlice","setPlayerName","action","payload","setGamePlayer","leaveGame","chosenEntry","chooseConcept","submitEntry","chooseEntry","acknowledgeWinner","updateGame","updateBy","alert","hasAlert","forCurrentPlayer","ignorePlayers","includes","lastUpdate","dismissAlert","shift","joinGame","dispatch","a","connect","uuid","createGame","Menu","Connecting","severity","message","Typography","Alert","icon","CircularProgress","props","width","MainContent","WaitingToJoin","buttonContainer","paddingTop","pluralize","singular","plural","count","InitialPhase","createdGame","creatorName","missingPlayers","onStart","gameFull","gameUrl","startButton","onClick","alertOpen","setAlertOpen","handleAlertClosed","copy","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","createdBy","location","window","Math","max","protocol","host","promise","emit","ConceptListItem","selected","ListItem","divider","ListItemAvatar","ListItemText","primary","ConceptChoicePhase","selectedConcept","onChooseConcept","emoji","List","map","key","choices","root","borderRadius","ToolBarButton","title","Tooltip","placement","IconButton","ExpandableToolBarButton","renderContent","anchorEl","setAnchorEl","handleClose","Boolean","Fragment","currentTarget","Popover","transformOrigin","close","height","marginTop","valueText","LineWidthPickerButton","lineWidth","onLineWidthChange","handleChange","_e","newValue","Array","isArray","Slider","getAriaValueText","valueLabelDisplay","step","min","ColorPickerButton","onColorChange","style","onChangeComplete","hex","handleOnChangeComplete","getIconForTool","tool","ToolPickerButton","onToolchange","newTool","ToolBar","onToolChange","canUndo","onUndo","canRedo","onRedo","onEraseAll","SketchField","styled","SketchFieldBase","border","Editor","sketch","bind","onSketchChange","this","setState","undo","redo","clear","canUndoNow","canRedoNow","toDataURL","editorColor","ref","lineColor","React","Component","DrawPhase","firstCreateTurn","submitted","conceptFrom","editorRef","createRef","editor","current","image","export","selectors","submitDrawing","GuessPhase","guess","setGuess","src","alt","submitConcept","CreateEntryPhase","avatar","backgroundColor","marginRight","EntryCard","content","CardHeader","Avatar","avatarStyle","topType","accessoriesType","hairColor","facialHairType","clotheType","clotheColor","eyeType","eyebrowType","mouthType","skinColor","wrapped","CardActionArea","DoodleEntryCard","CardMedia","component","ownProps","ConceptEntryCard","CardContent","entryPaper","selectedEntry","borderWidth","borderColor","palette","main","choicesContainer","img","EntryChoiceAcknowledge","winningEntry","stackPlayerName","currentPlayerChose","chosenPlayerName","acknowledged","onAcknowledge","entryCard","nextButton","elevation","EntryChoiceList","currentPlayerChooses","onChooseEntry","drawingEntry","otherEntries","slice","EntryChoicePhase","chosenPlayerId","find","stackPlayerId","chosen","acknowledgedBy","targetPlayer","Game","unblock","onBeforeUnload","e","returnValue","addEventListener","block","removeEventListener","leave","connected","phaseName","waitingToJoin","alertComponent","renderAlert","_dispatch","getState","useParams","handleGoClicked","params","JoinMenu","appBar","zIndex","drawer","drawerButton","breakpoints","up","display","TopBarTitle","Hidden","smUp","implementation","noWrap","xsDown","iconButton","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","viewBox","ForwardRef","forwardRef","InstructionListItem","text","Instructions","HowToPlayDialog","useTheme","fullScreen","useMediaQuery","down","Dialog","aria-labelledby","DialogTitle","DialogContent","openUrl","url","TopBarLinks","helpOpen","setHelpOpen","startIcon","SvgIcon","href","TopBar","onToggleDrawer","AppBar","position","Toolbar","edge","flexShrink","drawerPaper","drawerContainer","overflow","statusEmojis","Ready","Looking","Thinking","Guessing","Drawing","PlayerItem","points","secondary","ListItemSecondaryAction","getPlayerState","createdByCurrentPlayer","choicePhase","isPlayerTurn","alreadyChosen","PlayerListItem","PlayerSkeleton","Skeleton","PlayerList","visible","minPlayers","maxPlayers","gameStarted","remainingPlayers","skeletons","from","subheader","ListSubheader","WaitingPlayerList","SideBar","drawerOpen","Drawer","ModalProps","keepMounted","flexGrow","useMountEffect","fn","useEffect","App","playerName","setDrawerOpen","exact","path","subscribe","on","console","log","io","resolve","forEach","rootReducer","combineReducers","store","configureStore","devTools","process","hostname","match","ReactDOM","render","CssBaseline","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4aff473e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport io from 'socket.io-client';\nimport defer from 'p-defer';\nimport { AppDispatch } from '..';\nimport { SocketState } from \"./types\";\nimport { LIVE_SERVER_SOCKET } from '../endpoints';\n\nconst initialState: SocketState = {\n  status: 'disconnected',\n  hasError: false,\n}\n\nconst socketSlice = createSlice({\n  name: 'socket',\n  initialState,\n  reducers: {\n    connectToSocketStarted: state => {\n      state.status = 'connecting';\n    },\n    connectToSocketSuccess: (state) => {\n      state.status = 'connected';\n      state.hasError = false;\n    },\n    connectToSocketFailed: state => {\n      state.status = 'error';\n      state.hasError = true;\n    },\n    disconnected: state => {\n      state.status = 'disconnected';\n      state.hasError = true;\n    },\n  }\n});\n\nconst { actions, reducer } = socketSlice;\n\nexport default reducer;\n\nexport let socket: SocketIOClient.Socket;\n\nexport const socketDeferred = defer<SocketIOClient.Socket>();\n\nexport const connect = (subscribe: (socket: SocketIOClient.Socket) => void) => async (dispatch: AppDispatch) => {\n  dispatch(actions.connectToSocketStarted());\n\n  socket = io(LIVE_SERVER_SOCKET);\n  socketDeferred.resolve(socket);\n\n  const successEvents = ['connect', 'reconnect'];\n  successEvents.forEach(event => {\n    socket.on(event, () => {\n      dispatch(actions.connectToSocketSuccess());\n      subscribe(socket);\n    });\n  });\n\n  const errorEvents = ['connect_error', 'connect_timeout', 'error', 'disconnected'];\n  errorEvents.forEach(event => {\n    socket.on(event, () => {\n      dispatch(actions.connectToSocketFailed());\n    });\n  });\n\n  socket.on('reconnecting', () => {\n    dispatch(actions.connectToSocketStarted());\n  });\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(3),\n    maxWidth: 500,\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport useStyles from './MenuContainer.styles';\n\ntype Props = {\n  centered?: boolean,\n};\n\nconst MenuContainer: FunctionComponent<Props> = ({\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n      <Paper variant=\"outlined\" className={classes.paper}>\n        <Grid item xs={12}>\n          <Grid container direction=\"column\" spacing={2}>\n            {children}\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default MenuContainer;\n","import React, { FunctionComponent } from 'react';\n\ntype Props = {\n  symbol: string,\n  label?: string,\n  className?: string,\n}\n\nconst Emoji: FunctionComponent<Props> = ({\n  symbol,\n  label,\n  className,\n}) => (\n  <span\n    className={className}\n    role=\"img\"\n    aria-label={label}\n    aria-hidden={label ? 'false' : 'true'}\n  >\n    {symbol}\n  </span>\n);\n\nexport default Emoji;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  buttonGroup: {\n    flex: 1,\n  },\n  button: {\n    flex: 1,\n  }\n}));\n\nexport default useStyles;\n","import React, {\n  useState,\n  FunctionComponent,\n  FormEvent,\n} from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport MenuContainer from '../MenuContainer';\nimport Emoji from '../Emoji';\nimport useStyles from './Menu.styles';\n\nexport type GameMode = 'newGame' | 'joinGame';\n\nexport type StartGameParams = {\n  mode: GameMode,\n  name: string,\n  code: string,\n  goToGame: (code: string) => any,\n}\n\ninterface Props extends RouteComponentProps<any> {\n  startGame: (params: StartGameParams) => void,\n}\n\nconst Menu: FunctionComponent<Props> = ({\n  startGame,\n  history,\n}) => {\n  const classes = useStyles();\n\n  const [mode, setMode] = useState('newGame');\n  const handleModeChange = (\n    (_event: any, newMode: string) => setMode(newMode)\n  );\n\n  const [name, setName] = useState('');\n  const handleNameChange = (\n    (event:React.ChangeEvent<HTMLInputElement>) => setName(event.target.value)\n  );\n\n  const [code, setCode] = useState('');\n  const handleGameCodeChange = (\n    (event:React.ChangeEvent<HTMLInputElement>) => setCode(event.target.value)\n  );\n\n  const hasName = name.length > 0;\n  const hasGameCode = code.length > 0;\n  const canStartGame = hasName && (mode === 'newGame' || hasGameCode);\n\n  const handleGoClicked = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (canStartGame) {\n      startGame({\n        mode: mode as GameMode,\n        name,\n        code,\n        goToGame: (code: string) => history.push(`/game/${code}`),\n      });\n    }\n  };\n\n  const codeField = mode === 'joinGame'\n    ? (\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          label=\"Game code\"\n          onChange={handleGameCodeChange}\n          fullWidth\n        />\n      </Grid>\n    )\n    : null;\n\n  return (\n    <MenuContainer>\n      <form onSubmit={handleGoClicked}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Grid container direction=\"row\" justify=\"center\">\n              <ToggleButtonGroup\n                value={mode}\n                onChange={handleModeChange}\n                exclusive\n                aria-label=\"game mode\"\n                className={classes.buttonGroup}\n              >\n                <ToggleButton value=\"newGame\" className={classes.button}>\n                  <Emoji symbol=\"✏️\"/>\n                  New Game\n                </ToggleButton>\n                <ToggleButton value=\"joinGame\" className={classes.button}>\n                  <Emoji symbol=\"👥\"/>\n                  <span>Join Game</span>\n                </ToggleButton>\n              </ToggleButtonGroup>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              label=\"Player name\"\n              value={name}\n              onChange={handleNameChange}\n              fullWidth\n            />\n          </Grid>\n          {codeField}\n          <Grid item xs={12}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!canStartGame}\n            >\n              <Emoji symbol=\"🙌\"/>\n              <span>Go!</span>\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </MenuContainer>\n  );\n};\n\nexport default withRouter(Menu);\n","import { RootState } from \"../reducers\";\nimport { Player, CreateEntryPhase, Stack, Entry, ConceptEntry, DrawingEntry } from \"./types\";\n\nexport const playerIds = (state: RootState): string[] => {\n  if (!state.game.gameState) {\n    return [];\n  }\n  return Object.keys(state.game.gameState.players);\n};\n\nexport const waitingPlayerIds = (state: RootState): string[] => {\n  if (!state.game.gameState) {\n    return [];\n  }\n  return Object.keys(state.game.gameState.waitingPlayers);\n};\n\nexport const player = (state: RootState, id: string): Player | null => {\n  const game = state.game.gameState;\n  if (!game) {\n    return null;\n  }\n  return game.players[id] || game.waitingPlayers[id];\n};\n\nexport const isWaiting = (state: RootState, id: string): boolean => {\n  const game = state.game.gameState;\n  if (!game) {\n    return false;\n  }\n  return !!game.waitingPlayers[id];\n};\n\nexport const isFirstCreateTurn = (state: RootState) => {\n  const game = state.game.gameState;\n  if (!game) {\n    return false;\n  }\n  const phase = game.round.phase;\n  if (phase.name !== 'createEntry') {\n    return false;\n  }\n  return phase.index === 0;\n};\n\nexport const currentConcept = (state: RootState) => {\n  if (isFirstCreateTurn(state)) {\n    const game = state.game.gameState;\n    const playerId = state.game.player\n    if (!game || !playerId) {\n      return;\n    }\n\n    return game.round.concepts[playerId];\n  }\n\n  const entry = getSourceEntry(state) as Entry;\n  const conceptEntry = entry.data as ConceptEntry;\n  return conceptEntry.concept;\n};\n\nexport const currentDrawing = (state: RootState) => {\n  const entry = getSourceEntry(state) as Entry;\n  const drawingEntry = entry.data as DrawingEntry;\n  return drawingEntry.drawing;\n};\n\nexport const sourceEntryAuthor = (state: RootState) => {\n  if (isFirstCreateTurn(state)) {\n    const game = state.game.gameState;\n    const playerId = state.game.player\n    if (!game || !playerId) {\n      return;\n    }\n\n    return game.players[playerId].name;\n  }\n\n  const entry = getSourceEntry(state) as Entry;\n  const author = player(state, entry.author);\n  return author?.name;\n};\n\nconst currentStackForPlayer = (state: RootState, playerId: string) => {\n  const game = state.game.gameState;\n  if (!game || game.round.phase.name !== 'createEntry') {\n    return;\n  }\n\n  const phase = game.round.phase as CreateEntryPhase;\n  const playerIdx = game.round.order.indexOf(playerId);\n  const numPlayers = Object.keys(game.players).length;\n  const playerIdxMinusTurn = playerIdx - phase.index;\n  const sourceIdx = playerIdxMinusTurn < 0\n    ? numPlayers + playerIdxMinusTurn\n    : playerIdxMinusTurn;\n  const sourcePlayerId = game.round.order[sourceIdx];\n  return game.round.stacks[sourcePlayerId];\n};\n\nconst getPlayerSourceEntry = (state: RootState, playerId: string) => {\n  const game = state.game.gameState;\n  if (!game || game.round.phase.name !== 'createEntry') {\n    return;\n  }\n\n  const phase = game.round.phase as CreateEntryPhase;\n  const stack = currentStackForPlayer(state, playerId) as Stack;\n  const lastEntry = stack.entries[phase.index - 1];\n  return lastEntry;\n};\n\nexport const getSourceEntry = (state: RootState) => {\n  const playerId = state.game.player as string;\n  return getPlayerSourceEntry(state, playerId);\n};\n\nexport const playerHasSubmitted = (state: RootState, playerId: string) => {\n  const game = state.game.gameState;\n  if (!game || game.round.phase.name !== 'createEntry') {\n    return false;\n  }\n\n  const stack = currentStackForPlayer(state, playerId) as Stack;\n  const entry = stack.entries[stack.entries.length - 1];\n  return !!entry && entry.author === playerId;\n};\n\nexport const hasSubmitted = (state: RootState) => {\n  if (state.game.submittedEntry) {\n    return true;\n  }\n\n  const game = state.game.gameState;\n  if (!game || game.round.phase.name !== 'createEntry') {\n    return false;\n  }\n\n  const playerId = state.game.player as string;\n  return playerHasSubmitted(state, playerId);\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuid } from 'uuid';\nimport { AppDispatch, AppGetState } from '..';\nimport { socketDeferred } from '../socket';\nimport {\n  GameSliceState,\n  CreateGameParams,\n  GameJoinedEvent,\n  GameUpdatedEvent,\n  JoinGameParams,\n  Alert,\n} from \"./types\";\nimport * as selectors from './selectors';\n\nconst initialState: GameSliceState = {\n  config: {},\n  startingGame: false,\n  choosingConcept: undefined,\n  submittedEntry: false,\n  acknowledgedWinner: false,\n  alerts: [],\n}\n\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    setPlayerName: (state, action: PayloadAction<string>) => {\n      state.config.name = action.payload;\n    },\n    setCode: (state, action: PayloadAction<string>) => {\n      state.config.code = action.payload;\n    },\n    setGamePlayer: (state, action: PayloadAction<GameJoinedEvent>) => {\n      state.player = action.payload.player;\n    },\n    leaveGame: (state) => {\n      state.config = {\n        code: undefined,\n        name: undefined,\n      };\n      state.player = undefined;\n      state.gameState = undefined;\n      state.startingGame = false;\n      state.choosingConcept = undefined;\n      state.submittedEntry = false;\n      state.chosenEntry = undefined;\n      state.acknowledgedWinner = false;\n      state.alerts = [];\n    },\n    startGame: (state) => {\n      state.startingGame = true;\n    },\n    chooseConcept: (state, action: PayloadAction<string>) => {\n      state.choosingConcept = action.payload;\n    },\n    submitEntry: (state) => {\n      state.submittedEntry = true;\n    },\n    chooseEntry: (state, action: PayloadAction<string>) => {\n      state.chosenEntry = action.payload;\n    },\n    acknowledgeWinner: (state) => {\n      state.acknowledgedWinner = true;\n    },\n    updateGame: (state, action: PayloadAction<GameUpdatedEvent>) => {\n      const {\n        payload: { updateBy, gameState, alert },\n      } = action;\n\n      if (updateBy === state.player) {\n        state.startingGame = false;\n        state.choosingConcept = undefined;\n        state.submittedEntry = false;\n        state.chosenEntry = undefined;\n        state.acknowledgedWinner = false;\n      }\n\n      const hasAlert = !!alert;\n      const playerId = state.player as string;\n      const forCurrentPlayer = !alert?.ignorePlayers\n        || !alert.ignorePlayers.includes(playerId)\n\n      if (hasAlert && forCurrentPlayer) {\n        state.alerts.push(alert as Alert);\n      }\n\n      if (state.gameState && state.gameState.lastUpdate > gameState.lastUpdate) {\n        return state;\n      }\n      state.gameState = gameState;\n    },\n    dismissAlert: (state) => {\n      if (state.alerts.length > 0) {\n        state.alerts.shift();\n      }\n    }\n  },\n});\n\nconst { actions, reducer } = gameSlice;\n\nexport default reducer;\n\nexport const subscribe = (dispatch: AppDispatch, socket: SocketIOClient.Socket) => {\n  socket.on('connectedToGame', (event: GameJoinedEvent) => {\n    console.log('connectedToGame:', event);\n    dispatch(actions.setGamePlayer(event));\n  });\n\n  socket.on('gameUpdated', (event: GameUpdatedEvent) => {\n    console.log('gameUpdated:', event);\n\n    dispatch(actions.updateGame(event));\n  });\n\n  socket.on('gameDoesNotExist', () => {\n    console.log('gameDoesNotExist');\n    dispatch(actions.leaveGame());\n  });\n\n  socket.on('disconnect', () => {\n    console.log('disconnect');\n    dispatch(actions.leaveGame());\n  });\n};\n\nexport const createGame = (\n  { name, goToGame }: CreateGameParams,\n)=> async (dispatch: AppDispatch) => {\n  const code = uuid();\n  dispatch(joinGame({ code, name, goToGame }));\n};\n\nexport const joinGame = (\n  { code, name, goToGame }: JoinGameParams,\n)=> async (dispatch: AppDispatch) => {\n  dispatch(actions.setPlayerName(name));\n  dispatch(actions.setCode(code));\n  goToGame(code);\n};\n\nexport const connectToGameChannel = () => async (\n  _dispatch: AppDispatch,\n  getState: AppGetState,\n) => {\n  const { game: { config: { name, code } } } = getState();\n  const socket = await socketDeferred.promise;\n  socket.emit('joinGame', { name, code });\n};\n\nexport const startGame = () => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.startGame());\n  const socket = await socketDeferred.promise;\n  socket.emit('startGame', {});\n};\n\nexport const leaveGame = () => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.leaveGame());\n  const socket = await socketDeferred.promise;\n  socket.emit('leaveGame', {});\n};\n\nexport const chooseConcept = (concept: string) => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.chooseConcept(concept));\n  const socket = await socketDeferred.promise;\n  socket.emit('chooseConcept', { concept });\n};\n\nexport const submitDrawing = (drawing: string) => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.submitEntry());\n  const socket = await socketDeferred.promise;\n  socket.emit('submitEntry', {\n    entry: { type: 'drawing', drawing }\n  });\n};\n\nexport const submitConcept = (concept: string) => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.submitEntry());\n  const socket = await socketDeferred.promise;\n  socket.emit('submitEntry', {\n    entry: { type: 'concept', concept }\n  });\n};\n\nexport const chooseEntry = (targetPlayer: string) => async(\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.chooseEntry(targetPlayer));\n  const socket = await socketDeferred.promise;\n  socket.emit('chooseEntry', { targetPlayer });\n};\n\nexport const acknowledgeWinner = () => async(\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.acknowledgeWinner());\n  const socket = await socketDeferred.promise;\n  socket.emit('acknowledgeWinner', {});\n};\n\nconst { dismissAlert } = actions;\nexport { dismissAlert };\n\nexport { selectors };\n","import { connect } from 'react-redux';\n\nimport Menu, { StartGameParams } from './Menu';\nimport { AppDispatch } from '../../store';\nimport { createGame, joinGame } from '../../store/game';\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  startGame: ({ mode, name, code, goToGame }: StartGameParams) => {\n    if (mode === 'newGame') {\n      dispatch(createGame({ name, goToGame }));\n    } else {\n      dispatch(joinGame({ name, code, goToGame }));\n    }\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(Menu);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    maxWidth: 500,\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n\nimport useStyles from './Connecting.styles';\nimport Emoji from '../Emoji';\n\ntype Props = {\n  hasError: boolean,\n};\n\nconst Connecting: FunctionComponent<Props> = ({\n  hasError,\n}) => {\n  const classes = useStyles();\n  const severity = hasError ? 'error' : 'info';\n  const message = hasError\n    ? (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid item>\n          <Typography variant=\"h4\">\n            <Emoji symbol=\"🙈\" />\n          </Typography>\n        </Grid>\n        <Grid item>\n          Failed to connect, retrying...\n        </Grid>\n      </Grid>\n    )\n    : 'Connecting...';\n  return (\n    <Grid item xs={12}>\n      <Alert\n        icon={false}\n        className={classes.alert}\n        variant=\"outlined\"\n        severity={severity}\n      >\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid item>\n            <CircularProgress color=\"inherit\" />\n          </Grid>\n          <Grid item>\n            {message}\n          </Grid>\n        </Grid>\n      </Alert>\n    </Grid>\n  );\n};\n\nexport default Connecting;\n","import { connect } from 'react-redux';\n\nimport Connecting from './Connecting';\nimport { RootState } from '../../store/reducers';\n\nconst mapStateToProps = (state: RootState) => ({\n  hasError: state.socket.hasError,\n});\n\nexport default connect(mapStateToProps)(Connecting);\n","import { makeStyles } from '@material-ui/core/styles';\n\ntype PaperProps = {\n  width: number,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: (props: PaperProps) => ({\n    padding: theme.spacing(3),\n    maxWidth: props.width,\n  }),\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport useStyles from './MainContent.styles';\n\ntype Props = {\n  width?: number,\n};\n\nconst MainContent: FunctionComponent<Props> = ({\n  children,\n  width = 500,\n}) => {\n  const classes = useStyles({ width });\n\n  return (\n    <Grid item xs={12}>\n      <Paper variant=\"outlined\" className={classes.paper}>\n        <Grid container direction=\"column\" spacing={2}>\n          {children}\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default MainContent;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport MainContent from '../MainContent';\nimport Emoji from '../Emoji';\n\n\nconst WaitingToJoin = () => (\n  <MainContent>\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n      <Grid item>\n        <Typography variant=\"h4\"><Emoji symbol=\"✏️\"/></Typography>\n      </Grid>\n      <Grid item>\n        <Typography>You will join the game in the next round.</Typography>\n      </Grid>\n    </Grid>\n  </MainContent>\n);\n\nexport default WaitingToJoin;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  buttonContainer: {\n    paddingTop: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","\nconst pluralize = (singular: string, plural: string, count: number): string => (\n  count === 1 ? singular : plural\n);\n\nexport default pluralize;\n","import React, {\n  FunctionComponent,\n  useState,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport copy from 'copy-to-clipboard';\n\nimport MainContent from '../MainContent';\nimport Emoji from '../Emoji';\nimport useStyles from './InitialPhase.styles';\nimport pluralize from '../../utils/pluralize';\n\ntype Props = {\n  createdGame: boolean,\n  creatorName: string,\n  missingPlayers: number,\n  gameFull: boolean,\n  gameUrl: string,\n  onStart: () => void,\n};\n\nconst InitialPhase: FunctionComponent<Props> = ({\n  createdGame,\n  creatorName,\n  missingPlayers,\n  onStart,\n  gameFull,\n  gameUrl,\n}) => {\n  const classes = useStyles();\n\n  const startButton = createdGame\n    ? (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={missingPlayers > 0}\n        onClick={onStart}\n      >\n        <Emoji symbol=\"🚀\" />\n        <span>Start!</span>\n      </Button>\n    )\n    : null;\n\n  let message = '';\n  if (missingPlayers > 0) {\n    message = `Waiting for ${missingPlayers} more ${pluralize('player', 'players', missingPlayers)}.`;\n  } else if (createdGame) {\n    message = 'Ready to start?';\n  } else {\n    message = `Waiting for ${creatorName} to start the game.`;\n  }\n\n  const [alertOpen, setAlertOpen] = useState(false);\n  const handleInviteClicked = () => {\n    copy(gameUrl);\n    setAlertOpen(true);\n  }\n  const handleAlertClosed = () => setAlertOpen(false);\n\n  return (\n    <MainContent>\n      <Grid item xs={12}>\n        <Typography>{message}</Typography>\n      </Grid>\n      <Grid\n        container direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={classes.buttonContainer}\n      >\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={gameFull}\n            onClick={handleInviteClicked}\n          >\n            Invite friends\n          </Button>\n          <Snackbar\n            open={alertOpen}\n            autoHideDuration={5000}\n            onClose={handleAlertClosed}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          >\n            <Alert onClose={handleAlertClosed} severity=\"success\">\n              Game code copied to clipboard!\n            </Alert>\n          </Snackbar>\n        </Grid>\n        <Grid item>\n          {startButton}\n        </Grid>\n      </Grid>\n    </MainContent>\n  );\n};\n\nexport default InitialPhase;\n","import { connect } from 'react-redux';\nimport { AppDispatch } from '../../store';\nimport InitialPhase from './InitialPhase';\nimport { RootState } from '../../store/reducers';\nimport { GameState } from '../../store/game/types';\nimport { startGame } from '../../store/game';\nimport {\n  MIN_PLAYERS,\n  MAX_PLAYERS,\n} from '../../store/game/constants';\n\nconst mapStateToProps = (state: RootState) => {\n  const game = state.game.gameState as GameState;\n  const player = state.game.player as string;\n  const numPlayers = Object.keys(game.players).length;\n  const createdBy = game.players[game.createdBy];\n  const location = window.location;\n\n  return {\n    creatorName: createdBy.name,\n    createdGame: createdBy.id === player,\n    missingPlayers: Math.max(0, MIN_PLAYERS - numPlayers),\n    gameFull: numPlayers === MAX_PLAYERS,\n    gameUrl: `${location.protocol}//${location.host}/#/game/${game.code}`,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onStart: () => dispatch(startGame()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(InitialPhase);\n","const isDevelopment = process.env.NODE_ENV === 'development';\n\nexport const MIN_PLAYERS = isDevelopment ? 2 : 4;\nexport const MAX_PLAYERS = 8;\n","import React, {\n  FunctionComponent,\n  MouseEvent,\n} from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Typography from '@material-ui/core/Typography';\n\nimport Emoji from '../Emoji';\n\ntype Props = {\n  concept: string,\n  selected?: boolean,\n  disabled?: boolean,\n  onClick: (event: MouseEvent<HTMLElement>) => void,\n}\n\nconst ConceptListItem: FunctionComponent<Props> = ({\n  concept,\n  selected = false,\n  disabled = false,\n  onClick,\n}) => (\n  <ListItem\n    divider\n    button\n    onClick={onClick}\n    selected={selected}\n    disabled={disabled}\n  >\n    <ListItemAvatar>\n      <Typography variant=\"h4\"><Emoji symbol=\"💡\" /></Typography>\n    </ListItemAvatar>\n    <ListItemText primary={concept}/>\n  </ListItem>\n);\n\nexport default ConceptListItem;\n","import React, { FunctionComponent } from 'react';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport MainContent from '../MainContent';\nimport Emoji from '../Emoji';\nimport ConceptListItem from '../ConceptListItem';\n\ntype Props = {\n  concepts: string[],\n  selectedConcept?: string,\n  onChooseConcept: (concept: string) => void,\n};\n\nconst ConceptChoicePhase: FunctionComponent<Props> = ({\n  concepts,\n  selectedConcept,\n  onChooseConcept,\n}) => {\n  const emoji = selectedConcept ? '⏳' : '🤫';\n  const message = selectedConcept\n    ? 'You will start drawing as soon as every player has chosen what to draw.'\n    : 'Choose what to draw. Keep it a secret!';\n\n  return (\n    <MainContent>\n      <Grid item xs={12}>\n        <Typography>\n          <Emoji symbol={emoji} />\n          <span> {message}</span>\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <List>\n          {\n            concepts.map(concept => (\n              <ConceptListItem\n                key={concept}\n                concept={concept}\n                selected={selectedConcept === concept}\n                disabled={!!selectedConcept}\n                onClick={() => onChooseConcept(concept)}\n              />\n            ))\n          }\n        </List>\n      </Grid>\n    </MainContent>\n  );\n};\n\nexport default ConceptChoicePhase;\n","import { connect } from 'react-redux';\n\nimport ConceptChoicePhase from './ConceptChoicePhase';\nimport { AppDispatch } from '../../store';\nimport { RootState } from '../../store/reducers';\nimport { chooseConcept } from '../../store/game';\nimport {\n  ConceptChoicePhase as ConceptChoicePhaseType,\n  Round,\n} from '../../store/game/types';\n\nconst mapStateToProps = (state: RootState) => {\n  const choosingConcept = state.game.choosingConcept;\n  const round = state.game.gameState?.round as Round;\n  const phase = round.phase as ConceptChoicePhaseType;\n  const playerId = state.game.player as string;\n  const concepts = phase.choices[playerId];\n  const selectedConcept = round.concepts[playerId];\n\n  return {\n    selectedConcept: selectedConcept || choosingConcept,\n    concepts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onChooseConcept: (concept: string) => dispatch(chooseConcept(concept)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ConceptChoicePhase);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // border: '1px solid',\n    borderRadius: 4,\n  },\n}));\n\nexport default useStyles;\n","import React, {\n  ReactNode,\n  FunctionComponent,\n  MouseEvent,\n} from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from './ToolBarButton.styles';\n\ntype Props = {\n  title: string,\n  icon: ReactNode,\n  onClick: (event: MouseEvent<HTMLElement>) => void,\n  disabled?: boolean,\n}\n\nconst ToolBarButton: FunctionComponent<Props> = ({\n  title,\n  icon,\n  disabled = false,\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Tooltip title={title} placement=\"left\">\n      <span>\n        <IconButton\n          aria-label={title}\n          onClick={onClick}\n          disabled={disabled}\n          classes={{\n            root: classes.root,\n          }}\n        >\n          {icon}\n        </IconButton>\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default ToolBarButton;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import React, {\n  useState,\n  FunctionComponent,\n  MouseEvent,\n  ReactNode,\n} from 'react';\n\nimport Popover from '@material-ui/core/Popover';\n\nimport ToolBarButton from '../ToolBarButton';\nimport useStyles from './ExpandableToolBarButton.styles';\n\ntype RenderContentProps = {\n  close: () => void,\n}\n\ntype Props = {\n  title: string,\n  icon: ReactNode,\n  renderContent: (props: RenderContentProps) => ReactNode,\n}\n\nconst ExpandableToolBarButton: FunctionComponent<Props> = ({\n  title,\n  icon,\n  renderContent,\n}) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const handleClick = (event: MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => setAnchorEl(null);\n\n  const open = Boolean(anchorEl);\n  const id = open ? `${title}-popover` : undefined;\n\n  return (\n    <React.Fragment>\n      <ToolBarButton\n        title={title}\n        icon={icon}\n        onClick={handleClick}\n      />\n      <Popover\n        id={id}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left',\n        }}\n      >\n        {renderContent({ close: handleClose })}\n      </Popover>\n    </React.Fragment>\n  );\n};\n\nexport default ExpandableToolBarButton;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flex: 1,\n    width: 200,\n    height: 25,\n    marginTop: 18,\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\n\nimport Slider from '@material-ui/core/Slider';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nimport ExpandableToolBarButton from '../ExpandableToolBarButton';\nimport useStyles from './LineWidthPickerButton.styles';\n\ntype Props = {\n  lineWidth: number,\n  onLineWidthChange: (width: number) => void,\n}\n\nconst valueText = (value: number): string => `${value} px`;\n\nconst LineWidthPickerButton: FunctionComponent<Props> = ({\n  lineWidth,\n  onLineWidthChange,\n}) => {\n  const classes = useStyles();\n\n  const handleChange = (\n    _e: any,\n    newValue: number | number[],\n  ) => onLineWidthChange(Array.isArray(newValue) ? newValue[0] : newValue);\n\n  return (\n    <ExpandableToolBarButton\n      title=\"Line width\"\n      icon={<FiberManualRecordIcon />}\n      renderContent={() => (\n        <div className={classes.root}>\n          <Slider\n            value={lineWidth}\n            getAriaValueText={valueText}\n            valueLabelDisplay=\"on\"\n            step={1}\n            min={1}\n            max={50}\n            onChange={handleChange}\n          />\n        </div>\n      )}\n    />\n  );\n};\n\nexport default LineWidthPickerButton;\n","import React, { FunctionComponent } from 'react';\n\nimport { CirclePicker, ColorResult } from 'react-color';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nimport ExpandableToolBarButton from '../ExpandableToolBarButton';\n\ntype Props = {\n  color: string,\n  onColorChange: (color: string) => void,\n}\n\nconst ColorPickerButton: FunctionComponent<Props> = ({\n  color,\n  onColorChange,\n}) => {\n  const handleOnChangeComplete = (color: ColorResult) => onColorChange(color.hex);\n\n  return (\n    <ExpandableToolBarButton\n      title=\"Color\"\n      icon={<FiberManualRecordIcon style={{ color }}/>}\n      renderContent={({ close }) => (\n        <CirclePicker\n          color={color}\n          onChangeComplete={(color) => {\n            close();\n            handleOnChangeComplete(color);\n          }}\n        />\n      )}\n    />\n  );\n};\n\nexport default ColorPickerButton;\n","import React, { FunctionComponent } from 'react';\n\nimport CreateIcon from '@material-ui/icons/Create';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport ExpandableToolBarButton from '../ExpandableToolBarButton';\n\ntype Tool = 'pencil' | 'eraser'\n\ntype Props = {\n  tool: Tool,\n  onToolchange: (tool: Tool) => void,\n}\n\nconst getIconForTool = (tool: Tool) => (\n  tool === 'pencil'\n    ? <CreateIcon />\n    : <ClearIcon />\n);\n\nconst ToolPickerButton: FunctionComponent<Props> = ({\n  tool,\n  onToolchange,\n}) => (\n  <ExpandableToolBarButton\n    title=\"Tool\"\n    icon={getIconForTool(tool)}\n    renderContent={({ close }) => (\n      <ToggleButtonGroup\n        value={tool}\n        exclusive\n        onChange={(_event, newTool) => {\n          close();\n          onToolchange(newTool)\n        }}\n        aria-label=\"text alignment\"\n      >\n        <ToggleButton value=\"pencil\" aria-label=\"pencil\">\n          <CreateIcon />\n        </ToggleButton>\n        <ToggleButton value=\"eraser\" aria-label=\"eraser\">\n          <ClearIcon />\n        </ToggleButton>\n      </ToggleButtonGroup>\n    )}\n  />\n);\n\nexport default ToolPickerButton;\n","import React, { FunctionComponent } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport ToolBarButton from '../ToolBarButton';\nimport LineWidthPickerButton from '../LineWidthPickerButton';\nimport ColorPickerButton from '../ColorPickerButton';\nimport ToolPickerButton from '../ToolPickerButton';\n\nexport type Tool = 'pencil' | 'eraser'\n\ntype Props = {\n  lineWidth?: number,\n  onLineWidthChange: (width: number) => void,\n  color?: string,\n  onColorChange: (color: string) => void,\n  tool?: Tool\n  onToolChange: (tool: Tool) => void,\n  canUndo?: boolean,\n  onUndo: () => void,\n  canRedo?: boolean,\n  onRedo: () => void,\n  onEraseAll: () => void,\n}\n\nconst ToolBar: FunctionComponent<Props> = ({\n  lineWidth = 5,\n  onLineWidthChange,\n  color = '#f44336',\n  onColorChange,\n  tool = 'pencil',\n  onToolChange,\n  canUndo = false,\n  onUndo,\n  canRedo = false,\n  onRedo,\n  onEraseAll,\n}) => (\n  <Grid\n    container\n    direction=\"column\"\n    spacing={0}\n    alignItems=\"center\"\n  >\n    <LineWidthPickerButton\n      lineWidth={lineWidth}\n      onLineWidthChange={onLineWidthChange}\n    />\n    <ColorPickerButton\n      color={color}\n      onColorChange={onColorChange}\n    />\n    <ToolPickerButton\n      tool={tool}\n      onToolchange={onToolChange}\n    />\n    <ToolBarButton\n      title=\"Undo\"\n      icon={<UndoIcon />}\n      onClick={onUndo}\n      disabled={!canUndo}\n    />\n    <ToolBarButton\n      title=\"Redo\"\n      icon={<RedoIcon />}\n      onClick={onRedo}\n      disabled={!canRedo}\n    />\n    <ToolBarButton\n      title=\"Erase all\"\n      icon={<DeleteIcon />}\n      onClick={onEraseAll}\n    />\n  </Grid>\n);\n\nexport default ToolBar;\n","import { styled } from '@material-ui/core/styles';\nimport { SketchField as SketchFieldBase } from 'react-sketch';\n\nexport const SketchField = styled(SketchFieldBase)({\n  border: '1px solid',\n  borderRadius: 4,\n});\n\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ToolBar from '../ToolBar';\nimport { SketchField } from './Editor.styled';\n\ntype Tool = 'pencil' | 'eraser'\ntype Props = {}\ntype State = {\n  lineWidth: number,\n  color: string,\n  tool: Tool\n  canUndo: boolean,\n  canRedo: boolean,\n}\n\nclass Editor extends React.Component<Props, State> {\n  private sketch: any;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      lineWidth: 10,\n      color: '#f44336',\n      tool: 'pencil',\n      canUndo: false,\n      canRedo: false,\n    };\n\n    this.onLineWidthChange = this.onLineWidthChange.bind(this);\n    this.onColorChange = this.onColorChange.bind(this);\n    this.onToolChange = this.onToolChange.bind(this);\n    this.onUndo = this.onUndo.bind(this);\n    this.onRedo = this.onRedo.bind(this);\n    this.onEraseAll = this.onEraseAll.bind(this);\n    this.onSketchChange = this.onSketchChange.bind(this);\n  }\n\n  onLineWidthChange(lineWidth: number) {\n    this.setState({ lineWidth });\n  }\n\n  onColorChange(color: string) {\n    this.setState({ color });\n  }\n\n  onToolChange(tool: Tool) {\n    this.setState({ tool });\n  }\n\n  onUndo() {\n    if (!this.sketch) {\n      return;\n    }\n    this.sketch.undo();\n  }\n\n  onRedo() {\n    if (!this.sketch) {\n      return;\n    }\n    this.sketch.redo();\n  }\n\n  onEraseAll() {\n    if (!this.sketch) {\n      return;\n    }\n    this.sketch.clear();\n  }\n\n  onSketchChange() {\n    if (!this.sketch) {\n      return;\n    }\n\n    const { canUndo, canRedo } = this.state;\n    const canUndoNow = this.sketch.canUndo();\n    const canRedoNow = this.sketch.canRedo();\n    const needsUpdate = canUndo !== canUndoNow || canRedo !== canRedoNow;\n    if (needsUpdate) {\n      this.setState({\n        canUndo: canUndoNow,\n        canRedo: canRedoNow,\n      });\n    }\n  }\n\n  export(): string {\n    if (!this.sketch) {\n      return '';\n    }\n    return this.sketch.toDataURL();\n  }\n\n  render() {\n    const {\n      lineWidth,\n      color,\n      tool,\n      canUndo,\n      canRedo,\n    } = this.state;\n\n    const editorColor = tool === 'pencil' ? color : '#ffffff';\n\n    return (\n      <Grid container direction=\"row\">\n        <Grid item xs={2}>\n          <ToolBar\n            lineWidth={lineWidth}\n            onLineWidthChange={this.onLineWidthChange}\n            color={color}\n            onColorChange={this.onColorChange}\n            tool={tool}\n            onToolChange={this.onToolChange}\n            canUndo={canUndo}\n            onUndo={this.onUndo}\n            canRedo={canRedo}\n            onRedo={this.onRedo}\n            onEraseAll={this.onEraseAll}\n          />\n        </Grid>\n        <Grid item xs={10}>\n          <SketchField\n            ref={(sketch: any) => this.sketch = sketch}\n            height='480px'\n            tool={tool}\n            lineColor={editorColor}\n            lineWidth={lineWidth}\n            onChange={this.onSketchChange}\n          />\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default Editor;\n","import React, {\n  FunctionComponent,\n  createRef,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport MainContent from '../MainContent';\nimport Editor from '../Editor';\nimport Emoji from '../Emoji';\n\ntype Props = {\n  firstCreateTurn: boolean,\n  submitted: boolean,\n  concept: string | undefined,\n  conceptFrom: string | undefined,\n  onSubmit: (image: string) => void,\n};\n\nconst DrawPhase: FunctionComponent<Props> = ({\n  firstCreateTurn,\n  submitted,\n  concept,\n  conceptFrom,\n  onSubmit,\n}) => {\n  const editorRef = createRef<Editor>();\n  const handleSubmitClicked = () => {\n    const editor = editorRef.current;\n    if (editor) {\n      const image = editor.export();\n      onSubmit(image);\n    }\n  };\n\n  const emoji = submitted ? '⏳' : '✏️';\n  let message = '';\n  if (submitted) {\n    message = 'Waiting for everyone to finish their drawing.';\n  } else if (firstCreateTurn) {\n    message = `Draw \"${concept}\".`;\n  } else {\n    message = `From ${conceptFrom}, draw \"${concept}\".`;\n  }\n\n  return (\n    <MainContent width={800}>\n      <Grid item xs={12}>\n        <Typography>\n          <Emoji symbol={emoji} />\n          <span> {message}</span>\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Editor ref={editorRef}/>\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSubmitClicked}\n          disabled={submitted}\n        >\n          <Emoji symbol=\"🎨\"/>\n          <span>Done</span>\n        </Button>\n      </Grid>\n    </MainContent>\n  );\n};\n\nexport default DrawPhase;\n","import { connect } from 'react-redux';\n\nimport DrawPhase from './DrawPhase';\nimport { AppDispatch } from '../../store';\nimport { RootState } from '../../store/reducers';\nimport { submitDrawing } from '../../store/game';\nimport { selectors } from '../../store/game';\n\nconst mapStateToProps = (state: RootState) => ({\n  firstCreateTurn: selectors.isFirstCreateTurn(state),\n  concept: selectors.currentConcept(state),\n  conceptFrom: selectors.sourceEntryAuthor(state),\n  submitted: selectors.hasSubmitted(state),\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSubmit: (drawing: string) => dispatch(submitDrawing(drawing)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DrawPhase);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    width: 400,\n    borderRadius: 4,\n  }\n}));\n\nexport default useStyles;\n","import React, {\n  FunctionComponent,\n  useState,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from './GuessPhase.styles';\nimport Emoji from '../Emoji';\nimport MainContent from '../MainContent';\n\ntype Props = {\n  author: string | undefined,\n  image: string,\n  submitted: boolean,\n  onSubmit: (image: string) => void,\n};\n\nconst GuessPhase: FunctionComponent<Props> = ({\n  author,\n  image,\n  submitted,\n  onSubmit,\n}) => {\n  const classes = useStyles();\n  const [guess, setGuess] = useState('');\n  const handleGuessChanged = (\n    (event:React.ChangeEvent<HTMLInputElement>) => setGuess(event.target.value)\n  )\n  const handleSubmitClicked = () => {\n    onSubmit(guess);\n  };\n\n  const message = submitted\n    ? 'Waiting for everyone to guess.'\n    : `Guess what ${author} drew.`;\n  const emoji = submitted ? '⏳' : '🕵️‍♂️';\n\n  return (\n    <MainContent width={800}>\n      <Grid item xs={12}>\n        <Typography>\n          <Emoji symbol={emoji} />\n          <span> {message}</span>\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <img src={image} alt={message} className={classes.image} />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          label=\"Guess\"\n          value={guess}\n          onChange={handleGuessChanged}\n          disabled={submitted}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSubmitClicked}\n          disabled={submitted}\n        >\n          <Emoji symbol=\"🎨\"/>\n          <span>Done</span>\n        </Button>\n      </Grid>\n    </MainContent>\n  );\n};\n\nexport default GuessPhase;\n","import { connect } from 'react-redux';\n\nimport GuessPhase from './GuessPhase';\nimport { AppDispatch } from '../../store';\nimport { RootState } from '../../store/reducers';\nimport { submitConcept } from '../../store/game';\nimport { selectors } from '../../store/game';\n\nconst mapStateToProps = (state: RootState) => ({\n  submitted: selectors.hasSubmitted(state),\n  author: selectors.sourceEntryAuthor(state),\n  image: selectors.currentDrawing(state),\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSubmit: (concept: string) => dispatch(submitConcept(concept)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GuessPhase);\n","import React, { FunctionComponent } from 'react';\n\nimport DrawPhase from '../DrawPhase';\nimport GuessPhase from '../GuessPhase';\n\nexport type EntryType = 'draw' | 'guess';\n\ntype Props = {\n  type: EntryType,\n};\n\nconst CreateEntryPhase: FunctionComponent<Props> = ({\n  type,\n}) => (\n  type === 'draw'\n    ? <DrawPhase />\n    : <GuessPhase />\n);\n\nexport default CreateEntryPhase;\n","import { connect } from 'react-redux';\n\nimport CreateEntryPhase, { EntryType } from './CreateEntryPhase';\nimport { RootState } from '../../store/reducers';\nimport { CreateEntryPhase as CreateEntryPhaseType } from '../../store/game/types';\n\nconst mapStateToProps = (state: RootState) => {\n  const phase = state.game.gameState?.round.phase as CreateEntryPhaseType;\n  const type: EntryType = phase.index % 2 === 0\n    ? 'draw'\n    : 'guess'\n\n  return { type };\n};\n\nexport default connect(mapStateToProps)(CreateEntryPhase);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(3),\n  },\n  avatar: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, {\n  FunctionComponent,\n  ReactNode\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Avatar from '@material-ui/core/Avatar';\nimport Avataaar from 'avataaars';\n\nimport { Avatar as AvatarType } from '../../store/game/types';\nimport useStyles from './EntryCard.styles';\n\ntype Props = {\n  name: string,\n  avatar: AvatarType,\n  entry: ReactNode,\n  onClick?: () => void,\n}\n\nconst EntryCard: FunctionComponent<Props> = ({\n  name,\n  avatar,\n  entry,\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  const content = (\n    <div className={classes.container}>\n      <CardHeader\n        avatar={(\n          <Avatar variant=\"rounded\" alt={name} className={classes.avatar}>\n            <Avataaar\n              avatarStyle=\"Circle\"\n              topType={avatar.topType}\n              accessoriesType={avatar.accessoriesType}\n              hairColor={avatar.hairColor}\n              facialHairType={avatar.facialHairType}\n              clotheType={avatar.clotheType}\n              clotheColor={avatar.clotheColor}\n              eyeType={avatar.eyeType}\n              eyebrowType={avatar.eyebrowType}\n              mouthType={avatar.mouthType}\n              skinColor={avatar.skinColor}\n            />\n          </Avatar>\n        )}\n        title={name}\n      />\n      {entry}\n    </div>\n  );\n  const wrapped = onClick\n    ? (<CardActionArea onClick={onClick}>{content}</CardActionArea>)\n    : content;\n\n  return (\n    <Grid item xs={12}>\n      {wrapped}\n    </Grid>\n  );\n}\n\nexport default EntryCard;\n","import React, { FunctionComponent } from 'react';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport EntryCard from '../EntryCard';\nimport { Avatar } from '../../store/game/types';\n\ntype Props = {\n  name: string,\n  avatar: Avatar,\n  image: string,\n  onClick?: () => void,\n}\n\nconst DoodleEntryCard: FunctionComponent<Props> = ({\n  name,\n  avatar,\n  image,\n  onClick,\n}) => (\n  <EntryCard\n    name={name}\n    avatar={avatar}\n    entry={(\n      <CardMedia\n        component=\"img\"\n        image={image}\n        width=\"500\"\n        title={`Entry by ${name}`}\n      />\n    )}\n    onClick={onClick}\n  />\n);\n\nexport default DoodleEntryCard;\n","import { connect } from 'react-redux';\n\nimport DoodleEntryCard from './DoodleEntryCard';\nimport { RootState } from '../../store/reducers';\nimport { GameState } from '../../store/game/types';\n\ninterface OwnProps {\n  playerId: string,\n};\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const game = state.game.gameState as GameState;\n  const player = game.players[ownProps.playerId];\n  return {\n    name: player.name,\n    avatar: player.avatar,\n  };\n}\nexport default connect(mapStateToProps)(DoodleEntryCard);\n","import React, { FunctionComponent } from 'react';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport EntryCard from '../EntryCard';\nimport { Avatar } from '../../store/game/types';\n\n\ntype Props = {\n  name: string,\n  avatar: Avatar,\n  concept: string,\n  onClick?: () => void,\n}\n\nconst ConceptEntryCard: FunctionComponent<Props> = ({\n  name,\n  avatar,\n  concept,\n  onClick,\n}) => (\n  <EntryCard\n    name={name}\n    avatar={avatar}\n    entry={(\n      <CardContent>\n        <Typography variant=\"h4\">{concept}</Typography>\n      </CardContent>\n    )}\n    onClick={onClick}\n  />\n);\n\nexport default ConceptEntryCard;\n","import { connect } from 'react-redux';\n\nimport ConceptEntryCard from './ConceptEntryCard';\nimport { RootState } from '../../store/reducers';\nimport { GameState } from '../../store/game/types';\n\ninterface OwnProps {\n  playerId: string,\n};\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const game = state.game.gameState as GameState;\n  const player = game.players[ownProps.playerId];\n  return {\n    name: player.name,\n    avatar: player.avatar,\n  };\n}\nexport default connect(mapStateToProps)(ConceptEntryCard);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(3),\n    maxWidth: 500,\n  },\n  entryPaper: {\n    maxWidth: 500,\n  },\n  selectedEntry: {\n    borderWidth: 4,\n    borderColor: theme.palette.primary.main,\n  },\n  choicesContainer: {\n    padding: theme.spacing(3),\n    maxWidth: 500,\n  },\n  img: {\n    width: '100%',\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport Emoji from '../Emoji';\nimport DoodleEntryCard from '../DoodleEntryCard';\nimport ConceptEntryCard from '../ConceptEntryCard';\nimport { Entry } from '../../store/game/types';\nimport useStyles from './EntryChoicePhase.styles';\n\ntype Props = {\n  winningEntry: Entry,\n  concept: string,\n  stackPlayerName: string,\n  currentPlayerChose: boolean,\n  chosenPlayerName: string,\n  acknowledged: boolean,\n  onAcknowledge: () => void,\n};\n\nconst EntryChoiceAcknowledge: FunctionComponent<Props> = ({\n  winningEntry,\n  concept,\n  stackPlayerName,\n  currentPlayerChose,\n  chosenPlayerName,\n  acknowledged,\n  onAcknowledge,\n}) => {\n  const classes = useStyles();\n\n  const message = currentPlayerChose\n    ? `You chose the entry by ${chosenPlayerName} for \"${concept}\"!`\n    : `${stackPlayerName} chose the entry by ${chosenPlayerName} for \"${concept}\"!`;\n\n  const entryCard = winningEntry.data.type === 'drawing'\n    ? (\n      <DoodleEntryCard\n        playerId={winningEntry.author}\n        image={winningEntry.data.drawing}\n      />\n    )\n    : (\n      <ConceptEntryCard\n        playerId={winningEntry.author}\n        concept={winningEntry.data.concept}\n      />\n    );\n\n  const nextButton = !currentPlayerChose\n    ? (\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={acknowledged}\n          onClick={onAcknowledge}\n        >\n          <Emoji symbol=\"👏\"/>\n          <span>Next</span>\n        </Button>\n      </Grid>\n    )\n    : null;\n\n  return (\n    <Grid item xs={12}>\n      <Paper elevation={1} variant=\"outlined\" className={classes.paper}>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item xs={12}>\n            <Typography>\n              <Emoji symbol=\"🥳\" />\n              <span> {message}</span>\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            {entryCard}\n          </Grid>\n          {nextButton}\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default EntryChoiceAcknowledge;\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport useStyles from './EntryChoicePhase.styles';\nimport Emoji from '../Emoji';\nimport DoodleEntryCard from '../DoodleEntryCard';\nimport ConceptEntryCard from '../ConceptEntryCard';\nimport { Entry, DrawingEntry } from '../../store/game/types';\n\ntype Props = {\n  entries: Entry[],\n  concept: string,\n  stackPlayerName: string,\n  currentPlayerChooses: boolean,\n  onChooseEntry: (playerId: string) => void,\n};\n\nconst EntryChoiceList: FunctionComponent<Props> = ({\n  entries,\n  concept,\n  stackPlayerName,\n  currentPlayerChooses,\n  onChooseEntry,\n}) => {\n  const classes = useStyles();\n\n  const message = currentPlayerChooses\n    ? `Choose your favourite entry for \"${concept}\".`\n    : `${stackPlayerName} is choosing their favourite entry for \"${concept}\".`\n  const emoji = currentPlayerChooses\n    ? '🤔'\n    : '😅';\n\n  const firstEntry = entries[0];\n  const drawingEntry = firstEntry.data as DrawingEntry;\n  const otherEntries = entries.slice(1);\n\n  return (\n    <Grid item xs={12}>\n      <Grid container direction=\"column\" spacing={4}>\n        <Grid item xs={12}>\n          <Paper elevation={1} variant=\"outlined\" className={classes.paper}>\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs={12}>\n                <Typography>\n                  <Emoji symbol={emoji} />\n                  <span> {message}</span>\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <img\n                  className={classes.img}\n                  src={drawingEntry.drawing}\n                  alt={`Initial drawing by ${stackPlayerName}`}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n          {\n            otherEntries.map((entry) => {\n              const entryCard = entry.data.type === 'drawing'\n                ? (\n                  <DoodleEntryCard\n                    playerId={entry.author}\n                    image={entry.data.drawing}\n                    onClick={\n                      currentPlayerChooses\n                        ? () => onChooseEntry(entry.author)\n                        : undefined\n                    }\n                  />\n                )\n                : (\n                  <ConceptEntryCard\n                    playerId={entry.author}\n                    concept={entry.data.concept}\n                    onClick={\n                      currentPlayerChooses\n                        ? () => onChooseEntry(entry.author)\n                        : undefined\n                    }\n                  />\n                );\n              return (\n                <Grid item xs={12} key={entry.author}>\n                  <Paper\n                    elevation={1}\n                    variant=\"outlined\"\n                    className={classes.entryPaper}\n                  >\n                    {entryCard}\n                  </Paper>\n                </Grid>\n              );\n            }\n          )\n        }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default EntryChoiceList;\n","import React, { FunctionComponent } from 'react';\n\nimport EntryChoiceAcknowledge from './EntryChoiceAcknowledge';\nimport EntryChoiceList from './EntryChoiceList';\nimport { Entry } from '../../store/game/types';\n\ntype Props = {\n  entries: Entry[],\n  concept: string,\n  stackPlayerName: string,\n  currentPlayerChooses: boolean,\n  chosenPlayerId?: string,\n  chosenPlayerName?: string,\n  acknowledged: boolean,\n  onChooseEntry: (playerId: string) => void,\n  onAcknowledge: () => void,\n};\n\nconst EntryChoicePhase: FunctionComponent<Props> = ({\n  entries,\n  concept,\n  stackPlayerName,\n  currentPlayerChooses,\n  chosenPlayerId,\n  chosenPlayerName,\n  acknowledged,\n  onChooseEntry,\n  onAcknowledge,\n}) => (\n  chosenPlayerId\n    ? (\n      <EntryChoiceAcknowledge\n        winningEntry={entries.find(entry => entry.author === chosenPlayerId) as Entry}\n        concept={concept}\n        stackPlayerName={stackPlayerName}\n        currentPlayerChose={currentPlayerChooses}\n        chosenPlayerName={chosenPlayerName as string}\n        acknowledged={acknowledged}\n        onAcknowledge={onAcknowledge}\n      />\n    )\n    : (\n      <EntryChoiceList\n        entries={entries}\n        concept={concept}\n        stackPlayerName={stackPlayerName}\n        currentPlayerChooses={currentPlayerChooses}\n        onChooseEntry={onChooseEntry}\n      />\n    )\n);\n\nexport default EntryChoicePhase;\n","import { connect } from 'react-redux';\n\nimport EntryChoicePhase from './EntryChoicePhase';\nimport { AppDispatch } from '../../store';\nimport { RootState } from '../../store/reducers';\nimport {\n  GameState,\n  EntryChoicePhase as EntryChoicePhaseType,\n} from '../../store/game/types';\nimport {\n  chooseEntry,\n  acknowledgeWinner,\n} from '../../store/game';\n\nconst mapStateToProps = (state: RootState) => {\n  const game = state.game.gameState as GameState;\n  const phase = game.round.phase as EntryChoicePhaseType;\n  const stackPlayerId = game.round.order[phase.index];\n  const stackPlayerName = game.players[stackPlayerId].name;\n  const concept = game.round.concepts[stackPlayerId];\n  const stack = game.round.stacks[stackPlayerId];\n  const playerId = state.game.player as string;\n  const currentPlayerChooses = playerId === stackPlayerId;\n  const chosenPlayerId = stack.chosen || state.game.chosenEntry;\n  const chosenPlayerName = chosenPlayerId\n    ? game.players[chosenPlayerId].name\n    : undefined;\n  const entries = stack.entries;\n  const acknowledged = state.game.acknowledgedWinner || !!phase.acknowledgedBy[playerId];\n\n  return {\n    stackPlayerName,\n    concept,\n    currentPlayerChooses,\n    chosenPlayerId,\n    chosenPlayerName,\n    entries,\n    acknowledged,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onChooseEntry: (targetPlayer: string) => dispatch(chooseEntry(targetPlayer)),\n  onAcknowledge: () => dispatch(acknowledgeWinner()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EntryChoicePhase);\n","import React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nimport Connecting from '../Connecting';\nimport WaitingToJoin from '../WaitingToJoin';\nimport InitialPhase from '../InitialPhase';\nimport ConceptChoicePhase from '../ConceptChoicePhase';\nimport CreateEntryPhase from '../CreateEntryPhase';\nimport EntryChoicePhase from '../EntryChoicePhase';\n\nimport { Alert as AlertType } from '../../store/game/types';\n\ninterface Props extends RouteComponentProps<any> {\n  connected: boolean,\n  waitingToJoin: boolean,\n  phaseName: string,\n  alert?: AlertType,\n  connect: () => void,\n  leave: () => void,\n  dismissAlert: () => void,\n}\n\nclass Game extends React.Component<Props, {}> {\n  unblock?: () => void;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.onBeforeUnload = this.onBeforeUnload.bind(this);\n  }\n\n  onBeforeUnload(e: BeforeUnloadEvent) {\n    if (process.env.NODE_ENV !== 'development') {\n      var dialogText = 'You will exit the game.';\n      e.returnValue = dialogText;\n      return dialogText;\n    }\n  }\n\n  componentDidMount() {\n    const { connect, history } = this.props;\n\n    connect();\n    window.addEventListener('beforeunload', this.onBeforeUnload);\n    this.unblock = history.block('Are you sure you want to leave the game?');\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.onBeforeUnload);\n    const { leave } = this.props;\n    leave();\n    if (this.unblock) {\n      this.unblock();\n    }\n  }\n\n  renderContent() {\n    const {\n      connected,\n      phaseName,\n      waitingToJoin,\n    } = this.props;\n\n    if (!connected) {\n      return <Connecting />;\n    }\n\n    if (waitingToJoin) {\n      return <WaitingToJoin />\n    }\n\n    switch (phaseName) {\n      case 'initial':\n        return <InitialPhase />;\n      case 'conceptChoice':\n        return <ConceptChoicePhase />;\n      case 'createEntry':\n        return <CreateEntryPhase />;\n      case 'entryChoice':\n        return <EntryChoicePhase />\n      default:\n        return <Typography>Unknown phase</Typography>\n    }\n  }\n\n  renderAlert() {\n    const { alert, dismissAlert } = this.props;\n    const alertComponent = alert\n      ? (\n        <Alert onClose={dismissAlert} severity={alert.severity}>\n          {alert.message}\n        </Alert>\n      )\n      : undefined;\n\n    return (\n      <Snackbar\n        open={!!alert}\n        autoHideDuration={5000}\n        onClose={dismissAlert}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        {alertComponent}\n      </Snackbar>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderContent()}\n        {this.renderAlert()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Game);\n","import { connect } from 'react-redux';\n\nimport Game from './Game';\nimport { AppDispatch } from '../../store';\nimport {\n  connectToGameChannel,\n  leaveGame,\n  dismissAlert,\n} from '../../store/game';\nimport { RootState } from '../../store/reducers';\n\nconst mapStateToProps = (state: RootState) => {\n  const game = state.game.gameState;\n  const playerId = state.game.player;\n\n  if (!game || !playerId) {\n    return {\n      connected: false,\n      waitingToJoin: false,\n      phaseName: '',\n    };\n  }\n\n  return {\n    connected: true,\n    waitingToJoin: !!game.waitingPlayers[playerId],\n    phaseName: game.round.phase.name,\n    alert: state.game.alerts.length > 0\n      ? state.game.alerts[0]\n      : undefined,\n  };\n}\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  connect: () => dispatch(connectToGameChannel()),\n  leave: () => dispatch(leaveGame()),\n  dismissAlert: () => dispatch(dismissAlert()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Game);\n","import React, {\n  useState,\n  FunctionComponent,\n} from 'react';\nimport { useParams, withRouter, RouteComponentProps } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport Emoji from '../Emoji';\nimport { JoinGameParams } from '../../store/game/types';\nimport MenuContainer from '../MenuContainer';\n\ninterface Props extends RouteComponentProps<any> {\n  joinGame: (params: JoinGameParams) => void,\n}\n\nconst JoinMenu: FunctionComponent<Props> = ({\n  joinGame,\n  history,\n}) => {\n  const [name, setName] = useState('');\n  const handleNameChange = (\n    (event:React.ChangeEvent<HTMLInputElement>) => setName(event.target.value)\n  );\n\n  const { code } = useParams();\n  const handleGoClicked = () => joinGame({\n    name,\n    code: code as string,\n    goToGame: (code: string) => history.push(`/game/${code}`),\n  });\n\n  const hasName = name.length > 0;\n\n  return (\n    <MenuContainer>\n      <form onSubmit={handleGoClicked}>\n        <Grid container spacing={2}>\n        <Grid item xs={12}>\n            <Typography>\n              <Emoji symbol=\"👥\"/>\n              <span>Join a game</span>\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              label=\"Player name\"\n              value={name}\n              onChange={handleNameChange}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!hasName}\n              onClick={handleGoClicked}\n            >\n              <Emoji symbol=\"🙌\"/>\n              <span>Go!</span>\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </MenuContainer>\n  );\n};\n\nexport default withRouter(JoinMenu);\n","import JoinMenu from './JoinMenu';\nimport { connect } from 'react-redux';\nimport { AppDispatch } from '../../store';\nimport { joinGame } from '../../store/game';\nimport { JoinGameParams } from '../../store/game/types';\n\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  joinGame: (params: JoinGameParams) => {\n    dispatch(joinGame(params));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(JoinMenu);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawerButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst TopBarTitle = () => (\n  <Grid\n    container\n    direction=\"row\"\n    justify=\"flex-start\"\n    alignItems=\"center\"\n    spacing={2}\n  >\n    <Hidden smUp implementation=\"css\">\n      <Grid item>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          Doodle\n        </Typography>\n      </Grid>\n    </Hidden>\n    <Hidden xsDown implementation=\"css\">\n      <Grid item>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          Doodle - A crazy drawing &amp; guessing chain game\n        </Typography>\n      </Grid>\n    </Hidden>\n  </Grid>\n);\n\nexport default TopBarTitle;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  iconButton: {\n    color: 'white',\n  },\n}));\n\nexport default useStyles;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"GitHub icon\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n});\n\nvar SvgGithub = function SvgGithub(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    role: \"img\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGithub, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github.617870e4.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Ko-fi icon\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.881 8.948c-.773-4.085-4.859-4.593-4.859-4.593H.723c-.604 0-.679.798-.679.798s-.082 7.324-.022 11.822c.164 2.424 2.586 2.672 2.586 2.672s8.267-.023 11.966-.049c2.438-.426 2.683-2.566 2.658-3.734 4.352.24 7.422-2.831 6.649-6.916zm-11.062 3.511c-1.246 1.453-4.011 3.976-4.011 3.976s-.121.119-.31.023c-.076-.057-.108-.09-.108-.09-.443-.441-3.368-3.049-4.034-3.954-.709-.965-1.041-2.7-.091-3.71.951-1.01 3.005-1.086 4.363.407 0 0 1.565-1.782 3.468-.963 1.904.82 1.832 3.011.723 4.311zm6.173.478c-.928.116-1.682.028-1.682.028V7.284h1.77s1.971.551 1.971 2.638c0 1.913-.985 2.667-2.059 3.015z\"\n});\n\nvar SvgKoFi = function SvgKoFi(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    role: \"img\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgKoFi, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/ko-fi.8a7c9b92.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FunctionComponent }  from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport Emoji from '../Emoji';\n\ntype Props = {\n  emoji: string,\n  text: string,\n  divider: boolean,\n};\n\nconst InstructionListItem: FunctionComponent<Props> = ({\n  emoji,\n  text,\n  divider,\n}) => (\n  <ListItem divider={divider}>\n    <ListItemAvatar>\n      <Typography variant=\"h4\">\n        <Emoji symbol={emoji} />\n      </Typography>\n    </ListItemAvatar>\n    <ListItemText primary={text} />\n  </ListItem>\n);\n\nexport default InstructionListItem;\n","import React, { FunctionComponent }  from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport List from '@material-ui/core/List';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport InstructionListItem from './InstructionListItem';\n\nconst Instructions = [\n  {\n    emoji: '🎮',\n    text: 'Create a game.',\n  },\n  {\n    emoji: '🔗',\n    text: 'Share the link with friends. Remember, Doodle is best played on a video call!',\n  },\n  {\n    emoji: '🤫',\n    text: 'Every player chooses a concept. But keep it secret!',\n  },\n  {\n    emoji: '✏️',\n    text: \"Draw your concept. Don't know how to draw? Worry not, the worse you draw, the more fun the round will be!\",\n  },\n  {\n    emoji: '🤔',\n    text: 'Now guess what another player drew.',\n  },\n  {\n    emoji: '✏️',\n    text: \"Time to draw what another player guessed!\",\n  },\n  {\n    emoji: '🙌',\n    text: 'When the round is done, each player chooses their favourite entry for their concept.',\n  },\n];\n\ntype Props = {\n  open: boolean,\n  onClose: () => void,\n};\n\nconst HowToPlayDialog: FunctionComponent<Props> = ({\n  open,\n  onClose,\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"how-to-play-dialog\"\n    >\n      <DialogTitle id=\"how-to-play-dialog\">\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            How to play\n          </Grid>\n          <Grid item>\n            <IconButton onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </DialogTitle>\n      <DialogContent>\n        <List>\n          {\n            Instructions.map((step, index) => (\n              <InstructionListItem\n                key={index}\n                emoji={step.emoji}\n                text={step.text}\n                divider={index < Instructions.length - 1}\n              />\n            ))\n          }\n        </List>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default HowToPlayDialog;\n","import React, { useState } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport HelpIcon from '@material-ui/icons/Help';\n\nimport useStyles from './TopBarLinks.styles';\nimport { ReactComponent as GitHub } from './github.svg';\nimport { ReactComponent as Kofi } from './ko-fi.svg';\nimport HowToPlayDialog from '../HowToPlayDialog';\n\nconst openUrl = (url: string) => window.open(url, '_blank');\n\nconst TopBarLinks = () => {\n  const classes = useStyles();\n\n  const [helpOpen, setHelpOpen] = useState(false);\n  const handleHelpClicked = () => setHelpOpen(true);\n  const handleHelpClosed = () => setHelpOpen(false);\n\n  return (\n    <>\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={0}>\n        <Grid item>\n          <Button\n            className={classes.iconButton}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleHelpClicked}\n            startIcon={<HelpIcon />}\n          >\n            How to play\n          </Button>\n        </Grid>\n        <Grid item>\n          <Tooltip title=\"Support the project on Ko-fi ☕\" placement=\"bottom\">\n            <IconButton\n              className={classes.iconButton}\n              onClick={() => openUrl('https://ko-fi.com/dsaltares')}\n            >\n              <SvgIcon>\n                <Kofi />\n              </SvgIcon>\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip title=\"Check out the source code! 💻\" placement=\"bottom\">\n            <IconButton\n              className={classes.iconButton}\n              onClick={() => openUrl('https://github.com/dsaltares/doodle')}\n            >\n              <SvgIcon>\n                <GitHub href=\"https://github.com/dsaltares/doodle\"/>\n              </SvgIcon>\n            </IconButton>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    <HowToPlayDialog open={helpOpen} onClose={handleHelpClosed} />\n    </>\n  );\n};\n\nexport default TopBarLinks;\n","import React, { FunctionComponent } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport useStyles from './TopBar.styles';\nimport TopBarTitle from '../TopBarTitle';\nimport TopBarLinks from '../TopBarLinks';\n\ntype Props = {\n  onToggleDrawer: () => void,\n};\n\nconst TopBar: FunctionComponent<Props> = ({\n  onToggleDrawer,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar >\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n          <Grid item>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  edge=\"start\"\n                  onClick={onToggleDrawer}\n                  className={classes.drawerButton}\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <TopBarTitle />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <TopBarLinks />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopBar;\n","import { makeStyles } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Avataaar from 'avataaars';\n\nimport Emoji from '../Emoji';\nimport pluralize from '../../utils/pluralize';\nimport useStyles from './PlayerListItem.styles';\n\nexport type PlayerState = 'Ready' | 'Thinking' | 'Guessing' | 'Drawing' | 'Looking';\n\ntype Avatar = {\n  topType: string,\n  accessoriesType: string,\n  hairColor: string,\n  facialHairType: string,\n  clotheType: string,\n  clotheColor: string,\n  eyeType: string,\n  eyebrowType: string,\n  mouthType: string,\n  skinColor: string,\n}\n\ntype Props = {\n  name: string,\n  avatar: Avatar,\n  points: number,\n  state?: PlayerState,\n}\n\nconst statusEmojis = {\n  Ready: '✅',\n  Looking: '👀',\n  Thinking: '🤔',\n  Guessing: '🕵️‍♂️',\n  Drawing: '✏️',\n}\n\nconst PlayerItem: FunctionComponent<Props> = ({\n  name,\n  avatar,\n  points,\n  state,\n}) => {\n  const classes = useStyles();\n  return (\n    <ListItem divider>\n      <ListItemAvatar>\n        <Avatar variant=\"rounded\" alt={name} className={classes.avatar}>\n          <Avataaar\n            avatarStyle=\"Circle\"\n            topType={avatar.topType}\n            accessoriesType={avatar.accessoriesType}\n            hairColor={avatar.hairColor}\n            facialHairType={avatar.facialHairType}\n            clotheType={avatar.clotheType}\n            clotheColor={avatar.clotheColor}\n            eyeType={avatar.eyeType}\n            eyebrowType={avatar.eyebrowType}\n            mouthType={avatar.mouthType}\n            skinColor={avatar.skinColor}\n          />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={name}\n        secondary={`${points} ${pluralize('point', 'points', points)}`}\n      />\n      {\n        state && (\n          <ListItemSecondaryAction>\n            <Typography variant=\"h5\">\n              <Emoji symbol={statusEmojis[state]} />\n            </Typography>\n          </ListItemSecondaryAction>\n        )\n      }\n    </ListItem>\n  );\n};\n\nexport default PlayerItem;\n","import { connect } from 'react-redux';\nimport PlayerListItem, { PlayerState } from './PlayerListItem';\nimport { RootState } from '../../store/reducers';\nimport { selectors } from '../../store/game';\nimport {\n  CreateEntryPhase,\n  EntryChoicePhase,\n  Player,\n} from '../../store/game/types';\nimport { MIN_PLAYERS } from '../../store/game/constants';\n\ntype Props = {\n  id: string\n}\n\nconst getPlayerState = (\n  state: RootState,\n  id: string,\n  isWaiting: boolean,\n): PlayerState | undefined => {\n  if (!state.game.gameState || isWaiting) {\n    return;\n  }\n\n  const game = state.game.gameState;\n  const createdByCurrentPlayer = game.createdBy === id;\n  const numPlayers = Object.keys(game.players).length;\n\n  switch(game.round.phase.name) {\n    case 'initial':\n      if (createdByCurrentPlayer) {\n        return numPlayers >= MIN_PLAYERS ? 'Thinking' : 'Looking';\n      }\n      return 'Ready';\n    case 'conceptChoice': {\n      const hasChosen = !!game.round.concepts[id];\n      return hasChosen ? 'Ready' : 'Thinking';\n    }\n    case 'createEntry': {\n      if (selectors.playerHasSubmitted(state, id)) {\n        return 'Ready';\n      }\n\n      const createPhase = game.round.phase as CreateEntryPhase;\n      const isDrawingPhase = createPhase.index % 2 === 0;\n      return isDrawingPhase ? 'Drawing' : 'Guessing';\n    }\n    case 'entryChoice': {\n      const choicePhase = game.round.phase as EntryChoicePhase;\n      const playerInTurn = game.round.order[choicePhase.index];\n      const isPlayerTurn = playerInTurn === id;\n      const stack = game.round.stacks[id];\n      const alreadyChosen = !!stack.chosen;\n      const alreadyAcknowledged = !!choicePhase.acknowledgedBy[id];\n\n      if (alreadyAcknowledged) {\n        return 'Ready';\n      }\n\n      if (alreadyChosen) {\n        return isPlayerTurn ? 'Ready' : 'Looking';\n      }\n\n      return isPlayerTurn ? 'Thinking' : 'Looking';\n    }\n  }\n};\n\nconst mapStateToProps = (state: RootState, ownProps: Props) => {\n  const player = selectors.player(state, ownProps.id) as Player;\n  const isWaiting = selectors.isWaiting(state, ownProps.id);\n\n  return {\n    ...player,\n    state: getPlayerState(state, ownProps.id, isWaiting),\n  };\n}\n\nexport default connect(mapStateToProps)(PlayerListItem);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport PlayerListItem from '../PlayerListItem';\nimport useStyles from './PlayerList.styles';\n\nexport type Props = {\n  visible: boolean,\n  playerIds: string[],\n  minPlayers: number,\n  maxPlayers: number,\n  gameStarted: boolean,\n}\n\nconst PlayerSkeleton = () => {\n  const classes = useStyles();\n  return (\n    <ListItem divider>\n      <ListItemAvatar>\n        <Skeleton variant=\"circle\" height={64} width={64} className={classes.avatar}/>\n      </ListItemAvatar>\n      <ListItemText\n        primary={<Skeleton variant=\"text\" width={100} />}\n        secondary={<Skeleton variant=\"text\" width={50} />}\n      />\n    </ListItem>\n  );\n};\n\nconst PlayerList: FunctionComponent<Props> = ({\n  visible,\n  playerIds,\n  minPlayers,\n  maxPlayers,\n  gameStarted,\n}) => {\n  if (!visible) {\n    return null;\n  }\n\n  const numPlayers = playerIds.length;\n  const remainingPlayers = Math.max(0, maxPlayers - numPlayers);\n  const skeletons = !gameStarted\n    ? Array.from(Array(remainingPlayers).keys()).map(index => (\n      <PlayerSkeleton key={`skeleton_${index}`} />\n    ))\n    : [];\n  const getMessage = () => {\n    if (numPlayers < minPlayers) {\n      const needed = minPlayers - numPlayers;\n      return `${needed} needed`;\n    }\n    if (numPlayers === maxPlayers) {\n      return 'game full';\n    }\n    return `${numPlayers}/${maxPlayers}`;\n  };\n\n  return (\n    <List subheader={(\n      <ListSubheader>Players - {`${getMessage()}`}</ListSubheader>\n    )}>\n      {[\n        ...playerIds.map(id => (<PlayerListItem key={id} id={id} />)),\n        ...skeletons,\n      ]}\n    </List>\n  );\n};\n\nexport default PlayerList;\n","import { connect } from 'react-redux';\nimport PlayerList from './PlayerList';\nimport { RootState } from '../../store/reducers';\nimport { selectors } from '../../store/game';\nimport {\n  MIN_PLAYERS,\n  MAX_PLAYERS,\n} from '../../store/game/constants';\n\nconst mapStateToProps = (state: RootState) => ({\n  visible: !!state.game.player,\n  playerIds: selectors.playerIds(state),\n  minPlayers: MIN_PLAYERS,\n  maxPlayers: MAX_PLAYERS,\n  gameStarted: Boolean(state.game.gameState && state.game.gameState.round.phase.name !== 'initial'),\n});\n\nexport default connect(mapStateToProps)(PlayerList);\n","import React, { FunctionComponent } from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport PlayerListItem from '../PlayerListItem';\n\nexport type Props = {\n  visible: boolean,\n  playerIds: string[],\n}\n\nconst WaitingPlayerList: FunctionComponent<Props> = ({\n  visible,\n  playerIds,\n}) => {\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <List subheader={(\n      <ListSubheader>Waiting players</ListSubheader>\n    )}>\n      {\n        playerIds.map(id => (<PlayerListItem key={id} id={id} />))\n      }\n    </List>\n  );\n};\n\nexport default WaitingPlayerList;\n","import { connect } from 'react-redux';\nimport WaitingPlayerList from './WaitingPlayerList';\nimport { RootState } from '../../store/reducers';\nimport { selectors } from '../../store/game';\n\nconst mapStateToProps = (state: RootState) => {\n  const game = state.game.gameState;\n  return {\n    visible: !!game && Object.keys(game.waitingPlayers).length > 0,\n    playerIds: selectors.waitingPlayerIds(state),\n  };\n};\n\nexport default connect(mapStateToProps)(WaitingPlayerList);\n","import React, { FunctionComponent } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport useStyles from './SideBar.styles';\nimport PlayerList, { WaitingPlayerList } from '../PlayerList';\n\ntype Props = {\n  drawerOpen: boolean,\n  onToggleDrawer: () => void,\n}\n\nconst SideBar: FunctionComponent<Props> = ({\n  drawerOpen,\n  onToggleDrawer,\n}) => {\n  const classes = useStyles();\n\n  const drawer = (\n    <React.Fragment>\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <PlayerList />\n        <WaitingPlayerList />\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <React.Fragment>\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          className={classes.drawer}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open={drawerOpen}\n          onClose={onToggleDrawer}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          variant=\"permanent\"\n          className={classes.drawer}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </React.Fragment>\n  );\n};\n\nexport default SideBar;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { useEffect, EffectCallback } from 'react';\n\nconst useMountEffect = (fn: EffectCallback) => useEffect(fn, [])\n\nexport default useMountEffect;\n","import React, {\n  useState,\n  FunctionComponent,\n} from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Menu from '../Menu';\nimport Game from '../Game';\nimport JoinMenu from '../JoinMenu';\nimport TopBar from '../TopBar';\nimport SideBar from '../SideBar';\nimport useStyles from './App.styles';\nimport useMountEffect from '../../utils/useMountEffect';\n\ntype Props = {\n  playerName?: string,\n  connect: () => void,\n}\n\nconst App: FunctionComponent<Props> = ({\n  playerName,\n  connect,\n}) => {\n  useMountEffect(() => {\n    connect();\n  });\n\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const onToggleDrawer = () => setDrawerOpen(!drawerOpen);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar onToggleDrawer={onToggleDrawer} />\n      {\n        playerName\n          ? (\n            <SideBar\n              drawerOpen={drawerOpen}\n              onToggleDrawer={onToggleDrawer}\n            />\n          )\n          : null\n      }\n      <div className={classes.content}>\n        <Toolbar />\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <Menu />\n            </Route>\n            <Route exact path=\"/game/:code\">\n              {\n                playerName\n                  ? <Game />\n                  : <JoinMenu />\n              }\n            </Route>\n          </Switch>\n        </HashRouter>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { connect } from 'react-redux';\n\nimport App from './App';\nimport { AppDispatch } from '../../store';\nimport { connect as connectToSocket } from '../../store/socket';\nimport { subscribe } from '../../store/game';\nimport { RootState } from '../../store/reducers';\n\nconst mapStateToProps = (state: RootState) => ({\n  playerName: state.game.config.name,\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  connect: () => {\n    dispatch(connectToSocket((socket) => {\n      subscribe(dispatch, socket);\n    }));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const LIVE_SERVER_SOCKET = process.env.NODE_ENV === 'development'\n  ? 'http://localhost:3001'\n  : 'https://api.doodle.saltares.com';\n","import { combineReducers } from '@reduxjs/toolkit';\nimport socket from './socket';\nimport game from './game';\n\nconst rootReducer = combineReducers({\n  socket,\n  game,\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>\n","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppGetState = typeof store.getState;\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport  CssBaseline from '@material-ui/core/CssBaseline';\n\nimport App from './components/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <CssBaseline />\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}