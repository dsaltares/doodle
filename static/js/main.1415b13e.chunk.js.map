{"version":3,"sources":["store/socket/index.ts","components/MainContent/MainContent.styles.ts","components/MainContent/MainContent.tsx","components/Emoji/Emoji.tsx","components/Menu/Menu.styles.ts","components/HowToPlay/InstructionListItem.tsx","components/HowToPlay/InstructionList.tsx","components/HowToPlay/HowToPlayDialog.tsx","components/HowToPlay/HowToPlayPanel.tsx","components/Menu/Menu.tsx","store/game/selectors.ts","store/game/index.ts","components/Menu/Menu.container.ts","components/Connecting/Connecting.styles.ts","components/Connecting/Connecting.tsx","components/Connecting/Connecting.container.ts","components/WaitingToJoin/WaitingToJoin.tsx","components/InitialPhase/InitialPhase.styles.ts","utils/pluralize.ts","components/InitialPhase/InitialPhase.tsx","components/InitialPhase/InitialPhase.container.ts","store/game/constants.ts","components/ConceptListItem/ConceptListItem.tsx","components/ConceptChoicePhase/ConceptChoicePhase.tsx","components/ConceptChoicePhase/ConceptChoicePhase.container.ts","components/ToolBarButton/ToolBarButton.styles.ts","components/ToolBarButton/ToolBarButton.tsx","components/ExpandableToolBarButton/ExpandableToolBarButton.styles.ts","components/ExpandableToolBarButton/ExpandableToolBarButton.tsx","components/LineWidthPickerButton/LineWidthPickerButton.styles.ts","components/LineWidthPickerButton/LineWidthPickerButton.tsx","components/ColorPickerButton/ColorPickerButton.tsx","components/ToolPickerButton/ToolPickerButton.tsx","components/ToolBar/ToolBar.tsx","components/Editor/Editor.styled.ts","components/Editor/Editor.tsx","components/DrawPhase/DrawPhase.tsx","components/DrawPhase/DrawPhase.container.ts","components/GuessPhase/GuessPhase.styles.ts","components/GuessPhase/GuessPhase.tsx","components/GuessPhase/GuessPhase.container.ts","components/CreateEntryPhase/CreateEntryPhase.tsx","components/CreateEntryPhase/CreateEntryPhase.container.ts","components/EntryCard/EntryCard.styles.ts","components/EntryCard/EntryCard.tsx","components/DoodleEntryCard/DoodleEntryCard.tsx","components/DoodleEntryCard/DoodleEntryCard.container.ts","components/ConceptEntryCard/ConceptEntryCard.tsx","components/ConceptEntryCard/ConceptEntryCard.container.ts","components/EntryChoicePhase/EntryChoicePhase.styles.ts","components/EntryChoicePhase/EntryChoiceAcknowledge.tsx","components/EntryChoicePhase/EntryChoiceList.tsx","components/EntryChoicePhase/EntryChoicePhase.tsx","components/EntryChoicePhase/EntryChoicePhase.container.ts","components/Game/Game.tsx","components/Game/Game.container.ts","components/JoinMenu/JoinMenu.tsx","components/JoinMenu/JoinMenu.container.ts","components/TopBar/TopBar.styles.ts","components/TopBarTitle/TopBarTitle.tsx","components/TopBarLinks/TopBarLinks.styles.ts","components/TopBarLinks/github.svg","components/TopBarLinks/ko-fi.svg","components/TopBarLinks/TopBarLinks.tsx","components/TopBarLinks/TopBarLinks.container.ts","components/TopBar/TopBar.tsx","components/SideBar/SideBar.styles.ts","components/PlayerListItem/PlayerListItem.styles.ts","components/PlayerListItem/PlayerListItem.tsx","components/PlayerListItem/PlayerListItem.container.ts","components/PlayerList/PlayerList.styles.ts","components/PlayerList/PlayerList.tsx","components/PlayerList/PlayerList.container.ts","components/PlayerList/WaitingPlayerList.tsx","components/PlayerList/WaitingPlayerList.container.ts","components/SideBar/SideBar.tsx","components/App/App.styles.ts","utils/useMountEffect.ts","components/App/App.tsx","components/App/App.container.ts","store/endpoints.ts","store/reducers.ts","store/index.ts","serviceWorker.ts","index.tsx"],"names":["socket","useStyles","makeStyles","theme","paper","props","padding","spacing","maxWidth","width","MainContent","children","classes","Grid","item","xs","Paper","variant","className","container","direction","Emoji","symbol","label","role","aria-label","aria-hidden","buttonGroup","flex","button","InstructionListItem","emoji","text","divider","ListItem","ListItemAvatar","Typography","ListItemText","primary","Instructions","InstructionList","List","map","step","index","key","length","HowToPlayDialog","open","onClose","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","aria-labelledby","DialogTitle","id","justify","alignItems","IconButton","onClick","DialogContent","HowToPlayPanel","withRouter","startGame","history","useState","mode","setMode","name","setName","code","setCode","hasName","hasGameCode","canStartGame","codeField","TextField","onChange","event","target","value","fullWidth","onSubmit","preventDefault","goToGame","push","ToggleButtonGroup","_event","newMode","exclusive","ToggleButton","Button","type","color","disabled","socketSlice","createSlice","initialState","status","hasError","reducers","connectToSocketStarted","state","connectToSocketSuccess","connectToSocketFailed","disconnected","actions","reducer","socketDeferred","defer","playerIds","game","gameState","Object","keys","players","waitingPlayerIds","waitingPlayers","player","isWaiting","isFirstCreateTurn","phase","round","currentConcept","playerId","concepts","getSourceEntry","data","concept","currentDrawing","drawing","sourceEntryAuthor","entry","author","currentStackForPlayer","playerIdx","order","indexOf","numPlayers","playerIdxMinusTurn","sourceIdx","sourcePlayerId","stacks","entries","getPlayerSourceEntry","playerHasSubmitted","stack","hasSubmitted","submittedEntry","config","startingGame","choosingConcept","undefined","acknowledgedWinner","alerts","gameSlice","setPlayerName","action","payload","setGamePlayer","leaveGame","chosenEntry","chooseConcept","submitEntry","chooseEntry","acknowledgeWinner","updateGame","updateBy","alert","hasAlert","forCurrentPlayer","ignorePlayers","includes","lastUpdate","dismissAlert","shift","joinGame","dispatch","a","connect","uuid","createGame","Menu","Connecting","severity","message","Alert","icon","CircularProgress","WaitingToJoin","buttonContainer","paddingTop","pluralize","singular","plural","count","InitialPhase","createdGame","creatorName","missingPlayers","onStart","gameFull","gameUrl","startButton","alertOpen","setAlertOpen","handleAlertClosed","copy","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","createdBy","location","window","Math","max","protocol","host","promise","emit","ConceptListItem","selected","ConceptChoicePhase","selectedConcept","onChooseConcept","choices","root","borderRadius","ToolBarButton","title","Tooltip","placement","ExpandableToolBarButton","renderContent","anchorEl","setAnchorEl","handleClose","Boolean","Fragment","currentTarget","Popover","transformOrigin","close","height","marginTop","valueText","LineWidthPickerButton","lineWidth","onLineWidthChange","handleChange","_e","newValue","Array","isArray","Slider","getAriaValueText","valueLabelDisplay","min","ColorPickerButton","onColorChange","style","onChangeComplete","hex","handleOnChangeComplete","getIconForTool","tool","ToolPickerButton","onToolchange","newTool","ToolBar","onToolChange","canUndo","onUndo","canRedo","onRedo","onEraseAll","SketchField","styled","SketchFieldBase","border","Editor","sketch","bind","onSketchChange","this","setState","undo","redo","clear","canUndoNow","canRedoNow","toDataURL","editorColor","ref","lineColor","React","Component","DrawPhase","firstCreateTurn","submitted","conceptFrom","editorRef","createRef","editor","current","image","export","selectors","submitDrawing","GuessPhase","guess","setGuess","src","alt","submitConcept","CreateEntryPhase","avatar","backgroundColor","marginRight","EntryCard","content","CardHeader","Avatar","avatarStyle","topType","accessoriesType","hairColor","facialHairType","clotheType","clotheColor","eyeType","eyebrowType","mouthType","skinColor","wrapped","CardActionArea","DoodleEntryCard","CardMedia","component","ownProps","ConceptEntryCard","CardContent","entryPaper","selectedEntry","borderWidth","borderColor","palette","main","choicesContainer","img","EntryChoiceAcknowledge","winningEntry","stackPlayerName","currentPlayerChose","chosenPlayerName","acknowledged","onAcknowledge","entryCard","nextButton","elevation","EntryChoiceList","currentPlayerChooses","onChooseEntry","drawingEntry","otherEntries","slice","EntryChoicePhase","chosenPlayerId","find","stackPlayerId","chosen","acknowledgedBy","targetPlayer","Game","unblock","onBeforeUnload","e","returnValue","addEventListener","block","removeEventListener","leave","connected","phaseName","waitingToJoin","alertComponent","renderAlert","_dispatch","getState","useParams","handleGoClicked","params","JoinMenu","appBar","zIndex","drawer","drawerButton","up","display","TopBarTitle","Hidden","smUp","implementation","noWrap","xsDown","iconButton","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","viewBox","ForwardRef","forwardRef","openUrl","url","TopBarLinks","gameStarted","helpOpen","setHelpOpen","howToPlay","startIcon","SvgIcon","href","TopBar","onToggleDrawer","AppBar","position","Toolbar","edge","flexShrink","drawerPaper","drawerContainer","overflow","statusEmojis","Ready","Looking","Thinking","Guessing","Drawing","PlayerItem","points","secondary","ListItemSecondaryAction","getPlayerState","createdByCurrentPlayer","choicePhase","isPlayerTurn","alreadyChosen","PlayerListItem","PlayerSkeleton","Skeleton","PlayerList","visible","minPlayers","maxPlayers","remainingPlayers","skeletons","from","subheader","ListSubheader","WaitingPlayerList","SideBar","drawerOpen","Drawer","ModalProps","keepMounted","flexGrow","useMountEffect","fn","useEffect","App","playerName","setDrawerOpen","exact","path","subscribe","on","console","log","io","resolve","forEach","rootReducer","combineReducers","store","configureStore","devTools","process","hostname","match","ReactDOM","render","CssBaseline","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1415b13e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport io from 'socket.io-client';\nimport defer from 'p-defer';\nimport { AppDispatch } from '..';\nimport { SocketState } from \"./types\";\nimport { LIVE_SERVER_SOCKET } from '../endpoints';\n\nconst initialState: SocketState = {\n  status: 'disconnected',\n  hasError: false,\n}\n\nconst socketSlice = createSlice({\n  name: 'socket',\n  initialState,\n  reducers: {\n    connectToSocketStarted: state => {\n      state.status = 'connecting';\n    },\n    connectToSocketSuccess: (state) => {\n      state.status = 'connected';\n      state.hasError = false;\n    },\n    connectToSocketFailed: state => {\n      state.status = 'error';\n      state.hasError = true;\n    },\n    disconnected: state => {\n      state.status = 'disconnected';\n      state.hasError = true;\n    },\n  }\n});\n\nconst { actions, reducer } = socketSlice;\n\nexport default reducer;\n\nexport let socket: SocketIOClient.Socket;\n\nexport const socketDeferred = defer<SocketIOClient.Socket>();\n\nexport const connect = (subscribe: (socket: SocketIOClient.Socket) => void) => async (dispatch: AppDispatch) => {\n  dispatch(actions.connectToSocketStarted());\n\n  socket = io(LIVE_SERVER_SOCKET);\n  socketDeferred.resolve(socket);\n\n  const successEvents = ['connect', 'reconnect'];\n  successEvents.forEach(event => {\n    socket.on(event, () => {\n      dispatch(actions.connectToSocketSuccess());\n      subscribe(socket);\n    });\n  });\n\n  const errorEvents = ['connect_error', 'connect_timeout', 'error', 'disconnected'];\n  errorEvents.forEach(event => {\n    socket.on(event, () => {\n      dispatch(actions.connectToSocketFailed());\n    });\n  });\n\n  socket.on('reconnecting', () => {\n    dispatch(actions.connectToSocketStarted());\n  });\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\ntype PaperProps = {\n  width: number,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: (props: PaperProps) => ({\n    padding: theme.spacing(3),\n    maxWidth: props.width,\n  }),\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport useStyles from './MainContent.styles';\n\ntype Props = {\n  width?: number,\n};\n\nconst MainContent: FunctionComponent<Props> = ({\n  children,\n  width = 500,\n}) => {\n  const classes = useStyles({ width });\n\n  return (\n    <Grid item xs={12}>\n      <Paper variant=\"outlined\" className={classes.paper}>\n        <Grid container direction=\"column\" spacing={2}>\n          {children}\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default MainContent;\n","import React, { FunctionComponent } from 'react';\n\ntype Props = {\n  symbol: string,\n  label?: string,\n  className?: string,\n}\n\nconst Emoji: FunctionComponent<Props> = ({\n  symbol,\n  label,\n  className,\n}) => (\n  <span\n    className={className}\n    role=\"img\"\n    aria-label={label}\n    aria-hidden={label ? 'false' : 'true'}\n  >\n    {symbol}\n  </span>\n);\n\nexport default Emoji;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  buttonGroup: {\n    flex: 1,\n  },\n  button: {\n    flex: 1,\n  }\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent }  from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport Emoji from '../Emoji';\n\ntype Props = {\n  emoji: string,\n  text: string,\n  divider: boolean,\n};\n\nconst InstructionListItem: FunctionComponent<Props> = ({\n  emoji,\n  text,\n  divider,\n}) => (\n  <ListItem divider={divider}>\n    <ListItemAvatar>\n      <Typography variant=\"h4\">\n        <Emoji symbol={emoji} />\n      </Typography>\n    </ListItemAvatar>\n    <ListItemText primary={text} />\n  </ListItem>\n);\n\nexport default InstructionListItem;\n","import React from 'react';\nimport List from '@material-ui/core/List';\n\nimport InstructionListItem from './InstructionListItem';\n\nconst Instructions = [\n  {\n    emoji: '🎮',\n    text: 'Create a game.',\n  },\n  {\n    emoji: '🔗',\n    text: 'Share the link with friends. Remember, Doodle is best played on a video call!',\n  },\n  {\n    emoji: '🤫',\n    text: 'Every player chooses a concept. But keep it secret!',\n  },\n  {\n    emoji: '✏️',\n    text: \"Draw your concept. Don't know how to draw? Worry not, the worse you draw, the more fun the round will be!\",\n  },\n  {\n    emoji: '🤔',\n    text: 'Now guess what another player drew.',\n  },\n  {\n    emoji: '✏️',\n    text: \"Time to draw what another player guessed!\",\n  },\n  {\n    emoji: '🙌',\n    text: 'When the round is done, each player chooses their favourite entry for their concept.',\n  },\n];\n\nconst InstructionList = () => (\n  <List>\n    {\n      Instructions.map((step, index) => (\n        <InstructionListItem\n          key={index}\n          emoji={step.emoji}\n          text={step.text}\n          divider={index < Instructions.length - 1}\n        />\n      ))\n    }\n  </List>\n);\n\nexport default InstructionList;\n","import React, { FunctionComponent }  from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport InstructionList from './InstructionList';\n\ntype Props = {\n  open: boolean,\n  onClose: () => void,\n};\n\nconst HowToPlayDialog: FunctionComponent<Props> = ({\n  open,\n  onClose,\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"how-to-play-dialog\"\n    >\n      <DialogTitle id=\"how-to-play-dialog\">\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            How to play\n          </Grid>\n          <Grid item>\n            <IconButton onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </DialogTitle>\n      <DialogContent>\n        <InstructionList />\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default HowToPlayDialog;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport MainContent from '../MainContent';\nimport InstructionList from './InstructionList';\n\nconst HowToPlayPanel = () => (\n  <MainContent>\n    <Grid item>\n      <Typography variant=\"h5\">How to play</Typography>\n    </Grid>\n    <Grid item>\n      <InstructionList />\n    </Grid>\n  </MainContent>\n);\n\nexport default HowToPlayPanel;\n","import React, {\n  useState,\n  FunctionComponent,\n  FormEvent,\n} from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport MainContent from '../MainContent';\nimport Emoji from '../Emoji';\nimport useStyles from './Menu.styles';\nimport { HowToPlayPanel } from '../HowToPlay';\n\nexport type GameMode = 'newGame' | 'joinGame';\n\nexport type StartGameParams = {\n  mode: GameMode,\n  name: string,\n  code: string,\n  goToGame: (code: string) => any,\n}\n\ninterface Props extends RouteComponentProps<any> {\n  startGame: (params: StartGameParams) => void,\n}\n\nconst Menu: FunctionComponent<Props> = ({\n  startGame,\n  history,\n}) => {\n  const classes = useStyles();\n\n  const [mode, setMode] = useState('newGame');\n  const handleModeChange = (\n    (_event: any, newMode: string) => setMode(newMode)\n  );\n\n  const [name, setName] = useState('');\n  const handleNameChange = (\n    (event:React.ChangeEvent<HTMLInputElement>) => setName(event.target.value)\n  );\n\n  const [code, setCode] = useState('');\n  const handleGameCodeChange = (\n    (event:React.ChangeEvent<HTMLInputElement>) => setCode(event.target.value)\n  );\n\n  const hasName = name.length > 0;\n  const hasGameCode = code.length > 0;\n  const canStartGame = hasName && (mode === 'newGame' || hasGameCode);\n\n  const handleGoClicked = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (canStartGame) {\n      startGame({\n        mode: mode as GameMode,\n        name,\n        code,\n        goToGame: (code: string) => history.push(`/game/${code}`),\n      });\n    }\n  };\n\n  const codeField = mode === 'joinGame'\n    ? (\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          label=\"Game code\"\n          onChange={handleGameCodeChange}\n          fullWidth\n        />\n      </Grid>\n    )\n    : null;\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n      <Grid item>\n        <MainContent>\n          <form onSubmit={handleGoClicked}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Grid container direction=\"row\" justify=\"center\">\n                  <ToggleButtonGroup\n                    value={mode}\n                    onChange={handleModeChange}\n                    exclusive\n                    aria-label=\"game mode\"\n                    className={classes.buttonGroup}\n                  >\n                    <ToggleButton value=\"newGame\" className={classes.button}>\n                      <Emoji symbol=\"✏️\"/>\n                      New Game\n                    </ToggleButton>\n                    <ToggleButton value=\"joinGame\" className={classes.button}>\n                      <Emoji symbol=\"👥\"/>\n                      <span>Join Game</span>\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Player name\"\n                  value={name}\n                  onChange={handleNameChange}\n                  fullWidth\n                />\n              </Grid>\n              {codeField}\n              <Grid item xs={12}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={!canStartGame}\n                >\n                  <Emoji symbol=\"🙌\"/>\n                  <span>Go!</span>\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </MainContent>\n      </Grid>\n      <Grid item>\n        <HowToPlayPanel />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withRouter(Menu);\n","import { RootState } from \"../reducers\";\nimport { Player, CreateEntryPhase, Stack, Entry, ConceptEntry, DrawingEntry } from \"./types\";\n\nexport const playerIds = (state: RootState): string[] => {\n  if (!state.game.gameState) {\n    return [];\n  }\n  return Object.keys(state.game.gameState.players);\n};\n\nexport const waitingPlayerIds = (state: RootState): string[] => {\n  if (!state.game.gameState) {\n    return [];\n  }\n  return Object.keys(state.game.gameState.waitingPlayers);\n};\n\nexport const player = (state: RootState, id: string): Player | null => {\n  const game = state.game.gameState;\n  if (!game) {\n    return null;\n  }\n  return game.players[id] || game.waitingPlayers[id];\n};\n\nexport const isWaiting = (state: RootState, id: string): boolean => {\n  const game = state.game.gameState;\n  if (!game) {\n    return false;\n  }\n  return !!game.waitingPlayers[id];\n};\n\nexport const isFirstCreateTurn = (state: RootState) => {\n  const game = state.game.gameState;\n  if (!game) {\n    return false;\n  }\n  const phase = game.round.phase;\n  if (phase.name !== 'createEntry') {\n    return false;\n  }\n  return phase.index === 0;\n};\n\nexport const currentConcept = (state: RootState) => {\n  if (isFirstCreateTurn(state)) {\n    const game = state.game.gameState;\n    const playerId = state.game.player\n    if (!game || !playerId) {\n      return;\n    }\n\n    return game.round.concepts[playerId];\n  }\n\n  const entry = getSourceEntry(state) as Entry;\n  const conceptEntry = entry.data as ConceptEntry;\n  return conceptEntry.concept;\n};\n\nexport const currentDrawing = (state: RootState) => {\n  const entry = getSourceEntry(state) as Entry;\n  const drawingEntry = entry.data as DrawingEntry;\n  return drawingEntry.drawing;\n};\n\nexport const sourceEntryAuthor = (state: RootState) => {\n  if (isFirstCreateTurn(state)) {\n    const game = state.game.gameState;\n    const playerId = state.game.player\n    if (!game || !playerId) {\n      return;\n    }\n\n    return game.players[playerId].name;\n  }\n\n  const entry = getSourceEntry(state) as Entry;\n  const author = player(state, entry.author);\n  return author?.name;\n};\n\nconst currentStackForPlayer = (state: RootState, playerId: string) => {\n  const game = state.game.gameState;\n  if (!game || game.round.phase.name !== 'createEntry') {\n    return;\n  }\n\n  const phase = game.round.phase as CreateEntryPhase;\n  const playerIdx = game.round.order.indexOf(playerId);\n  const numPlayers = Object.keys(game.players).length;\n  const playerIdxMinusTurn = playerIdx - phase.index;\n  const sourceIdx = playerIdxMinusTurn < 0\n    ? numPlayers + playerIdxMinusTurn\n    : playerIdxMinusTurn;\n  const sourcePlayerId = game.round.order[sourceIdx];\n  return game.round.stacks[sourcePlayerId];\n};\n\nconst getPlayerSourceEntry = (state: RootState, playerId: string) => {\n  const game = state.game.gameState;\n  if (!game || game.round.phase.name !== 'createEntry') {\n    return;\n  }\n\n  const phase = game.round.phase as CreateEntryPhase;\n  const stack = currentStackForPlayer(state, playerId) as Stack;\n  const lastEntry = stack.entries[phase.index - 1];\n  return lastEntry;\n};\n\nexport const getSourceEntry = (state: RootState) => {\n  const playerId = state.game.player as string;\n  return getPlayerSourceEntry(state, playerId);\n};\n\nexport const playerHasSubmitted = (state: RootState, playerId: string) => {\n  const game = state.game.gameState;\n  if (!game || game.round.phase.name !== 'createEntry') {\n    return false;\n  }\n\n  const stack = currentStackForPlayer(state, playerId) as Stack;\n  const entry = stack.entries[stack.entries.length - 1];\n  return !!entry && entry.author === playerId;\n};\n\nexport const hasSubmitted = (state: RootState) => {\n  if (state.game.submittedEntry) {\n    return true;\n  }\n\n  const game = state.game.gameState;\n  if (!game || game.round.phase.name !== 'createEntry') {\n    return false;\n  }\n\n  const playerId = state.game.player as string;\n  return playerHasSubmitted(state, playerId);\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuid } from 'uuid';\nimport { AppDispatch, AppGetState } from '..';\nimport { socketDeferred } from '../socket';\nimport {\n  GameSliceState,\n  CreateGameParams,\n  GameJoinedEvent,\n  GameUpdatedEvent,\n  JoinGameParams,\n  Alert,\n} from \"./types\";\nimport * as selectors from './selectors';\n\nconst initialState: GameSliceState = {\n  config: {},\n  startingGame: false,\n  choosingConcept: undefined,\n  submittedEntry: false,\n  acknowledgedWinner: false,\n  alerts: [],\n}\n\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    setPlayerName: (state, action: PayloadAction<string>) => {\n      state.config.name = action.payload;\n    },\n    setCode: (state, action: PayloadAction<string>) => {\n      state.config.code = action.payload;\n    },\n    setGamePlayer: (state, action: PayloadAction<GameJoinedEvent>) => {\n      state.player = action.payload.player;\n    },\n    leaveGame: (state) => {\n      state.config = {\n        code: undefined,\n        name: undefined,\n      };\n      state.player = undefined;\n      state.gameState = undefined;\n      state.startingGame = false;\n      state.choosingConcept = undefined;\n      state.submittedEntry = false;\n      state.chosenEntry = undefined;\n      state.acknowledgedWinner = false;\n      state.alerts = [];\n    },\n    startGame: (state) => {\n      state.startingGame = true;\n    },\n    chooseConcept: (state, action: PayloadAction<string>) => {\n      state.choosingConcept = action.payload;\n    },\n    submitEntry: (state) => {\n      state.submittedEntry = true;\n    },\n    chooseEntry: (state, action: PayloadAction<string>) => {\n      state.chosenEntry = action.payload;\n    },\n    acknowledgeWinner: (state) => {\n      state.acknowledgedWinner = true;\n    },\n    updateGame: (state, action: PayloadAction<GameUpdatedEvent>) => {\n      const {\n        payload: { updateBy, gameState, alert },\n      } = action;\n\n      if (updateBy === state.player) {\n        state.startingGame = false;\n        state.choosingConcept = undefined;\n        state.submittedEntry = false;\n        state.chosenEntry = undefined;\n        state.acknowledgedWinner = false;\n      }\n\n      const hasAlert = !!alert;\n      const playerId = state.player as string;\n      const forCurrentPlayer = !alert?.ignorePlayers\n        || !alert.ignorePlayers.includes(playerId)\n\n      if (hasAlert && forCurrentPlayer) {\n        state.alerts.push(alert as Alert);\n      }\n\n      if (state.gameState && state.gameState.lastUpdate > gameState.lastUpdate) {\n        return state;\n      }\n      state.gameState = gameState;\n    },\n    dismissAlert: (state) => {\n      if (state.alerts.length > 0) {\n        state.alerts.shift();\n      }\n    }\n  },\n});\n\nconst { actions, reducer } = gameSlice;\n\nexport default reducer;\n\nexport const subscribe = (dispatch: AppDispatch, socket: SocketIOClient.Socket) => {\n  socket.on('connectedToGame', (event: GameJoinedEvent) => {\n    console.log('connectedToGame:', event);\n    dispatch(actions.setGamePlayer(event));\n  });\n\n  socket.on('gameUpdated', (event: GameUpdatedEvent) => {\n    console.log('gameUpdated:', event);\n\n    dispatch(actions.updateGame(event));\n  });\n\n  socket.on('gameDoesNotExist', () => {\n    console.log('gameDoesNotExist');\n    dispatch(actions.leaveGame());\n  });\n\n  socket.on('disconnect', () => {\n    console.log('disconnect');\n    dispatch(actions.leaveGame());\n  });\n};\n\nexport const createGame = (\n  { name, goToGame }: CreateGameParams,\n)=> async (dispatch: AppDispatch) => {\n  const code = uuid();\n  dispatch(joinGame({ code, name, goToGame }));\n};\n\nexport const joinGame = (\n  { code, name, goToGame }: JoinGameParams,\n)=> async (dispatch: AppDispatch) => {\n  dispatch(actions.setPlayerName(name));\n  dispatch(actions.setCode(code));\n  goToGame(code);\n};\n\nexport const connectToGameChannel = () => async (\n  _dispatch: AppDispatch,\n  getState: AppGetState,\n) => {\n  const { game: { config: { name, code } } } = getState();\n  const socket = await socketDeferred.promise;\n  socket.emit('joinGame', { name, code });\n};\n\nexport const startGame = () => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.startGame());\n  const socket = await socketDeferred.promise;\n  socket.emit('startGame', {});\n};\n\nexport const leaveGame = () => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.leaveGame());\n  const socket = await socketDeferred.promise;\n  socket.emit('leaveGame', {});\n};\n\nexport const chooseConcept = (concept: string) => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.chooseConcept(concept));\n  const socket = await socketDeferred.promise;\n  socket.emit('chooseConcept', { concept });\n};\n\nexport const submitDrawing = (drawing: string) => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.submitEntry());\n  const socket = await socketDeferred.promise;\n  socket.emit('submitEntry', {\n    entry: { type: 'drawing', drawing }\n  });\n};\n\nexport const submitConcept = (concept: string) => async (\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.submitEntry());\n  const socket = await socketDeferred.promise;\n  socket.emit('submitEntry', {\n    entry: { type: 'concept', concept }\n  });\n};\n\nexport const chooseEntry = (targetPlayer: string) => async(\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.chooseEntry(targetPlayer));\n  const socket = await socketDeferred.promise;\n  socket.emit('chooseEntry', { targetPlayer });\n};\n\nexport const acknowledgeWinner = () => async(\n  dispatch: AppDispatch,\n) => {\n  dispatch(actions.acknowledgeWinner());\n  const socket = await socketDeferred.promise;\n  socket.emit('acknowledgeWinner', {});\n};\n\nconst { dismissAlert } = actions;\nexport { dismissAlert };\n\nexport { selectors };\n","import { connect } from 'react-redux';\n\nimport Menu, { StartGameParams } from './Menu';\nimport { AppDispatch } from '../../store';\nimport { createGame, joinGame } from '../../store/game';\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  startGame: ({ mode, name, code, goToGame }: StartGameParams) => {\n    if (mode === 'newGame') {\n      dispatch(createGame({ name, goToGame }));\n    } else {\n      dispatch(joinGame({ name, code, goToGame }));\n    }\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(Menu);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    maxWidth: 500,\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n\nimport useStyles from './Connecting.styles';\nimport Emoji from '../Emoji';\n\ntype Props = {\n  hasError: boolean,\n};\n\nconst Connecting: FunctionComponent<Props> = ({\n  hasError,\n}) => {\n  const classes = useStyles();\n  const severity = hasError ? 'error' : 'info';\n  const message = hasError\n    ? (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid item>\n          <Typography variant=\"h4\">\n            <Emoji symbol=\"🙈\" />\n          </Typography>\n        </Grid>\n        <Grid item>\n          Failed to connect, retrying...\n        </Grid>\n      </Grid>\n    )\n    : 'Connecting...';\n  return (\n    <Grid item xs={12}>\n      <Alert\n        icon={false}\n        className={classes.alert}\n        variant=\"outlined\"\n        severity={severity}\n      >\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid item>\n            <CircularProgress color=\"inherit\" />\n          </Grid>\n          <Grid item>\n            {message}\n          </Grid>\n        </Grid>\n      </Alert>\n    </Grid>\n  );\n};\n\nexport default Connecting;\n","import { connect } from 'react-redux';\n\nimport Connecting from './Connecting';\nimport { RootState } from '../../store/reducers';\n\nconst mapStateToProps = (state: RootState) => ({\n  hasError: state.socket.hasError,\n});\n\nexport default connect(mapStateToProps)(Connecting);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport MainContent from '../MainContent';\nimport Emoji from '../Emoji';\n\n\nconst WaitingToJoin = () => (\n  <MainContent>\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n      <Grid item>\n        <Typography variant=\"h4\"><Emoji symbol=\"✏️\"/></Typography>\n      </Grid>\n      <Grid item>\n        <Typography>You will join the game in the next round.</Typography>\n      </Grid>\n    </Grid>\n  </MainContent>\n);\n\nexport default WaitingToJoin;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  buttonContainer: {\n    paddingTop: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","\nconst pluralize = (singular: string, plural: string, count: number): string => (\n  count === 1 ? singular : plural\n);\n\nexport default pluralize;\n","import React, {\n  FunctionComponent,\n  useState,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport copy from 'copy-to-clipboard';\n\nimport MainContent from '../MainContent';\nimport Emoji from '../Emoji';\nimport { HowToPlayPanel } from '../HowToPlay';\nimport useStyles from './InitialPhase.styles';\nimport pluralize from '../../utils/pluralize';\n\ntype Props = {\n  createdGame: boolean,\n  creatorName: string,\n  missingPlayers: number,\n  gameFull: boolean,\n  gameUrl: string,\n  onStart: () => void,\n};\n\nconst InitialPhase: FunctionComponent<Props> = ({\n  createdGame,\n  creatorName,\n  missingPlayers,\n  onStart,\n  gameFull,\n  gameUrl,\n}) => {\n  const classes = useStyles();\n\n  const startButton = createdGame\n    ? (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={missingPlayers > 0}\n        onClick={onStart}\n      >\n        <Emoji symbol=\"🚀\" />\n        <span>Start!</span>\n      </Button>\n    )\n    : null;\n\n  let message = '';\n  if (missingPlayers > 0) {\n    message = `Waiting for ${missingPlayers} more ${pluralize('player', 'players', missingPlayers)}.`;\n  } else if (createdGame) {\n    message = 'Ready to start?';\n  } else {\n    message = `Waiting for ${creatorName} to start the game.`;\n  }\n\n  const [alertOpen, setAlertOpen] = useState(false);\n  const handleInviteClicked = () => {\n    copy(gameUrl);\n    setAlertOpen(true);\n  }\n  const handleAlertClosed = () => setAlertOpen(false);\n\n  return (\n    <Grid container direction=\"column\" spacing={3}>\n      <Grid item>\n        <MainContent>\n        <Grid item xs={12}>\n          <Typography>{message}</Typography>\n        </Grid>\n        <Grid\n          container direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n          className={classes.buttonContainer}\n        >\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={gameFull}\n              onClick={handleInviteClicked}\n            >\n              Invite friends\n            </Button>\n            <Snackbar\n              open={alertOpen}\n              autoHideDuration={5000}\n              onClose={handleAlertClosed}\n              anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n              <Alert onClose={handleAlertClosed} severity=\"success\">\n                Game code copied to clipboard!\n              </Alert>\n            </Snackbar>\n          </Grid>\n          <Grid item>\n            {startButton}\n          </Grid>\n        </Grid>\n      </MainContent>\n      </Grid>\n      <Grid item>\n        <HowToPlayPanel />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default InitialPhase;\n","import { connect } from 'react-redux';\nimport { AppDispatch } from '../../store';\nimport InitialPhase from './InitialPhase';\nimport { RootState } from '../../store/reducers';\nimport { GameState } from '../../store/game/types';\nimport { startGame } from '../../store/game';\nimport {\n  MIN_PLAYERS,\n  MAX_PLAYERS,\n} from '../../store/game/constants';\n\nconst mapStateToProps = (state: RootState) => {\n  const game = state.game.gameState as GameState;\n  const player = state.game.player as string;\n  const numPlayers = Object.keys(game.players).length;\n  const createdBy = game.players[game.createdBy];\n  const location = window.location;\n\n  return {\n    creatorName: createdBy.name,\n    createdGame: createdBy.id === player,\n    missingPlayers: Math.max(0, MIN_PLAYERS - numPlayers),\n    gameFull: numPlayers === MAX_PLAYERS,\n    gameUrl: `${location.protocol}//${location.host}/#/game/${game.code}`,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onStart: () => dispatch(startGame()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(InitialPhase);\n","const isDevelopment = process.env.NODE_ENV === 'development';\n\nexport const MIN_PLAYERS = isDevelopment ? 2 : 4;\nexport const MAX_PLAYERS = 8;\n","import React, {\n  FunctionComponent,\n  MouseEvent,\n} from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Typography from '@material-ui/core/Typography';\n\nimport Emoji from '../Emoji';\n\ntype Props = {\n  concept: string,\n  selected?: boolean,\n  disabled?: boolean,\n  onClick: (event: MouseEvent<HTMLElement>) => void,\n}\n\nconst ConceptListItem: FunctionComponent<Props> = ({\n  concept,\n  selected = false,\n  disabled = false,\n  onClick,\n}) => (\n  <ListItem\n    divider\n    button\n    onClick={onClick}\n    selected={selected}\n    disabled={disabled}\n  >\n    <ListItemAvatar>\n      <Typography variant=\"h4\"><Emoji symbol=\"💡\" /></Typography>\n    </ListItemAvatar>\n    <ListItemText primary={concept}/>\n  </ListItem>\n);\n\nexport default ConceptListItem;\n","import React, { FunctionComponent } from 'react';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport MainContent from '../MainContent';\nimport Emoji from '../Emoji';\nimport ConceptListItem from '../ConceptListItem';\n\ntype Props = {\n  concepts: string[],\n  selectedConcept?: string,\n  onChooseConcept: (concept: string) => void,\n};\n\nconst ConceptChoicePhase: FunctionComponent<Props> = ({\n  concepts,\n  selectedConcept,\n  onChooseConcept,\n}) => {\n  const emoji = selectedConcept ? '⏳' : '🤫';\n  const message = selectedConcept\n    ? 'You will start drawing as soon as every player has chosen what to draw.'\n    : 'Choose what to draw. Keep it a secret!';\n\n  return (\n    <MainContent>\n      <Grid item xs={12}>\n        <Typography>\n          <Emoji symbol={emoji} />\n          <span> {message}</span>\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <List>\n          {\n            concepts.map(concept => (\n              <ConceptListItem\n                key={concept}\n                concept={concept}\n                selected={selectedConcept === concept}\n                disabled={!!selectedConcept}\n                onClick={() => onChooseConcept(concept)}\n              />\n            ))\n          }\n        </List>\n      </Grid>\n    </MainContent>\n  );\n};\n\nexport default ConceptChoicePhase;\n","import { connect } from 'react-redux';\n\nimport ConceptChoicePhase from './ConceptChoicePhase';\nimport { AppDispatch } from '../../store';\nimport { RootState } from '../../store/reducers';\nimport { chooseConcept } from '../../store/game';\nimport {\n  ConceptChoicePhase as ConceptChoicePhaseType,\n  Round,\n} from '../../store/game/types';\n\nconst mapStateToProps = (state: RootState) => {\n  const choosingConcept = state.game.choosingConcept;\n  const round = state.game.gameState?.round as Round;\n  const phase = round.phase as ConceptChoicePhaseType;\n  const playerId = state.game.player as string;\n  const concepts = phase.choices[playerId];\n  const selectedConcept = round.concepts[playerId];\n\n  return {\n    selectedConcept: selectedConcept || choosingConcept,\n    concepts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onChooseConcept: (concept: string) => dispatch(chooseConcept(concept)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ConceptChoicePhase);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // border: '1px solid',\n    borderRadius: 4,\n  },\n}));\n\nexport default useStyles;\n","import React, {\n  ReactNode,\n  FunctionComponent,\n  MouseEvent,\n} from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from './ToolBarButton.styles';\n\ntype Props = {\n  title: string,\n  icon: ReactNode,\n  onClick: (event: MouseEvent<HTMLElement>) => void,\n  disabled?: boolean,\n}\n\nconst ToolBarButton: FunctionComponent<Props> = ({\n  title,\n  icon,\n  disabled = false,\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Tooltip title={title} placement=\"left\">\n      <span>\n        <IconButton\n          aria-label={title}\n          onClick={onClick}\n          disabled={disabled}\n          classes={{\n            root: classes.root,\n          }}\n        >\n          {icon}\n        </IconButton>\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default ToolBarButton;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import React, {\n  useState,\n  FunctionComponent,\n  MouseEvent,\n  ReactNode,\n} from 'react';\n\nimport Popover from '@material-ui/core/Popover';\n\nimport ToolBarButton from '../ToolBarButton';\nimport useStyles from './ExpandableToolBarButton.styles';\n\ntype RenderContentProps = {\n  close: () => void,\n}\n\ntype Props = {\n  title: string,\n  icon: ReactNode,\n  renderContent: (props: RenderContentProps) => ReactNode,\n}\n\nconst ExpandableToolBarButton: FunctionComponent<Props> = ({\n  title,\n  icon,\n  renderContent,\n}) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const handleClick = (event: MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => setAnchorEl(null);\n\n  const open = Boolean(anchorEl);\n  const id = open ? `${title}-popover` : undefined;\n\n  return (\n    <React.Fragment>\n      <ToolBarButton\n        title={title}\n        icon={icon}\n        onClick={handleClick}\n      />\n      <Popover\n        id={id}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left',\n        }}\n      >\n        {renderContent({ close: handleClose })}\n      </Popover>\n    </React.Fragment>\n  );\n};\n\nexport default ExpandableToolBarButton;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flex: 1,\n    width: 200,\n    height: 25,\n    marginTop: 18,\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\n\nimport Slider from '@material-ui/core/Slider';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nimport ExpandableToolBarButton from '../ExpandableToolBarButton';\nimport useStyles from './LineWidthPickerButton.styles';\n\ntype Props = {\n  lineWidth: number,\n  onLineWidthChange: (width: number) => void,\n}\n\nconst valueText = (value: number): string => `${value} px`;\n\nconst LineWidthPickerButton: FunctionComponent<Props> = ({\n  lineWidth,\n  onLineWidthChange,\n}) => {\n  const classes = useStyles();\n\n  const handleChange = (\n    _e: any,\n    newValue: number | number[],\n  ) => onLineWidthChange(Array.isArray(newValue) ? newValue[0] : newValue);\n\n  return (\n    <ExpandableToolBarButton\n      title=\"Line width\"\n      icon={<FiberManualRecordIcon />}\n      renderContent={() => (\n        <div className={classes.root}>\n          <Slider\n            value={lineWidth}\n            getAriaValueText={valueText}\n            valueLabelDisplay=\"on\"\n            step={1}\n            min={1}\n            max={50}\n            onChange={handleChange}\n          />\n        </div>\n      )}\n    />\n  );\n};\n\nexport default LineWidthPickerButton;\n","import React, { FunctionComponent } from 'react';\n\nimport { CirclePicker, ColorResult } from 'react-color';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nimport ExpandableToolBarButton from '../ExpandableToolBarButton';\n\ntype Props = {\n  color: string,\n  onColorChange: (color: string) => void,\n}\n\nconst ColorPickerButton: FunctionComponent<Props> = ({\n  color,\n  onColorChange,\n}) => {\n  const handleOnChangeComplete = (color: ColorResult) => onColorChange(color.hex);\n\n  return (\n    <ExpandableToolBarButton\n      title=\"Color\"\n      icon={<FiberManualRecordIcon style={{ color }}/>}\n      renderContent={({ close }) => (\n        <CirclePicker\n          color={color}\n          onChangeComplete={(color) => {\n            close();\n            handleOnChangeComplete(color);\n          }}\n        />\n      )}\n    />\n  );\n};\n\nexport default ColorPickerButton;\n","import React, { FunctionComponent } from 'react';\n\nimport CreateIcon from '@material-ui/icons/Create';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport ExpandableToolBarButton from '../ExpandableToolBarButton';\n\ntype Tool = 'pencil' | 'eraser'\n\ntype Props = {\n  tool: Tool,\n  onToolchange: (tool: Tool) => void,\n}\n\nconst getIconForTool = (tool: Tool) => (\n  tool === 'pencil'\n    ? <CreateIcon />\n    : <ClearIcon />\n);\n\nconst ToolPickerButton: FunctionComponent<Props> = ({\n  tool,\n  onToolchange,\n}) => (\n  <ExpandableToolBarButton\n    title=\"Tool\"\n    icon={getIconForTool(tool)}\n    renderContent={({ close }) => (\n      <ToggleButtonGroup\n        value={tool}\n        exclusive\n        onChange={(_event, newTool) => {\n          close();\n          onToolchange(newTool)\n        }}\n        aria-label=\"text alignment\"\n      >\n        <ToggleButton value=\"pencil\" aria-label=\"pencil\">\n          <CreateIcon />\n        </ToggleButton>\n        <ToggleButton value=\"eraser\" aria-label=\"eraser\">\n          <ClearIcon />\n        </ToggleButton>\n      </ToggleButtonGroup>\n    )}\n  />\n);\n\nexport default ToolPickerButton;\n","import React, { FunctionComponent } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport ToolBarButton from '../ToolBarButton';\nimport LineWidthPickerButton from '../LineWidthPickerButton';\nimport ColorPickerButton from '../ColorPickerButton';\nimport ToolPickerButton from '../ToolPickerButton';\n\nexport type Tool = 'pencil' | 'eraser'\n\ntype Props = {\n  lineWidth?: number,\n  onLineWidthChange: (width: number) => void,\n  color?: string,\n  onColorChange: (color: string) => void,\n  tool?: Tool\n  onToolChange: (tool: Tool) => void,\n  canUndo?: boolean,\n  onUndo: () => void,\n  canRedo?: boolean,\n  onRedo: () => void,\n  onEraseAll: () => void,\n}\n\nconst ToolBar: FunctionComponent<Props> = ({\n  lineWidth = 5,\n  onLineWidthChange,\n  color = '#f44336',\n  onColorChange,\n  tool = 'pencil',\n  onToolChange,\n  canUndo = false,\n  onUndo,\n  canRedo = false,\n  onRedo,\n  onEraseAll,\n}) => (\n  <Grid\n    container\n    direction=\"column\"\n    spacing={0}\n    alignItems=\"center\"\n  >\n    <LineWidthPickerButton\n      lineWidth={lineWidth}\n      onLineWidthChange={onLineWidthChange}\n    />\n    <ColorPickerButton\n      color={color}\n      onColorChange={onColorChange}\n    />\n    <ToolPickerButton\n      tool={tool}\n      onToolchange={onToolChange}\n    />\n    <ToolBarButton\n      title=\"Undo\"\n      icon={<UndoIcon />}\n      onClick={onUndo}\n      disabled={!canUndo}\n    />\n    <ToolBarButton\n      title=\"Redo\"\n      icon={<RedoIcon />}\n      onClick={onRedo}\n      disabled={!canRedo}\n    />\n    <ToolBarButton\n      title=\"Erase all\"\n      icon={<DeleteIcon />}\n      onClick={onEraseAll}\n    />\n  </Grid>\n);\n\nexport default ToolBar;\n","import { styled } from '@material-ui/core/styles';\nimport { SketchField as SketchFieldBase } from 'react-sketch';\n\nexport const SketchField = styled(SketchFieldBase)({\n  border: '1px solid',\n  borderRadius: 4,\n});\n\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ToolBar from '../ToolBar';\nimport { SketchField } from './Editor.styled';\n\ntype Tool = 'pencil' | 'eraser'\ntype Props = {}\ntype State = {\n  lineWidth: number,\n  color: string,\n  tool: Tool\n  canUndo: boolean,\n  canRedo: boolean,\n}\n\nclass Editor extends React.Component<Props, State> {\n  private sketch: any;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      lineWidth: 10,\n      color: '#f44336',\n      tool: 'pencil',\n      canUndo: false,\n      canRedo: false,\n    };\n\n    this.onLineWidthChange = this.onLineWidthChange.bind(this);\n    this.onColorChange = this.onColorChange.bind(this);\n    this.onToolChange = this.onToolChange.bind(this);\n    this.onUndo = this.onUndo.bind(this);\n    this.onRedo = this.onRedo.bind(this);\n    this.onEraseAll = this.onEraseAll.bind(this);\n    this.onSketchChange = this.onSketchChange.bind(this);\n  }\n\n  onLineWidthChange(lineWidth: number) {\n    this.setState({ lineWidth });\n  }\n\n  onColorChange(color: string) {\n    this.setState({ color });\n  }\n\n  onToolChange(tool: Tool) {\n    this.setState({ tool });\n  }\n\n  onUndo() {\n    if (!this.sketch) {\n      return;\n    }\n    this.sketch.undo();\n  }\n\n  onRedo() {\n    if (!this.sketch) {\n      return;\n    }\n    this.sketch.redo();\n  }\n\n  onEraseAll() {\n    if (!this.sketch) {\n      return;\n    }\n    this.sketch.clear();\n  }\n\n  onSketchChange() {\n    if (!this.sketch) {\n      return;\n    }\n\n    const { canUndo, canRedo } = this.state;\n    const canUndoNow = this.sketch.canUndo();\n    const canRedoNow = this.sketch.canRedo();\n    const needsUpdate = canUndo !== canUndoNow || canRedo !== canRedoNow;\n    if (needsUpdate) {\n      this.setState({\n        canUndo: canUndoNow,\n        canRedo: canRedoNow,\n      });\n    }\n  }\n\n  export(): string {\n    if (!this.sketch) {\n      return '';\n    }\n    return this.sketch.toDataURL();\n  }\n\n  render() {\n    const {\n      lineWidth,\n      color,\n      tool,\n      canUndo,\n      canRedo,\n    } = this.state;\n\n    const editorColor = tool === 'pencil' ? color : '#ffffff';\n\n    return (\n      <Grid container direction=\"row\">\n        <Grid item xs={2}>\n          <ToolBar\n            lineWidth={lineWidth}\n            onLineWidthChange={this.onLineWidthChange}\n            color={color}\n            onColorChange={this.onColorChange}\n            tool={tool}\n            onToolChange={this.onToolChange}\n            canUndo={canUndo}\n            onUndo={this.onUndo}\n            canRedo={canRedo}\n            onRedo={this.onRedo}\n            onEraseAll={this.onEraseAll}\n          />\n        </Grid>\n        <Grid item xs={10}>\n          <SketchField\n            ref={(sketch: any) => this.sketch = sketch}\n            height='480px'\n            tool={tool}\n            lineColor={editorColor}\n            lineWidth={lineWidth}\n            onChange={this.onSketchChange}\n          />\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default Editor;\n","import React, {\n  FunctionComponent,\n  createRef,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport MainContent from '../MainContent';\nimport Editor from '../Editor';\nimport Emoji from '../Emoji';\n\ntype Props = {\n  firstCreateTurn: boolean,\n  submitted: boolean,\n  concept: string | undefined,\n  conceptFrom: string | undefined,\n  onSubmit: (image: string) => void,\n};\n\nconst DrawPhase: FunctionComponent<Props> = ({\n  firstCreateTurn,\n  submitted,\n  concept,\n  conceptFrom,\n  onSubmit,\n}) => {\n  const editorRef = createRef<Editor>();\n  const handleSubmitClicked = () => {\n    const editor = editorRef.current;\n    if (editor) {\n      const image = editor.export();\n      onSubmit(image);\n    }\n  };\n\n  const emoji = submitted ? '⏳' : '✏️';\n  let message = '';\n  if (submitted) {\n    message = 'Waiting for everyone to finish their drawing.';\n  } else if (firstCreateTurn) {\n    message = `Draw \"${concept}\".`;\n  } else {\n    message = `From ${conceptFrom}, draw \"${concept}\".`;\n  }\n\n  return (\n    <MainContent width={800}>\n      <Grid item xs={12}>\n        <Typography>\n          <Emoji symbol={emoji} />\n          <span> {message}</span>\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Editor ref={editorRef}/>\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSubmitClicked}\n          disabled={submitted}\n        >\n          <Emoji symbol=\"🎨\"/>\n          <span>Done</span>\n        </Button>\n      </Grid>\n    </MainContent>\n  );\n};\n\nexport default DrawPhase;\n","import { connect } from 'react-redux';\n\nimport DrawPhase from './DrawPhase';\nimport { AppDispatch } from '../../store';\nimport { RootState } from '../../store/reducers';\nimport { submitDrawing } from '../../store/game';\nimport { selectors } from '../../store/game';\n\nconst mapStateToProps = (state: RootState) => ({\n  firstCreateTurn: selectors.isFirstCreateTurn(state),\n  concept: selectors.currentConcept(state),\n  conceptFrom: selectors.sourceEntryAuthor(state),\n  submitted: selectors.hasSubmitted(state),\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSubmit: (drawing: string) => dispatch(submitDrawing(drawing)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DrawPhase);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    width: 400,\n    borderRadius: 4,\n  }\n}));\n\nexport default useStyles;\n","import React, {\n  FunctionComponent,\n  useState,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from './GuessPhase.styles';\nimport Emoji from '../Emoji';\nimport MainContent from '../MainContent';\n\ntype Props = {\n  author: string | undefined,\n  image: string,\n  submitted: boolean,\n  onSubmit: (image: string) => void,\n};\n\nconst GuessPhase: FunctionComponent<Props> = ({\n  author,\n  image,\n  submitted,\n  onSubmit,\n}) => {\n  const classes = useStyles();\n  const [guess, setGuess] = useState('');\n  const handleGuessChanged = (\n    (event:React.ChangeEvent<HTMLInputElement>) => setGuess(event.target.value)\n  )\n  const handleSubmitClicked = () => {\n    onSubmit(guess);\n  };\n\n  const message = submitted\n    ? 'Waiting for everyone to guess.'\n    : `Guess what ${author} drew.`;\n  const emoji = submitted ? '⏳' : '🕵️‍♂️';\n\n  return (\n    <MainContent width={800}>\n      <Grid item xs={12}>\n        <Typography>\n          <Emoji symbol={emoji} />\n          <span> {message}</span>\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <img src={image} alt={message} className={classes.image} />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          label=\"Guess\"\n          value={guess}\n          onChange={handleGuessChanged}\n          disabled={submitted}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleSubmitClicked}\n          disabled={submitted}\n        >\n          <Emoji symbol=\"🎨\"/>\n          <span>Done</span>\n        </Button>\n      </Grid>\n    </MainContent>\n  );\n};\n\nexport default GuessPhase;\n","import { connect } from 'react-redux';\n\nimport GuessPhase from './GuessPhase';\nimport { AppDispatch } from '../../store';\nimport { RootState } from '../../store/reducers';\nimport { submitConcept } from '../../store/game';\nimport { selectors } from '../../store/game';\n\nconst mapStateToProps = (state: RootState) => ({\n  submitted: selectors.hasSubmitted(state),\n  author: selectors.sourceEntryAuthor(state),\n  image: selectors.currentDrawing(state),\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSubmit: (concept: string) => dispatch(submitConcept(concept)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GuessPhase);\n","import React, { FunctionComponent } from 'react';\n\nimport DrawPhase from '../DrawPhase';\nimport GuessPhase from '../GuessPhase';\n\nexport type EntryType = 'draw' | 'guess';\n\ntype Props = {\n  type: EntryType,\n};\n\nconst CreateEntryPhase: FunctionComponent<Props> = ({\n  type,\n}) => (\n  type === 'draw'\n    ? <DrawPhase />\n    : <GuessPhase />\n);\n\nexport default CreateEntryPhase;\n","import { connect } from 'react-redux';\n\nimport CreateEntryPhase, { EntryType } from './CreateEntryPhase';\nimport { RootState } from '../../store/reducers';\nimport { CreateEntryPhase as CreateEntryPhaseType } from '../../store/game/types';\n\nconst mapStateToProps = (state: RootState) => {\n  const phase = state.game.gameState?.round.phase as CreateEntryPhaseType;\n  const type: EntryType = phase.index % 2 === 0\n    ? 'draw'\n    : 'guess'\n\n  return { type };\n};\n\nexport default connect(mapStateToProps)(CreateEntryPhase);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(3),\n  },\n  avatar: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, {\n  FunctionComponent,\n  ReactNode\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Avatar from '@material-ui/core/Avatar';\nimport Avataaar from 'avataaars';\n\nimport { Avatar as AvatarType } from '../../store/game/types';\nimport useStyles from './EntryCard.styles';\n\ntype Props = {\n  name: string,\n  avatar: AvatarType,\n  entry: ReactNode,\n  onClick?: () => void,\n}\n\nconst EntryCard: FunctionComponent<Props> = ({\n  name,\n  avatar,\n  entry,\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  const content = (\n    <div className={classes.container}>\n      <CardHeader\n        avatar={(\n          <Avatar variant=\"rounded\" alt={name} className={classes.avatar}>\n            <Avataaar\n              avatarStyle=\"Circle\"\n              topType={avatar.topType}\n              accessoriesType={avatar.accessoriesType}\n              hairColor={avatar.hairColor}\n              facialHairType={avatar.facialHairType}\n              clotheType={avatar.clotheType}\n              clotheColor={avatar.clotheColor}\n              eyeType={avatar.eyeType}\n              eyebrowType={avatar.eyebrowType}\n              mouthType={avatar.mouthType}\n              skinColor={avatar.skinColor}\n            />\n          </Avatar>\n        )}\n        title={name}\n      />\n      {entry}\n    </div>\n  );\n  const wrapped = onClick\n    ? (<CardActionArea onClick={onClick}>{content}</CardActionArea>)\n    : content;\n\n  return (\n    <Grid item xs={12}>\n      {wrapped}\n    </Grid>\n  );\n}\n\nexport default EntryCard;\n","import React, { FunctionComponent } from 'react';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport EntryCard from '../EntryCard';\nimport { Avatar } from '../../store/game/types';\n\ntype Props = {\n  name: string,\n  avatar: Avatar,\n  image: string,\n  onClick?: () => void,\n}\n\nconst DoodleEntryCard: FunctionComponent<Props> = ({\n  name,\n  avatar,\n  image,\n  onClick,\n}) => (\n  <EntryCard\n    name={name}\n    avatar={avatar}\n    entry={(\n      <CardMedia\n        component=\"img\"\n        image={image}\n        width=\"500\"\n        title={`Entry by ${name}`}\n      />\n    )}\n    onClick={onClick}\n  />\n);\n\nexport default DoodleEntryCard;\n","import { connect } from 'react-redux';\n\nimport DoodleEntryCard from './DoodleEntryCard';\nimport { RootState } from '../../store/reducers';\nimport { GameState } from '../../store/game/types';\n\ninterface OwnProps {\n  playerId: string,\n};\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const game = state.game.gameState as GameState;\n  const player = game.players[ownProps.playerId];\n  return {\n    name: player.name,\n    avatar: player.avatar,\n  };\n}\nexport default connect(mapStateToProps)(DoodleEntryCard);\n","import React, { FunctionComponent } from 'react';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport EntryCard from '../EntryCard';\nimport { Avatar } from '../../store/game/types';\n\n\ntype Props = {\n  name: string,\n  avatar: Avatar,\n  concept: string,\n  onClick?: () => void,\n}\n\nconst ConceptEntryCard: FunctionComponent<Props> = ({\n  name,\n  avatar,\n  concept,\n  onClick,\n}) => (\n  <EntryCard\n    name={name}\n    avatar={avatar}\n    entry={(\n      <CardContent>\n        <Typography variant=\"h4\">{concept}</Typography>\n      </CardContent>\n    )}\n    onClick={onClick}\n  />\n);\n\nexport default ConceptEntryCard;\n","import { connect } from 'react-redux';\n\nimport ConceptEntryCard from './ConceptEntryCard';\nimport { RootState } from '../../store/reducers';\nimport { GameState } from '../../store/game/types';\n\ninterface OwnProps {\n  playerId: string,\n};\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n  const game = state.game.gameState as GameState;\n  const player = game.players[ownProps.playerId];\n  return {\n    name: player.name,\n    avatar: player.avatar,\n  };\n}\nexport default connect(mapStateToProps)(ConceptEntryCard);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(3),\n    maxWidth: 500,\n  },\n  entryPaper: {\n    maxWidth: 500,\n  },\n  selectedEntry: {\n    borderWidth: 4,\n    borderColor: theme.palette.primary.main,\n  },\n  choicesContainer: {\n    padding: theme.spacing(3),\n    maxWidth: 500,\n  },\n  img: {\n    width: '100%',\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport Emoji from '../Emoji';\nimport DoodleEntryCard from '../DoodleEntryCard';\nimport ConceptEntryCard from '../ConceptEntryCard';\nimport { Entry } from '../../store/game/types';\nimport useStyles from './EntryChoicePhase.styles';\n\ntype Props = {\n  winningEntry: Entry,\n  concept: string,\n  stackPlayerName: string,\n  currentPlayerChose: boolean,\n  chosenPlayerName: string,\n  acknowledged: boolean,\n  onAcknowledge: () => void,\n};\n\nconst EntryChoiceAcknowledge: FunctionComponent<Props> = ({\n  winningEntry,\n  concept,\n  stackPlayerName,\n  currentPlayerChose,\n  chosenPlayerName,\n  acknowledged,\n  onAcknowledge,\n}) => {\n  const classes = useStyles();\n\n  const message = currentPlayerChose\n    ? `You chose the entry by ${chosenPlayerName} for \"${concept}\"!`\n    : `${stackPlayerName} chose the entry by ${chosenPlayerName} for \"${concept}\"!`;\n\n  const entryCard = winningEntry.data.type === 'drawing'\n    ? (\n      <DoodleEntryCard\n        playerId={winningEntry.author}\n        image={winningEntry.data.drawing}\n      />\n    )\n    : (\n      <ConceptEntryCard\n        playerId={winningEntry.author}\n        concept={winningEntry.data.concept}\n      />\n    );\n\n  const nextButton = !currentPlayerChose\n    ? (\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={acknowledged}\n          onClick={onAcknowledge}\n        >\n          <Emoji symbol=\"👏\"/>\n          <span>Next</span>\n        </Button>\n      </Grid>\n    )\n    : null;\n\n  return (\n    <Grid item xs={12}>\n      <Paper elevation={1} variant=\"outlined\" className={classes.paper}>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item xs={12}>\n            <Typography>\n              <Emoji symbol=\"🥳\" />\n              <span> {message}</span>\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            {entryCard}\n          </Grid>\n          {nextButton}\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default EntryChoiceAcknowledge;\n","import React, { FunctionComponent } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport useStyles from './EntryChoicePhase.styles';\nimport Emoji from '../Emoji';\nimport DoodleEntryCard from '../DoodleEntryCard';\nimport ConceptEntryCard from '../ConceptEntryCard';\nimport { Entry, DrawingEntry } from '../../store/game/types';\n\ntype Props = {\n  entries: Entry[],\n  concept: string,\n  stackPlayerName: string,\n  currentPlayerChooses: boolean,\n  onChooseEntry: (playerId: string) => void,\n};\n\nconst EntryChoiceList: FunctionComponent<Props> = ({\n  entries,\n  concept,\n  stackPlayerName,\n  currentPlayerChooses,\n  onChooseEntry,\n}) => {\n  const classes = useStyles();\n\n  const message = currentPlayerChooses\n    ? `Choose your favourite entry for \"${concept}\".`\n    : `${stackPlayerName} is choosing their favourite entry for \"${concept}\".`\n  const emoji = currentPlayerChooses\n    ? '🤔'\n    : '😅';\n\n  const firstEntry = entries[0];\n  const drawingEntry = firstEntry.data as DrawingEntry;\n  const otherEntries = entries.slice(1);\n\n  return (\n    <Grid item xs={12}>\n      <Grid container direction=\"column\" spacing={4}>\n        <Grid item xs={12}>\n          <Paper elevation={1} variant=\"outlined\" className={classes.paper}>\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs={12}>\n                <Typography>\n                  <Emoji symbol={emoji} />\n                  <span> {message}</span>\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <img\n                  className={classes.img}\n                  src={drawingEntry.drawing}\n                  alt={`Initial drawing by ${stackPlayerName}`}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n          {\n            otherEntries.map((entry) => {\n              const entryCard = entry.data.type === 'drawing'\n                ? (\n                  <DoodleEntryCard\n                    playerId={entry.author}\n                    image={entry.data.drawing}\n                    onClick={\n                      currentPlayerChooses\n                        ? () => onChooseEntry(entry.author)\n                        : undefined\n                    }\n                  />\n                )\n                : (\n                  <ConceptEntryCard\n                    playerId={entry.author}\n                    concept={entry.data.concept}\n                    onClick={\n                      currentPlayerChooses\n                        ? () => onChooseEntry(entry.author)\n                        : undefined\n                    }\n                  />\n                );\n              return (\n                <Grid item xs={12} key={entry.author}>\n                  <Paper\n                    elevation={1}\n                    variant=\"outlined\"\n                    className={classes.entryPaper}\n                  >\n                    {entryCard}\n                  </Paper>\n                </Grid>\n              );\n            }\n          )\n        }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default EntryChoiceList;\n","import React, { FunctionComponent } from 'react';\n\nimport EntryChoiceAcknowledge from './EntryChoiceAcknowledge';\nimport EntryChoiceList from './EntryChoiceList';\nimport { Entry } from '../../store/game/types';\n\ntype Props = {\n  entries: Entry[],\n  concept: string,\n  stackPlayerName: string,\n  currentPlayerChooses: boolean,\n  chosenPlayerId?: string,\n  chosenPlayerName?: string,\n  acknowledged: boolean,\n  onChooseEntry: (playerId: string) => void,\n  onAcknowledge: () => void,\n};\n\nconst EntryChoicePhase: FunctionComponent<Props> = ({\n  entries,\n  concept,\n  stackPlayerName,\n  currentPlayerChooses,\n  chosenPlayerId,\n  chosenPlayerName,\n  acknowledged,\n  onChooseEntry,\n  onAcknowledge,\n}) => (\n  chosenPlayerId\n    ? (\n      <EntryChoiceAcknowledge\n        winningEntry={entries.find(entry => entry.author === chosenPlayerId) as Entry}\n        concept={concept}\n        stackPlayerName={stackPlayerName}\n        currentPlayerChose={currentPlayerChooses}\n        chosenPlayerName={chosenPlayerName as string}\n        acknowledged={acknowledged}\n        onAcknowledge={onAcknowledge}\n      />\n    )\n    : (\n      <EntryChoiceList\n        entries={entries}\n        concept={concept}\n        stackPlayerName={stackPlayerName}\n        currentPlayerChooses={currentPlayerChooses}\n        onChooseEntry={onChooseEntry}\n      />\n    )\n);\n\nexport default EntryChoicePhase;\n","import { connect } from 'react-redux';\n\nimport EntryChoicePhase from './EntryChoicePhase';\nimport { AppDispatch } from '../../store';\nimport { RootState } from '../../store/reducers';\nimport {\n  GameState,\n  EntryChoicePhase as EntryChoicePhaseType,\n} from '../../store/game/types';\nimport {\n  chooseEntry,\n  acknowledgeWinner,\n} from '../../store/game';\n\nconst mapStateToProps = (state: RootState) => {\n  const game = state.game.gameState as GameState;\n  const phase = game.round.phase as EntryChoicePhaseType;\n  const stackPlayerId = game.round.order[phase.index];\n  const stackPlayerName = game.players[stackPlayerId].name;\n  const concept = game.round.concepts[stackPlayerId];\n  const stack = game.round.stacks[stackPlayerId];\n  const playerId = state.game.player as string;\n  const currentPlayerChooses = playerId === stackPlayerId;\n  const chosenPlayerId = stack.chosen || state.game.chosenEntry;\n  const chosenPlayerName = chosenPlayerId\n    ? game.players[chosenPlayerId].name\n    : undefined;\n  const entries = stack.entries;\n  const acknowledged = state.game.acknowledgedWinner || !!phase.acknowledgedBy[playerId];\n\n  return {\n    stackPlayerName,\n    concept,\n    currentPlayerChooses,\n    chosenPlayerId,\n    chosenPlayerName,\n    entries,\n    acknowledged,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onChooseEntry: (targetPlayer: string) => dispatch(chooseEntry(targetPlayer)),\n  onAcknowledge: () => dispatch(acknowledgeWinner()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EntryChoicePhase);\n","import React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nimport Connecting from '../Connecting';\nimport WaitingToJoin from '../WaitingToJoin';\nimport InitialPhase from '../InitialPhase';\nimport ConceptChoicePhase from '../ConceptChoicePhase';\nimport CreateEntryPhase from '../CreateEntryPhase';\nimport EntryChoicePhase from '../EntryChoicePhase';\n\nimport { Alert as AlertType } from '../../store/game/types';\n\ninterface Props extends RouteComponentProps<any> {\n  connected: boolean,\n  waitingToJoin: boolean,\n  phaseName: string,\n  alert?: AlertType,\n  connect: () => void,\n  leave: () => void,\n  dismissAlert: () => void,\n}\n\nclass Game extends React.Component<Props, {}> {\n  unblock?: () => void;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.onBeforeUnload = this.onBeforeUnload.bind(this);\n  }\n\n  onBeforeUnload(e: BeforeUnloadEvent) {\n    if (process.env.NODE_ENV !== 'development') {\n      var dialogText = 'You will exit the game.';\n      e.returnValue = dialogText;\n      return dialogText;\n    }\n  }\n\n  componentDidMount() {\n    const { connect, history } = this.props;\n\n    connect();\n    window.addEventListener('beforeunload', this.onBeforeUnload);\n    this.unblock = history.block('Are you sure you want to leave the game?');\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.onBeforeUnload);\n    const { leave } = this.props;\n    leave();\n    if (this.unblock) {\n      this.unblock();\n    }\n  }\n\n  renderContent() {\n    const {\n      connected,\n      phaseName,\n      waitingToJoin,\n    } = this.props;\n\n    if (!connected) {\n      return <Connecting />;\n    }\n\n    if (waitingToJoin) {\n      return <WaitingToJoin />\n    }\n\n    switch (phaseName) {\n      case 'initial':\n        return <InitialPhase />;\n      case 'conceptChoice':\n        return <ConceptChoicePhase />;\n      case 'createEntry':\n        return <CreateEntryPhase />;\n      case 'entryChoice':\n        return <EntryChoicePhase />\n      default:\n        return <Typography>Unknown phase</Typography>\n    }\n  }\n\n  renderAlert() {\n    const { alert, dismissAlert } = this.props;\n    const alertComponent = alert\n      ? (\n        <Alert onClose={dismissAlert} severity={alert.severity}>\n          {alert.message}\n        </Alert>\n      )\n      : undefined;\n\n    return (\n      <Snackbar\n        open={!!alert}\n        autoHideDuration={5000}\n        onClose={dismissAlert}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        {alertComponent}\n      </Snackbar>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderContent()}\n        {this.renderAlert()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Game);\n","import { connect } from 'react-redux';\n\nimport Game from './Game';\nimport { AppDispatch } from '../../store';\nimport {\n  connectToGameChannel,\n  leaveGame,\n  dismissAlert,\n} from '../../store/game';\nimport { RootState } from '../../store/reducers';\n\nconst mapStateToProps = (state: RootState) => {\n  const game = state.game.gameState;\n  const playerId = state.game.player;\n\n  if (!game || !playerId) {\n    return {\n      connected: false,\n      waitingToJoin: false,\n      phaseName: '',\n    };\n  }\n\n  return {\n    connected: true,\n    waitingToJoin: !!game.waitingPlayers[playerId],\n    phaseName: game.round.phase.name,\n    alert: state.game.alerts.length > 0\n      ? state.game.alerts[0]\n      : undefined,\n  };\n}\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  connect: () => dispatch(connectToGameChannel()),\n  leave: () => dispatch(leaveGame()),\n  dismissAlert: () => dispatch(dismissAlert()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Game);\n","import React, {\n  useState,\n  FunctionComponent,\n} from 'react';\nimport { useParams, withRouter, RouteComponentProps } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport Emoji from '../Emoji';\nimport { JoinGameParams } from '../../store/game/types';\nimport MainContent from '../MainContent';\n\ninterface Props extends RouteComponentProps<any> {\n  joinGame: (params: JoinGameParams) => void,\n}\n\nconst JoinMenu: FunctionComponent<Props> = ({\n  joinGame,\n  history,\n}) => {\n  const [name, setName] = useState('');\n  const handleNameChange = (\n    (event:React.ChangeEvent<HTMLInputElement>) => setName(event.target.value)\n  );\n\n  const { code } = useParams();\n  const handleGoClicked = () => joinGame({\n    name,\n    code: code as string,\n    goToGame: (code: string) => history.push(`/game/${code}`),\n  });\n\n  const hasName = name.length > 0;\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n      <Grid item>\n        <MainContent>\n          <form onSubmit={handleGoClicked}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography>\n                  <Emoji symbol=\"👥\"/>\n                  <span>Join a game</span>\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Player name\"\n                  value={name}\n                  onChange={handleNameChange}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={!hasName}\n                  onClick={handleGoClicked}\n                >\n                  <Emoji symbol=\"🙌\"/>\n                  <span>Go!</span>\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </MainContent>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withRouter(JoinMenu);\n","import JoinMenu from './JoinMenu';\nimport { connect } from 'react-redux';\nimport { AppDispatch } from '../../store';\nimport { joinGame } from '../../store/game';\nimport { JoinGameParams } from '../../store/game/types';\n\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  joinGame: (params: JoinGameParams) => {\n    dispatch(joinGame(params));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(JoinMenu);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawerButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst TopBarTitle = () => (\n  <Grid\n    container\n    direction=\"row\"\n    justify=\"flex-start\"\n    alignItems=\"center\"\n    spacing={2}\n  >\n    <Hidden smUp implementation=\"css\">\n      <Grid item>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          Doodle\n        </Typography>\n      </Grid>\n    </Hidden>\n    <Hidden xsDown implementation=\"css\">\n      <Grid item>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          Doodle - A crazy drawing &amp; guessing chain game\n        </Typography>\n      </Grid>\n    </Hidden>\n  </Grid>\n);\n\nexport default TopBarTitle;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  iconButton: {\n    color: 'white',\n  },\n}));\n\nexport default useStyles;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"GitHub icon\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n});\n\nvar SvgGithub = function SvgGithub(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    role: \"img\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGithub, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github.617870e4.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Ko-fi icon\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.881 8.948c-.773-4.085-4.859-4.593-4.859-4.593H.723c-.604 0-.679.798-.679.798s-.082 7.324-.022 11.822c.164 2.424 2.586 2.672 2.586 2.672s8.267-.023 11.966-.049c2.438-.426 2.683-2.566 2.658-3.734 4.352.24 7.422-2.831 6.649-6.916zm-11.062 3.511c-1.246 1.453-4.011 3.976-4.011 3.976s-.121.119-.31.023c-.076-.057-.108-.09-.108-.09-.443-.441-3.368-3.049-4.034-3.954-.709-.965-1.041-2.7-.091-3.71.951-1.01 3.005-1.086 4.363.407 0 0 1.565-1.782 3.468-.963 1.904.82 1.832 3.011.723 4.311zm6.173.478c-.928.116-1.682.028-1.682.028V7.284h1.77s1.971.551 1.971 2.638c0 1.913-.985 2.667-2.059 3.015z\"\n});\n\nvar SvgKoFi = function SvgKoFi(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    role: \"img\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgKoFi, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/ko-fi.8a7c9b92.svg\";\nexport { ForwardRef as ReactComponent };","import React, {\n  FunctionComponent,\n  useState,\n} from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport HelpIcon from '@material-ui/icons/Help';\n\nimport useStyles from './TopBarLinks.styles';\nimport { ReactComponent as GitHub } from './github.svg';\nimport { ReactComponent as Kofi } from './ko-fi.svg';\nimport { HowToPlayDialog } from '../HowToPlay';\n\nconst openUrl = (url: string) => window.open(url, '_blank');\n\ntype Props = {\n  gameStarted: boolean,\n};\n\nconst TopBarLinks: FunctionComponent<Props> = ({\n  gameStarted,\n}) => {\n  const classes = useStyles();\n\n  const [helpOpen, setHelpOpen] = useState(false);\n  const handleHelpClicked = () => setHelpOpen(true);\n  const handleHelpClosed = () => setHelpOpen(false);\n\n  const howToPlay = gameStarted\n    ? (\n      <Grid item>\n        <Button\n          className={classes.iconButton}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleHelpClicked}\n          startIcon={<HelpIcon />}\n        >\n          How to play\n        </Button>\n      </Grid>\n    )\n    : undefined;\n\n  return (\n    <>\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={0}>\n        {howToPlay}\n        <Grid item>\n          <Tooltip title=\"Support the project on Ko-fi ☕\" placement=\"bottom\">\n            <IconButton\n              className={classes.iconButton}\n              onClick={() => openUrl('https://ko-fi.com/dsaltares')}\n            >\n              <SvgIcon>\n                <Kofi />\n              </SvgIcon>\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip title=\"Check out the source code! 💻\" placement=\"bottom\">\n            <IconButton\n              className={classes.iconButton}\n              onClick={() => openUrl('https://github.com/dsaltares/doodle')}\n            >\n              <SvgIcon>\n                <GitHub href=\"https://github.com/dsaltares/doodle\"/>\n              </SvgIcon>\n            </IconButton>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    <HowToPlayDialog open={helpOpen} onClose={handleHelpClosed} />\n    </>\n  );\n};\n\nexport default TopBarLinks;\n","import { connect } from 'react-redux';\n\nimport TopBarLinks from './TopBarLinks';\nimport { RootState } from '../../store/reducers';\n\nconst mapStateToProps = (state: RootState) => {\n  const game = state.game.gameState;\n  return {\n    gameStarted: !!game && game.round.phase.name !== 'initial',\n  };\n};\n\nexport default connect(mapStateToProps)(TopBarLinks);\n","import React, { FunctionComponent } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport useStyles from './TopBar.styles';\nimport TopBarTitle from '../TopBarTitle';\nimport TopBarLinks from '../TopBarLinks';\n\ntype Props = {\n  onToggleDrawer: () => void,\n};\n\nconst TopBar: FunctionComponent<Props> = ({\n  onToggleDrawer,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar >\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n          <Grid item>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  edge=\"start\"\n                  onClick={onToggleDrawer}\n                  className={classes.drawerButton}\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <TopBarTitle />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <TopBarLinks />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopBar;\n","import { makeStyles } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Avataaar from 'avataaars';\n\nimport Emoji from '../Emoji';\nimport pluralize from '../../utils/pluralize';\nimport useStyles from './PlayerListItem.styles';\n\nexport type PlayerState = 'Ready' | 'Thinking' | 'Guessing' | 'Drawing' | 'Looking';\n\ntype Avatar = {\n  topType: string,\n  accessoriesType: string,\n  hairColor: string,\n  facialHairType: string,\n  clotheType: string,\n  clotheColor: string,\n  eyeType: string,\n  eyebrowType: string,\n  mouthType: string,\n  skinColor: string,\n}\n\ntype Props = {\n  name: string,\n  avatar: Avatar,\n  points: number,\n  state?: PlayerState,\n}\n\nconst statusEmojis = {\n  Ready: '✅',\n  Looking: '👀',\n  Thinking: '🤔',\n  Guessing: '🕵️‍♂️',\n  Drawing: '✏️',\n}\n\nconst PlayerItem: FunctionComponent<Props> = ({\n  name,\n  avatar,\n  points,\n  state,\n}) => {\n  const classes = useStyles();\n  return (\n    <ListItem divider>\n      <ListItemAvatar>\n        <Avatar variant=\"rounded\" alt={name} className={classes.avatar}>\n          <Avataaar\n            avatarStyle=\"Circle\"\n            topType={avatar.topType}\n            accessoriesType={avatar.accessoriesType}\n            hairColor={avatar.hairColor}\n            facialHairType={avatar.facialHairType}\n            clotheType={avatar.clotheType}\n            clotheColor={avatar.clotheColor}\n            eyeType={avatar.eyeType}\n            eyebrowType={avatar.eyebrowType}\n            mouthType={avatar.mouthType}\n            skinColor={avatar.skinColor}\n          />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={name}\n        secondary={`${points} ${pluralize('point', 'points', points)}`}\n      />\n      {\n        state && (\n          <ListItemSecondaryAction>\n            <Typography variant=\"h5\">\n              <Emoji symbol={statusEmojis[state]} />\n            </Typography>\n          </ListItemSecondaryAction>\n        )\n      }\n    </ListItem>\n  );\n};\n\nexport default PlayerItem;\n","import { connect } from 'react-redux';\nimport PlayerListItem, { PlayerState } from './PlayerListItem';\nimport { RootState } from '../../store/reducers';\nimport { selectors } from '../../store/game';\nimport {\n  CreateEntryPhase,\n  EntryChoicePhase,\n  Player,\n} from '../../store/game/types';\nimport { MIN_PLAYERS } from '../../store/game/constants';\n\ntype Props = {\n  id: string\n}\n\nconst getPlayerState = (\n  state: RootState,\n  id: string,\n  isWaiting: boolean,\n): PlayerState | undefined => {\n  if (!state.game.gameState || isWaiting) {\n    return;\n  }\n\n  const game = state.game.gameState;\n  const createdByCurrentPlayer = game.createdBy === id;\n  const numPlayers = Object.keys(game.players).length;\n\n  switch(game.round.phase.name) {\n    case 'initial':\n      if (createdByCurrentPlayer) {\n        return numPlayers >= MIN_PLAYERS ? 'Thinking' : 'Looking';\n      }\n      return 'Ready';\n    case 'conceptChoice': {\n      const hasChosen = !!game.round.concepts[id];\n      return hasChosen ? 'Ready' : 'Thinking';\n    }\n    case 'createEntry': {\n      if (selectors.playerHasSubmitted(state, id)) {\n        return 'Ready';\n      }\n\n      const createPhase = game.round.phase as CreateEntryPhase;\n      const isDrawingPhase = createPhase.index % 2 === 0;\n      return isDrawingPhase ? 'Drawing' : 'Guessing';\n    }\n    case 'entryChoice': {\n      const choicePhase = game.round.phase as EntryChoicePhase;\n      const playerInTurn = game.round.order[choicePhase.index];\n      const isPlayerTurn = playerInTurn === id;\n      const stack = game.round.stacks[id];\n      const alreadyChosen = !!stack.chosen;\n      const alreadyAcknowledged = !!choicePhase.acknowledgedBy[id];\n\n      if (alreadyAcknowledged) {\n        return 'Ready';\n      }\n\n      if (alreadyChosen) {\n        return isPlayerTurn ? 'Ready' : 'Looking';\n      }\n\n      return isPlayerTurn ? 'Thinking' : 'Looking';\n    }\n  }\n};\n\nconst mapStateToProps = (state: RootState, ownProps: Props) => {\n  const player = selectors.player(state, ownProps.id) as Player;\n  const isWaiting = selectors.isWaiting(state, ownProps.id);\n\n  return {\n    ...player,\n    state: getPlayerState(state, ownProps.id, isWaiting),\n  };\n}\n\nexport default connect(mapStateToProps)(PlayerListItem);\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default useStyles;\n","import React, { FunctionComponent } from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport PlayerListItem from '../PlayerListItem';\nimport useStyles from './PlayerList.styles';\n\nexport type Props = {\n  visible: boolean,\n  playerIds: string[],\n  minPlayers: number,\n  maxPlayers: number,\n  gameStarted: boolean,\n}\n\nconst PlayerSkeleton = () => {\n  const classes = useStyles();\n  return (\n    <ListItem divider>\n      <ListItemAvatar>\n        <Skeleton variant=\"circle\" height={64} width={64} className={classes.avatar}/>\n      </ListItemAvatar>\n      <ListItemText\n        primary={<Skeleton variant=\"text\" width={100} />}\n        secondary={<Skeleton variant=\"text\" width={50} />}\n      />\n    </ListItem>\n  );\n};\n\nconst PlayerList: FunctionComponent<Props> = ({\n  visible,\n  playerIds,\n  minPlayers,\n  maxPlayers,\n  gameStarted,\n}) => {\n  if (!visible) {\n    return null;\n  }\n\n  const numPlayers = playerIds.length;\n  const remainingPlayers = Math.max(0, maxPlayers - numPlayers);\n  const skeletons = !gameStarted\n    ? Array.from(Array(remainingPlayers).keys()).map(index => (\n      <PlayerSkeleton key={`skeleton_${index}`} />\n    ))\n    : [];\n  const getMessage = () => {\n    if (numPlayers < minPlayers) {\n      const needed = minPlayers - numPlayers;\n      return `${needed} needed`;\n    }\n    if (numPlayers === maxPlayers) {\n      return 'game full';\n    }\n    return `${numPlayers}/${maxPlayers}`;\n  };\n\n  return (\n    <List subheader={(\n      <ListSubheader>Players - {`${getMessage()}`}</ListSubheader>\n    )}>\n      {[\n        ...playerIds.map(id => (<PlayerListItem key={id} id={id} />)),\n        ...skeletons,\n      ]}\n    </List>\n  );\n};\n\nexport default PlayerList;\n","import { connect } from 'react-redux';\nimport PlayerList from './PlayerList';\nimport { RootState } from '../../store/reducers';\nimport { selectors } from '../../store/game';\nimport {\n  MIN_PLAYERS,\n  MAX_PLAYERS,\n} from '../../store/game/constants';\n\nconst mapStateToProps = (state: RootState) => ({\n  visible: !!state.game.player,\n  playerIds: selectors.playerIds(state),\n  minPlayers: MIN_PLAYERS,\n  maxPlayers: MAX_PLAYERS,\n  gameStarted: Boolean(state.game.gameState && state.game.gameState.round.phase.name !== 'initial'),\n});\n\nexport default connect(mapStateToProps)(PlayerList);\n","import React, { FunctionComponent } from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport PlayerListItem from '../PlayerListItem';\n\nexport type Props = {\n  visible: boolean,\n  playerIds: string[],\n}\n\nconst WaitingPlayerList: FunctionComponent<Props> = ({\n  visible,\n  playerIds,\n}) => {\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <List subheader={(\n      <ListSubheader>Waiting players</ListSubheader>\n    )}>\n      {\n        playerIds.map(id => (<PlayerListItem key={id} id={id} />))\n      }\n    </List>\n  );\n};\n\nexport default WaitingPlayerList;\n","import { connect } from 'react-redux';\nimport WaitingPlayerList from './WaitingPlayerList';\nimport { RootState } from '../../store/reducers';\nimport { selectors } from '../../store/game';\n\nconst mapStateToProps = (state: RootState) => {\n  const game = state.game.gameState;\n  return {\n    visible: !!game && Object.keys(game.waitingPlayers).length > 0,\n    playerIds: selectors.waitingPlayerIds(state),\n  };\n};\n\nexport default connect(mapStateToProps)(WaitingPlayerList);\n","import React, { FunctionComponent } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport useStyles from './SideBar.styles';\nimport PlayerList, { WaitingPlayerList } from '../PlayerList';\n\ntype Props = {\n  drawerOpen: boolean,\n  onToggleDrawer: () => void,\n}\n\nconst SideBar: FunctionComponent<Props> = ({\n  drawerOpen,\n  onToggleDrawer,\n}) => {\n  const classes = useStyles();\n\n  const drawer = (\n    <React.Fragment>\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <PlayerList />\n        <WaitingPlayerList />\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <React.Fragment>\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          className={classes.drawer}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open={drawerOpen}\n          onClose={onToggleDrawer}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          variant=\"permanent\"\n          className={classes.drawer}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </React.Fragment>\n  );\n};\n\nexport default SideBar;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default useStyles;\n","import { useEffect, EffectCallback } from 'react';\n\nconst useMountEffect = (fn: EffectCallback) => useEffect(fn, [])\n\nexport default useMountEffect;\n","import React, {\n  useState,\n  FunctionComponent,\n} from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Menu from '../Menu';\nimport Game from '../Game';\nimport JoinMenu from '../JoinMenu';\nimport TopBar from '../TopBar';\nimport SideBar from '../SideBar';\nimport useStyles from './App.styles';\nimport useMountEffect from '../../utils/useMountEffect';\n\ntype Props = {\n  playerName?: string,\n  connect: () => void,\n}\n\nconst App: FunctionComponent<Props> = ({\n  playerName,\n  connect,\n}) => {\n  useMountEffect(() => {\n    connect();\n  });\n\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const onToggleDrawer = () => setDrawerOpen(!drawerOpen);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar onToggleDrawer={onToggleDrawer} />\n      {\n        playerName\n          ? (\n            <SideBar\n              drawerOpen={drawerOpen}\n              onToggleDrawer={onToggleDrawer}\n            />\n          )\n          : null\n      }\n      <div className={classes.content}>\n        <Toolbar />\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <Menu />\n            </Route>\n            <Route exact path=\"/game/:code\">\n              {\n                playerName\n                  ? <Game />\n                  : <JoinMenu />\n              }\n            </Route>\n          </Switch>\n        </HashRouter>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { connect } from 'react-redux';\n\nimport App from './App';\nimport { AppDispatch } from '../../store';\nimport { connect as connectToSocket } from '../../store/socket';\nimport { subscribe } from '../../store/game';\nimport { RootState } from '../../store/reducers';\n\nconst mapStateToProps = (state: RootState) => ({\n  playerName: state.game.config.name,\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  connect: () => {\n    dispatch(connectToSocket((socket) => {\n      subscribe(dispatch, socket);\n    }));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const LIVE_SERVER_SOCKET = process.env.NODE_ENV === 'development'\n  ? 'http://localhost:3001'\n  : 'https://api.doodle.saltares.com';\n","import { combineReducers } from '@reduxjs/toolkit';\nimport socket from './socket';\nimport game from './game';\n\nconst rootReducer = combineReducers({\n  socket,\n  game,\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>\n","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppGetState = typeof store.getState;\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport  CssBaseline from '@material-ui/core/CssBaseline';\n\nimport App from './components/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <CssBaseline />\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}